%% Biostatistics Unit Consulting Report Template
%% Version 2.1
%% Sarah R Haile, 2010.12.14
%% Sina Rüeger, 2012.02.20, 2012.12.06 (for STA490)
%% Eva Furrer, 2013.02.01 (for STA490)
\documentclass[11pt, a4paper]{article}
\usepackage{Sweave}

%\usepackage{standardmacros} %macros by statistical institut of University of Zurich
\usepackage[USenglish]{babel} %francais, polish, spanish, \dots
\usepackage[T1]{fontenc}
\usepackage[ansinew]{inputenc}
\usepackage{framed}

%\usepackage{caption}
\usepackage{subcaption}
%% Packages for Graphics & Figures %%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{graphicx} %%For loading graphic files

\usepackage{tabularx}
\usepackage{booktabs}
%\usepackage{subfig} %%Subfigures inside a figure
\usepackage{rotating}
\usepackage{siunitx}
\usepackage{tikz} %%Generate vector graphics from within LaTeX
\usepackage{multirow}
\usepackage{afterpage}
\usepackage{supertabular}
\usepackage{colortbl}
%\usepackage[latin1]{inputenc}
\usepackage{longtable}
\usepackage{here}
\usepackage{bbding}
\usepackage{pifont}
\usepackage{lscape}
\usepackage{Sweave}
\usepackage[toc,page]{appendix}
\usepackage[table]{xcolor} %for colouring rows/cols in tables!

%% Math Packages %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\usepackage{amsmath}
%\usepackage{amsthm}
\usepackage{amsfonts}
\usepackage{wasysym}
%\usepackage[labelformat=empty]{caption} %tables without caption numbering!!!
% sans serif caption (added by sina)
%\usepackage[font=sf, labelfont={sf}, margin=1cm]{caption}
\usepackage[font={sf,scriptsize},labelfont=bf]{caption} %size (scriptsize) and type (sf=sans serif) of captions
\usepackage{verbatim}
\usepackage[vmargin=3cm, hmargin=2cm]{geometry}
\usepackage{url}
\usepackage{hyperref}
\usepackage{fancyhdr}
\usepackage{color}
\usepackage{amsmath, amssymb}
\usepackage{longtable}
\usepackage{lscape}
\usepackage[round]{natbib}
\usepackage{xspace}
\usepackage{here}
\usepackage{multirow}
\usepackage{rotating}
\usepackage{rotfloat}
\usepackage{supertabular}
\usepackage[toc,page]{appendix}
\usepackage{tabularx}
\usepackage{arydshln} %for dashed lines
\usepackage{lscape}
\usepackage{graphicx}
\usepackage{textcomp}



%\renewcommand\thefigure{\thesection.\arabic{figure}}  
\setcounter{figure}{0} 
\setcounter{table}{0}
\renewcommand{\thetable}{S\arabic{table}} %all table Numbers have an S before number
\renewcommand{\thefigure}{S\arabic{figure}} %all figure Numbers have an S before number
% Use Palatino (URW Palladio) for most of the text\ldots
%\usepackage[sc]{mathpazo}
\linespread{1.05} 

% And Arial for the rest
%\usepackage[scaled]{helvet}


% DEUTSCH
%\usepackage[german]{babel}
%\usepackage[T1]{fontenc}
\usepackage[latin1]{inputenc}
\tabcolsep 3pt
% =======================================
% Personalized layout
\newcommand{\name}{Sereina M. Graber}
\newcommand{\mail}{sereina.graber@uzh.ch}
\newcommand{\versiondate}{\today}
%\newcommand{\client}{Dr. Sarosh Irani} % umlaute: \"a = ä
\newcommand{\subtitle}{Ecology is the Main Driver of Primate Brain Size Evolution}
% =======================================

%\newcommand{\web}{www.math.uzh.ch/biostat}
%\newcommand{\grp}{Supplementary Information}
%\newcommand{\inst}{Graber et al.}
%\newcommand{\img}{\includegraphics[height=17mm, width = 53mm]{uzh_logo_e_pos}}
\newcommand{\of}{of\xspace}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}
\newcommand{\mytitle}[3]{
\begin{center}
\vspace*{-2.1cm}

%\HRule

\vspace*{0.4cm}

%\begin{minipage}{0.4\textwidth}
\thispagestyle{empty}
%\begin{flushleft}
%\hspace*{1cm}\img
%\end{flushleft}
%\end{minipage}
%\begin{minipage}{0.59\textwidth}
%\begin{flushleft} \large
%    \hspace*{3.8cm} \textsf{\grp} \\
%    \hspace*{3.8cm} \href{http://\web}{\textsf{\emph{\web}}}
%\end{flushleft}
%\end{minipage}

%\vspace*{0.4cm} \HRule

\bigskip

\textsf{\LARGE #2} \vspace*{0.5cm}

\large{#1}

\medskip

\large{Corresponding author: \name \ (\textit{\mail})}

\medskip

Version \of \versiondate

\end{center}

\medskip
}


% Headers and footers
%\fancypagestyle{standard}{
%\fancyhf{}
%\renewcommand{\footrulewidth}{0.4pt}
%\fancyfoot[ce, co]{\thepage}
%\fancyfoot[le, lo]{\textsf{\name}, \href{\mail}{\textsf{\emph{\mail}}}}
%\fancyfoot[re, ro]{\textsf{\versiondate}}
%\renewcommand{\headrulewidth}{0.4pt}
%\fancyhead[ce, co]{}
%\fancyhead[le, lo]{\textsf{\grp}}
%\fancyhead[re, ro]{\textsf{\inst}}
%}

% =======================================
% bibliography
%\bibliographystyle{ims}


% =======================================
% specific options for Sweave:
%   -- saves all produced plots into a subfolder called 'plots'
%   -- does not include R code in the output file
%   -- suppresses output from R
%\SweaveOpts{prefix.string=plots/p, echo = FALSE, results = hide}
% =======================================

% =======================================
% my latex commands
\newcommand{\prog}[1]{\textsf{#1}}
\newcommand{\pkg}[1]{\texttt{#1}}

\begin{document}
\SweaveOpts{concordance=TRUE}

\pagestyle{standard}
\mytitle{Supplementary Information}{\subtitle}

\hline
\tableofcontents 
\hline


\bigskip

%\hrule
%\pagebreak

% =======Some Initial settings for R==============
<<echo=F, results=hide>>=

## Import external functions
## -------------------------

#source("tableRegression.R")
#source("formatPval.R")


## Packages
## --------
library(RColorBrewer)
library(reporttools)
#library(ggplot2)
library(xtable)

## Additional settings
## -------------------

cols <- brewer.pal(3, "Set1")

options(width = 85, digits = 4, show.signif.stars=FALSE)
#alpha <- 0.05
#qa <- qnorm(1 - alpha / 2)

@
%========End of Initial Settings for R============
\newpage


%ANALYSES
% =======================================



%Material and Methods:
\section{Supplementary Material \& Methods}

%\subsection{Data - Brain Size and Body Mass}
%Data on brain size and body mass were retrieved from Isler et al. [31] and Isler and van Schaik [20] which are preferentially based on female values due to sexual dimorphism. Brain size and body mass data on \textit{Presbytis potenziani}, \textit{Phaner furcifer} and \textit{Brachyteles arachnoides} was supplemented based on van Woerden [32]. Because body mass shows significant effects on all the response variables (brain size, social and ecological consequence principal components), it is a necessary covariate in our models. 
%We tested associations with the size of the whole brain (controlled for body mass) for several reasons. The increasing body of evidence for general intelligence [29] argues that the challenges posed by the socio-ecological environment (compound of the measures used in this study) do not have neural correlates in specific neuronal structures but most likely have impacts throughout the whole brain. In fact, it has been shown that cognitive problem solving abilities rely most likely on circuits involving multiple brain parts [33, 34]. Along the same lines, the so-called reuse theory suggests that recombination of neural structures permits different cognitive functions [34], contradicting a modular brain organization. Furthermore, the sizes of particular brain areas are highly correlated with overall brain size [2, 35, 36] and from the cost perspective, energetic and developmental constraints largely reflect the size of the brain in general rather than that of particular regions. Quite apart from all of this, data to date on individual brain parts are still highly limited. \\
%Data on the social and ecological opportunity and consequence variables are established and validated measures and were retrieved from published comparative studies (references given in Supplementary Table S1) as well as major mammalian encyclopedias including the Handbook of the Mammals of the World [37] and the Animal Diversity Web [38].\\


%\subsection{Data - Social and Ecological Opportunities/Consequences}
%Social and ecological opportunity variables provide necessary but not sufficient conditions for the evolution of increased brain size. They indicate potential selective agents that may allow for an increase in brain size in some lineages, but not in others, depending on the strength of developmental and energetic constraints.
%For social opportunities we collected species-level data on various social traits including social organization, and mating and rearing system. We included characteristics that have either been used in previous primate studies to test the social brain hypothesis or are closely related to those (reviewed in [37]). Group size, as the most prominent example, depicts a potential selective agent in that enhanced cognitive abilities are beneficial in order to maintain multiple social bonds or track social interactions among other group members. However, living in larger groups per se does not necessarily require a large brain.\\
%For ecological opportunities, we collected data on various environmental and dietary traits that have been used in earlier studies (reviewed in [37]) or estimate additional niche characteristics that do not necessarily presuppose enhanced cognitive abilities, but may represent selective agents for them. For example, a highly seasonal habitat poses the ecological challenge of how to deal with food scarcity. During the low food season, greater cognitive abilities may be beneficial for the recognition and exploitation of alternative foods resources. However, because lean seasons can also be responded to in other ways (e.g. hibernation, fat storage), seasonality is merely an opportunity variable for increased encephalization. %Table ~\ref{table:variables} provides the descriptions and numerical codings.
%\\
%\subsection{Data - Social and Ecological Consequences}
%For the socio-and eco-cognitive consequence variables we selected measures assumed to require a higher degree of cognitive abilities, several of which have been shown to be related to brain size in previous studies (e.g. [16]). Table ~\ref{table:variables} provides the descriptions and the numerical codings for all variables.
%\\\\
%Data on the social and ecological opportunity and consequence variables are established and validated measures and were retrieved from published comparative studies as well as major mammalian encyclopedias including the Handbook of the Mammals of the World [38] and the Animal Diversity Web [39] (Table ~\ref{table:variables}, detailed references in the Supplementary Data Table). Due to a broad range of species as well as a large compilation of variables, several variables rely on multiple references. 
%Therefore, we assigned priorities based on the year of publication as well as number of species covered, and compiled the variables values accordingly.\\
%In case of multiple possible values based on within-species variation (between-population variation), 
%Within-species variation for many social as well as ecological variables is unquestioned. In case of conflicting values of different sources or different populations, 
%we assigned the value representing the potentially highest level of complexity in a species. In concordance with our hypotheses, the highest level of complexity in opportunities presumably represents the predominating selective agent on enlarged brain size and in case of consequences, it reflects the potentially most complex consequence of enlarged brain size. For example, species which show variation in mating systems being either polygynous or polygynandrous were classified as polygynandrous. 
%For certain species there were occasionally no data available from the main compilations and thus were added based on single references or in case of predation risk and food sharing were classified according to the original reference. However, for species where no data was available for limiting variables, such as visual trait dimorphism or environmental seasonality, no data for other variables were collected, even though they might be available.\\
%Please note that we followed the latest taxonomy according to the IUCN red list 2016 [40] and adpated the data compilation accordingly.\\
%A total of 92 species were included in the four domains (social and ecological opportunities, social and ecological consequences). They are evenly distributed across the various primate lineages (Figure ~\ref{fig:tree}).


 
\begin{figure}[H]
\centering
<<echo=F, fig=TRUE, width=16, height=14>>=

##plot according to Szimek:
## data
## here goes your data
setwd("D:/University/PhD/social vs. ecological factor in brain size evolution/Analyses")
data.use <- read.table("appendix_primate_data_2.txt", header=T, sep="\t")

levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Bunopithecus_hoolock"] <- "Hoolock_hoolock"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Callithrix_pygmaea"] <- "Cebuella_pygmaea"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Hylobates_syndactylus"] <- "Symphalangus_syndactylus"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Callithrix_argentata"] <- "Mico_argentatus"
#levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Galago_elegantulus"] <- "Euoticus_elegantulus"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Hapalemur_simus"] <- "Prolemur_simus"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Hylobates_leucogenys"] <- "Nomascus_leucogenys"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Tarsius_spectrum"] <- "Tarsius_tarsier"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Alouatta_fusca"] <- "Alouatta_guariba"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Galagoides_demidoff"] <- "Galagoides_demidovii"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Galago_alleni"] <- "Sciurocheirus_alleni"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Tarsius_dianae"] <- "Tarsius_dentatus"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Colobus_kirkii"] <- "Piliocolobus_kirkii"
levels(data.use$Genus_species)[levels(data.use$Genus_species)=="Callithrix_humeralifer"] <- "Callithrix_humeralifera" 

## here goes the tree
tree.all <- read.nexus("Perelman292res.nex")

## subsetting the tree to what's in the data
tree.sub <- drop.tip(tree.all, setdiff(tree.all$tip.label, levels(data.use$Genus_species)))


## plot the tree
par(mar=c(5, 4, 4, 9) + 0.1)
# here you set how far from the edge of the plots are the tips - leaves you
# the place for data plotted arround the tree

limit <- 160

plot(tree.sub, type="fan", show.tip.label=T,no.margin=T,x.lim=c(-limit, limit),y.lim=c(-limit, limit),edge.color="gray47", cex=1.3 , label.offset=25)


#----------------------------plot Social opportunities--------------------------

# a categorical trait with 2 states

# extract the states for all species
trait_history <- data.use$Social.opportunities

# name the states using species names from the tree
names(trait_history)<-data.use$Genus_species

# control - how many tips we have?
#Ntip(tree.sub)

# generate a sequence of angles around the tree equal in number
# with the number of tips
# the last bit removes angle 360 as it overlaps with 0
ang <- seq(0,360,length.out = Ntip(tree.sub)+1)[-Ntip(tree.sub)] #original from Szimek

# express angles in radians
ang <- ang*pi/180

# set the distance between tips and bottom edge of data circle
# 0 is at the root, the number you use will depend on the length
# of you tree (sum of branch length to the tip)

st.pt <- 85 ->start #110

# set the size of data bars (i.e. the width of data circle)
bar.l <- 5

# this part orders the states so that they're in the order they appear
# on the tree
states <- trait_history
states <- states[tree.sub$tip.label[tree.sub$edge[tree.sub$edge[,2]<=Ntip(tree.sub),2]]]
states <- as.factor(states)

# define colours for you states
levels(states) <- c("white", "cornflowerblue")  #c("deepskyblue","deepskyblue4") 

# change states from categroiec to characters (so that colours
# are understood by R as text strings)
states <- as.character(states)

# this variable describes outer radius of data cricle
radius <- start + bar.l

# plot the coloured segments around thr tree
# for each segment you provide x and y for bottom end
# and x and y for top end
# x is formed from angle using cosine and y is formed using sine
# just basic trigonometry
d <- data.frame(states,angles=ang, x1=cos(ang)*st.pt, x2=cos(ang)*radius, y1=sin(ang)*st.pt, y2=sin(ang)*radius) #added by Sereina
#head(d)
d[nrow(d),c(5:6)] <- c(-4.91831e+0, -5.404291e+00) #added by Sereina
segments(d$x1, d$y1, d$x2, d$y2, lwd=5, col=states, lend=1) #added by Sereina

#segments(cos(ang)*st.pt, sin(ang)*st.pt, cos(ang)*radius, sin(ang)*radius, lwd=5, col=states, lend=1) #original by Smizek Drobniak

#----------------plot ecologcial opportunities------------------------------------

# a categorical trait with 2 states

# extract the states for all species
trait_history <- data.use$Ecological.opportunities
names(trait_history)<-data.use$Genus_species
#Ntip(tree.sub)


ang <- seq(0,360,length.out = Ntip(tree.sub)+1)[-Ntip(tree.sub)]

# express angles in radians
ang <- ang*pi/180

# set the distance between tips and bottom edge of data circle
# 0 is at the root, the number you use will depend on the length
# of you tree (sum of branch length to the tip)

st.pt <- 92 ->start

# set the size of data bars (i.e. the width of data circle)
bar.l <- 5

# this part orders the states so that they're in the order they appear
# on the tree
states <- trait_history
states <- states[tree.sub$tip.label
                 [tree.sub$edge
                  [tree.sub$edge[,2]<=Ntip(tree.sub),2]]]
states <- as.factor(states)

# define colours for you states
levels(states)<-c("white","darkolivegreen2")

# change states from categroiec to characters (so that colours
# are understood by R as text strings)
states <- as.character(states)

# this variable describes outer radius of data cricle
radius <- start + bar.l

d <- data.frame(states,angles=ang, x1=cos(ang)*st.pt, x2=cos(ang)*radius, y1=sin(ang)*st.pt, y2=sin(ang)*radius) #added by Sereina
#head(d)
d[nrow(d),c(5:6)] <- c(-4.91831e+0, -5.404291e+00) #added by Sereina
segments(d$x1, d$y1, d$x2, d$y2, lwd=5, col=states, lend=1) #added by Sereina
#segments(cos(ang)*st.pt, sin(ang)*st.pt,cos(ang)*radius, sin(ang)*radius, lwd=5, col=states, lend=1)



#----------------plot social outcomes------------------------------------

# a categorical trait with 2 states

# extract the states for all species
trait_history <- data.use$Social.outcomes
names(trait_history)<-data.use$Genus_species
#Ntip(tree.sub)


ang <- seq(0,360,length.out = Ntip(tree.sub)+1)[-Ntip(tree.sub)]

# express angles in radians
ang <- ang*pi/180

# set the distance between tips and bottom edge of data circle
# 0 is at the root, the number you use will depend on the length
# of you tree (sum of branch length to the tip)

st.pt <- 99 ->start

# set the size of data bars (i.e. the width of data circle)
bar.l <- 5

# this part orders the states so that they're in the order they appear
# on the tree
states <- trait_history
states <- states[tree.sub$tip.label
                 [tree.sub$edge
                  [tree.sub$edge[,2]<=Ntip(tree.sub),2]]]
states <- as.factor(states)

# define colours for you states
levels(states)<-c("white","darkblue")

# change states from categroiec to characters (so that colours
# are understood by R as text strings)
states <- as.character(states)

# this variable describes outer radius of data cricle
radius <- start + bar.l

d <- data.frame(states,angles=ang, x1=cos(ang)*st.pt, x2=cos(ang)*radius, y1=sin(ang)*st.pt, y2=sin(ang)*radius) #added by Sereina
#head(d)
d[nrow(d),c(5:6)] <- c(-4.91831e+0, -5.404291e+00) #added by Sereina
segments(d$x1, d$y1, d$x2, d$y2, lwd=5, col=states, lend=1) #added by Sereina
#segments(cos(ang)*st.pt, sin(ang)*st.pt,cos(ang)*radius, sin(ang)*radius, lwd=5, col=states, lend=1)



#----------------plot ecological outcomes------------------------------------

# a categorical trait with 2 states

# extract the states for all species
trait_history <- data.use$Ecological.outcomes
names(trait_history)<-data.use$Genus_species
#Ntip(tree.sub)


ang <- seq(0,360,length.out = Ntip(tree.sub)+1)[-Ntip(tree.sub)]

# express angles in radians
ang <- ang*pi/180

# set the distance between tips and bottom edge of data circle
# 0 is at the root, the number you use will depend on the length
# of you tree (sum of branch length to the tip)

st.pt <- 106 ->start

# set the size of data bars (i.e. the width of data circle)
bar.l <- 5

# this part orders the states so that they're in the order they appear
# on the tree
states <- trait_history
states <- states[tree.sub$tip.label
                 [tree.sub$edge
                  [tree.sub$edge[,2]<=Ntip(tree.sub),2]]]
states <- as.factor(states)

# define colours for you states
levels(states)<-c("white","darkolivegreen4")

# change states from categroiec to characters (so that colours
# are understood by R as text strings)
states <- as.character(states)

# this variable describes outer radius of data cricle
radius <- start + bar.l

d <- data.frame(states,angles=ang, x1=cos(ang)*st.pt, x2=cos(ang)*radius, y1=sin(ang)*st.pt, y2=sin(ang)*radius) #added by Sereina
#head(d)
d[nrow(d),c(5:6)] <- c(-4.91831e+0, -5.404291e+00) #added by Sereina
segments(d$x1, d$y1, d$x2, d$y2, lwd=5, col=states, lend=1) #added by Sereina
#segments(cos(ang)*st.pt, sin(ang)*st.pt,cos(ang)*radius, sin(ang)*radius, lwd=5, col=states, lend=1)


legend(-177,-100, legend=c("social opportunities", "ecological opportunities", "social consequences", "ecological consequences"), col=c("cornflowerblue" , "darkolivegreen2","darkblue", "darkolivegreen4"), pch=15, bty="n", cex=1.3)
@
\caption{\scriptsize{Phylogenetic tree of the 92 primate species showing the availability of information on the variables in the four domains including social/ecological opportunity and consequence variables.}}
\label{fig:tree}
\end{figure}



% Table generated by Excel2LaTeX from sheet 'Sheet1'
\begin{table}[htbp]
  \centering
  \caption{\scriptsize{Measurements and numerical codings of variables}}
  \begingroup\fontsize{9pt}{10pt}\selectfont
    \begin{tabular}{ll}
    \toprule
    Variables & Measurements/Levels \\
    \midrule
    \textbf{Social Opportunities} &  \\
    Social system &  solitary = 0, sm-sF = 1,  sM-mF/mM-sF = 2,  mM-mF = 3 \\
    Home range overlap &  \% of the total range \\
    Vocal territorial advertisement  &  no=0, yes=1 \\
    Group size  & count \\
    Gregariousness &  solitary=1, pairs=2,  groups=3 \\
    Fission-fusion  &  no=0, yes=1 \\
    Dispersal &  f/m=0, both f and m=1 \\
    Mating system  & monogamous=1, polygyn/polyandr.=2, polgynandrous=3 \\
    Body size dimorphism  & male / female body mass \\
    Visual trait dimorphism  & sum of sex. dim. in every discernible ornament \\
    Cooperative breeding  &  no=0, yes=1 \\
    \hline
    \textbf{Ecological opportunities} &  \\
    Activity period  &  nocturnal=0, diurnal=1 \\
    Habitat  &  open=0, wooded=1 \\
    Substrate  &  terrestrial=0, arboreal=1 \\
    Predation risk  &  low=1, medium=2,  high=3 \\
    Mobility in ranging area  & D-index=average daily path length / diameter ranging area \\
    Home range size & in $km^{2}$ \\
    Environmental seasonality &  coefficient of variation (CV) in plant productivity \\
    Faunivory  & annual mean proportion of insects and meat in diet \\
    Frugivory  & annual mean proportion of fruits and seeds in diet \\
    Folivory  & annual mean proportion of leaves in diet \\
    Extractive foraging &   no=0, yes=1 \\
    Diet quality &  sum of annual mean proportion of each diet category times its quality value \\
    \hline
    \textbf{Socio-cognitive consequences} &  \\
    Social learning frequency & orth. residuals log-log with zool. record article count \\
    Coalition formation  &  no=0, mm/ff=1,  mm and ff =2 \\
    Social hunting  &  no=0, yes=1 \\
    Food sharing among adults  &  no=0, yes=1 \\
     \hline
    \textbf{Eco-cognitive consequences} &  \\
    Bu
ering env. Seasonality &  CV in plant productivity - CV in diet composition \\
    Diet breadth  & number of diet categories >=10\% \\
    Hunting  &  no=0, yes=1 \\
    Tool use  &  no=0, only captive=1, wild=2 \\
    Innovation frequency  & orth. residuals log-log with zool. record article count \\
    \bottomrule
    \end{tabular}%
    \endgroup
  \label{tab:addlabel}%
\end{table}%





<<echo=F, results=hide>>=
library(reporttools)

data_desc <- read.table("appendix_primate_data_2.txt", header=T, sep="\t")
data_desc[data_desc==""] <- NA

vars0 <- with( data_desc, data.frame("Social system" = factor(data_desc$Soc1.Social.system.combined), "Home range overlap" = data_desc$Soc1.HR.overlap..Willems.and.van.Schaik.2015., "Vocal territorial adv." = factor(data_desc$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015., levels=c(0,1), labels=c("absent", "present")), "Group size" = data_desc$Soc1.Group.size.combined,"Gregariousness" = factor(data_desc$Soc1.Gregariousness..Isler.and.van.Schaik.2012.,levels=c(0.5,1.5,2), labels=c("solitary", "pairs", "groups")), "Fission-fusion" = factor(data_desc$Soc2.Fission.fusion.combined, levels=c(0,1), labels=c("absent", "present")), "Dispersal" = factor(data_desc$Soc1.Dispersal..Willems.et.al..2013.), "Mating system" = factor(data_desc$Soc1.Mating.system.combined, levels=c("monogam","polyand", "polygyn", "polygynandrous"), labels=c("monogamous","polyandrous", "polygynous", "polygynandrous")), "Body size dimorphism" = data_desc$Soc1.Body.size.dimorphism.combined, "Visual trait dimorphism" = data_desc$Soc1.VisualTraitDim..Grueter.Isler.and.Dixson.2015., "Cooperative breeding" = factor(data_desc$Soc1.Cooperative.breeding.combined, levels=c(0,1), labels=c("absent", "present")), "Activity" = factor(data_desc$Eco1.Activity.combined,levels=c("d", "n", "Nocturnal/Cathemeral"), labels=c("diurnal", "nocturnal", "nocturnal/cathemeral")), "Habitat" = factor(data_desc$Eco1.Habitat.combined, levels=c("o","w"), labels=c("open", "wooded")), "Substrate" = factor(data_desc$Eco1.Substrate.combined, levels=c("a","t"), labels=c("arboreal", "terrestrial")), "Substrate" = factor(data_desc$Eco1.Substrate.combined),"Predation risk" = factor(data_desc$Eco1.Predation.risk..Nunn.and.van.Schaik.2000., levels=c(1,2,3), labels=c("low", "medium", "high")), "Mobility D-index" = data_desc$Eco1.mobility.1..Dindex.combined, "Environmental seasonality" = data_desc$Eco1.CV.NDVI..Janneke.Karin.data.final. , "Insects.meat.diet"=data_desc$Eco1.Proportion.animal.combined, "Fruits.seeds.diet"=data_desc$Eco1.Proportion.fruits.and.seeds..Janneke.data., "Leaves.diet"=data_desc$Eco1.Proportion.leaves..Janneke.data. ,"Extractive.foraging" = factor(data_desc$Eco1.Extractive.foraging.combined, levels=c(0,1), labels=c("absent", "present")), "Diet.quality"=data_desc$Eco1.diet.quality...Janneke.data., "Social.learning.frequency"=data_desc$Soc2.Residuals.social.learning..Reader.et.al..2011., "Coalitions" = factor(data_desc$Soc2.MM.and.FF.coalitions.combined, levels=c(0,1,2), labels=c("absent", "mm or ff", "mm and ff")), "Social.hunting" = factor(data_desc$Soc2.Social.hunting.combined, levels=c(0,1), labels=c("absent", "present")), "Food.sharing.adults" = factor(data_desc$Soc2.FS.adult..Jaeggi.and.van.Schaik.2011., levels=c(0,1,2), labels=c("absent", "present", "present")), "Buffering.env.seasonality"=data_desc$Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final., "Diet.breadth"=data_desc$Eco2.Diet.breadth.combined , "Hunting" = factor(data_desc$Eco2.Hunting.combined, levels=c(0,1), labels=c("absent", "present")),"Tool.use" = factor(data_desc$Eco2.Tool.use..Bentley.Condit.and.Smith.2010., levels=c(0,1,2), labels=c("absent", "present captive", "present wild" )), "Innovation.frequency"=data_desc$Eco2.Residuals.innovation..Reader.et.al..2011. ), check.names = FALSE)

attach(vars0, warn.conflicts = FALSE)

#continuous variables:
vars2 <- vars0[,c("Home.range.overlap","Group.size", "Body.size.dimorphism", "Visual.trait.dimorphism", "Mobility.D.index", "Environmental.seasonality","Insects.meat.diet" , "Fruits.seeds.diet", "Leaves.diet","Diet.quality" ,"Social.learning.frequency","Buffering.env.seasonality","Diet.breadth", "Innovation.frequency")]
tableContinuous(vars2, stats = c("n", "median", "mean", "min", "max"),font.size = "\\fontsize{9pt}{10pt}\\selectfont", cap="Table S2. Descriptive statistics - Continuous variables", caption.placement="top")

#nominal variables:
vars1 <- vars0[, c("Social.system","Vocal.territorial.adv.", "Gregariousness", "Fission.fusion", "Dispersal", "Mating.system", "Cooperative.breeding", "Activity","Habitat","Substrate" ,"Predation.risk", "Extractive.foraging", "Coalitions", "Social.hunting", "Food.sharing.adults", "Hunting","Tool.use")]
tableNominal(vars = vars1,  vertical = T, font.size = "\\fontsize{9pt}{10pt}\\selectfont", cap="Table S3. Descriptive statistics - Ordinal variables", caption.placement="top")

@


% latex table generated in R 3.2.3 by xtable 1.8-2 package
% Wed Jul 06 12:29:20 2016
%\begingroup\fontsize{9pt}{10pt}\selectfont
%\begin{longtable}{lccccc}
%\caption{\scriptsize{Descriptive statistics - Continuous variables}} \\ 
%\toprule
%\hline
% \textbf{Variable} & \textbf{N} & \textbf{Median} & \textbf{Mean} & \textbf{Minimum} & \textbf{Maximum} \\ 
%  \hline
%Home range overlap & 76 &   0.4 &   0.5 &   0.0 &   1.0 \\ 
%  Group size & 88 &  13.4 &  25.3 &   1.2 & 481.8 \\ 
%  Body size dimorphism & 90 &   1.3 &   1.3 &   0.8 &   2.7 \\ 
%  Visual trait dimorphism & 78 &   0.0 &   2.5 &   0.0 &  32.0 \\ 
%  Mobility D index & 82 &   1.3 &   1.5 &   0.1 &   6.2 \\ 
%  Environmental seasonality & 56 &   0.1 &   0.1 &   0.0 &   0.3 \\ 
%  Insects and meat in diet & 87 &   0.0 &   0.1 &   0.0 &   0.6 \\ 
%  Fruits and seeds in diet & 86 &   0.5 &   0.5 &   0.0 &   0.9 \\ 
%  Leaves in diet & 89 &   0.2 &   0.2 &   0.0 &   1.0 \\ 
%  Diet quality & 86 & 460.9 & 449.8 & 197.4 & 684.4 \\ 
%  Social learning frequency & 88 &  -0.4 &   0.0 &  -0.8 &   4.2 \\ 
%  Buffering env. seasonality & 56 &   0.0 &   0.0 &  -0.2 &   0.2 \\ 
%  Diet breadth & 91 &   3.0 &   2.9 &   1.0 &   5.0 \\ 
%  Innovation frequency & 88 &  -0.4 &   0.0 &  -0.9 &   4.5 \\ 
%  \hline
%  \bottomrule
%\label{table:desc.stats.cont}
%\end{longtable}
%\endgroup

%\newpage

% latex table generated in R 3.2.3 by xtable 1.8-2 package
% Wed Jul 06 12:37:53 2016
%\begingroup\fontsize{9pt}{10pt}\selectfont
%\begin{longtable}{ll|rrr}
%\caption{\scriptsize{Descriptive statistics (\%, cumulative \%) - Ordinal variables} }\\ 
%\toprule
%  \hline
% \textbf{Variable} & \textbf{Levels} & \texbf{N} & $\mathbf{\%}$ & $\mathbf{\sum \%}$ \\
% \hline
%Social system & mM-mF & 46 & 56.8 & 56.8 \\ 
%   & mM-sF & 2 & 2.5 & 59.3 \\ 
%   & sM-mF & 18 & 22.2 & 81.5 \\ 
%   & sM-sF & 13 & 16.1 & 97.5 \\ 
%   & solitary & 2 & 2.5 & 100.0 \\ 
 %& all & 81 & 100.0 &  \\ 
%\hline
%Vocal terr. advertising & absent & 41 & 54.0 & 54.0 \\ 
%   & present & 35 & 46.0 & 100.0 \\ 
 %& all & 76 & 100.0 &  \\ 
%\hline
%Gregariousness & solitary & 3 & 3.6 & 3.6 \\ 
%   & pairs & 9 & 10.8 & 14.4 \\ 
%   & groups & 71 & 85.5 & 100.0 \\ 
 %& all & 83 & 100.0 &  \\ 
%\hline
%Fission-fusion & absent & 70 & 83.3 & 83.3 \\ 
%   & present & 14 & 16.7 & 100.0 \\ 
 %& all & 84 & 100.0 &  \\ 
%\hline
%Dispersal & both & 37 & 49.3 & 49.3 \\ 
%   & f & 7 & 9.3 & 58.7 \\ 
%   & m & 31 & 41.3 & 100.0 \\ 
 %& all & 75 & 100.0 &  \\ 
%\hline
%Mating system & monogamous & 10 & 12.1 & 12.1 \\ 
%   & polyandrous & 9 & 10.8 & 22.9 \\ 
%   & polygynous & 37 & 44.6 & 67.5 \\ 
%   & polygynandrous & 27 & 32.5 & 100.0 \\ 
 %& all & 83 & 100.0 &  \\ 
%\hline
%Cooperative breeding & absent & 76 & 87.4 & 87.4 \\ 
%   & present & 11 & 12.6 & 100.0 \\ 
% & all & 87 & 100.0 &  \\ 
%\hline
%Activity & diurnal & 84 & 91.3 & 91.3 \\ 
%   & nocturnal & 5 & 5.4 & 96.7 \\ 
%   & nocturnal/cathemeral & 3 & 3.3 & 100.0 \\ 
 %& all & 92 & 100.0 &  \\ 
%\hline
%Habitat & open & 8 & 9.0 & 9.0 \\ 
%   & wooded & 81 & 91.0 & 100.0 \\ 
 %& all & 89 & 100.0 &  \\ 
%\hline
%Substrate & arboreal & 67 & 74.4 & 74.4 \\ 
%   & terrestrial & 23 & 25.6 & 100.0 \\ 
 %& all & 90 & 100.0 &  \\ 
%\hline
%Predation risk & low & 20 & 24.7 & 24.7 \\ 
%   & medium & 27 & 33.3 & 58.0 \\ 
%   & high & 34 & 42.0 & 100.0 \\ 
% & all & 81 & 100.0 &  \\ 
%\hline
%Extractive foraging & absent & 58 & 64.4 & 64.4 \\ 
%   & present & 32 & 35.6 & 100.0 \\ 
 %& all & 90 & 100.0 &  \\ 
%\hline
%Coalitions & absent & 50 & 72.5 & 72.5 \\ 
%   & mm or ff & 16 & 23.2 & 95.6 \\ 
%   & mm and ff & 3 & 4.3 & 100.0 \\ 
 %& all & 69 & 100.0 &  \\ 
%\hline
%Social hunting & absent & 87 & 96.7 & 96.7 \\ 
%   & present & 3 & 3.3 & 100.0 \\ 
 %& all & 90 & 100.0 &  \\ 
%\hline
%Food sharing adults & absent & 61 & 82.4 & 82.4 \\ 
%   & present & 13 & 17.6 & 100.0 \\ 
%   & present & 0 & 0.0 & 100.0 \\ 
 %& all & 74 & 100.0 &  \\ 
%\hline
%Hunting & absent & 83 & 93.3 & 93.3 \\ 
%   & present & 6 & 6.7 & 100.0 \\ 
% & all & 89 & 100.0 &  \\ 
%\hline
%Tool use & absent & 69 & 75.0 & 75.0 \\ 
%   & present captive & 9 & 9.8 & 84.8 \\ 
%   & present wild & 14 & 15.2 & 100.0 \\ 
 %& all & 92 & 100.0 &  \\ 
%\hline
%\bottomrule
%\label{table:desc.stats.ord}
%\end{longtable}
%\endgroup



%\subsection{Statistical Analysis}
%Due to the broad set of different variables we first applied phylogenetic principal component analyses (pPCA [21]; package phytools [119]) in order to reduce each of the four domains (ecological and social opportunities and consequences) into a limited number of principal components (PC). For subsequent analyses the PCs explaining a major part of the variation were used (cumulative proportion $\geq$ 40\%). For reasons of intuitive interpretation, signs of all factor loadings from a PC were reversed if necessary, so that its values increased with increasing complexity of the traits (note that a systematic reversal of the sign of factor loadings does simply reverse the sign of the PC, and thus does not influence the sizes but only the directions of the effects in subsequent PGLS regressions).
%To test the associations between PCs and relative brain size we subsequently applied phylogenetic least-squares (PGLS) regressions, jointly estimating the phylogenetic signal lambda of the residuals (package caper [120]). Based on our hypothesis, we tested the effect of the PCs on brain size in case of opportunities, whereas in case of consequences, we tested the effect of brain size on the PCs, since here we expect the direction of the effect to be the other way around.\\
%Due to the strong covariance with body mass, especially with ecological variables, all PGLS regressions include body mass as a covariate in order to test the associations with relative brain size. In addition, both brain size and body mass were natural-log transformed in order to achieve evenly distributed residuals required by the model assumptions.
%For the non-parametric bootstrap analyses we calculated the mean and 95\% percentile confidence intervals of the estimates. 1,000 data sets were simulated based on sampling without replacement using a subsample size of 80\% of the original sample size.
%The comparison of the evolutionary rates ($\rho^{2}$ [121]) (Fig. ~\ref{fig:evo_rates}) of opportunities and consequences is based on a likelihood approach [22]. For the analyses we had to use non-phylogenetically controlled PCs in order to capture the rate of the raw phenotypic change (factor loadings of the non-phylogenetic PCA show an equivalent pattern to the one in the pPCA). The function uses a likelihood-ratio test to compare the rates of phenotypic change on a phylogeny under a model with distinct evolutionary rates to a model with a common evolutionary rate.\\
%To control for phylogenetic non-independence we used the primate phylogeny published by Perelman et al. [122] (Figure ~\ref{fig:tree}). All analyses and graphs were performed in the R programming language [123]. 




%FUNCTIONS
<<echo=F>>=

###############################
##FUNCTIONS:
###############################

#load solid arrowhead function (from: http://kktg.net/sgr/otw-portfolio/fig-15-10/):
source("Solid_arrowhead_function.R")

#printbold function(https://gist.github.com/floybix/452201):
source("printbold_function.R")


#xtable function for pgls:
tab_pgls <- function(mod,...){
  if(! class(mod)=="pgls")
    stop("model is not of type pgls")
  r<-length(mod$model$coef)
  tab<-matrix(NA, r, 4)
  rownames(tab) <- attr(summary(mod)$coefficients, "dimnames")[[1]]
  colnames(tab) <- attr(summary(mod)$coefficients, "dimnames")[[2]]
  tab[,]<-matrix(summary(mod)$coefficients, 1, (r*4))
  print(xtable(tab, caption=paste("\\scriptsize{PGLS. Response: ",mod$namey, "; $N$=",mod$n   ,"; $R^{2}$=",round(summary(mod)$r.squared, digits=2), "; $\\lambda$=",round(mod$param[2], digits=2), "; AIC=", round(AIC(mod), digits=2),"}", sep=""), size="\\footnotesize", digits=3, ...),size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top",table.placement="H")
}



library(magrittr) #package used for piping %>%

#xtable function for pgls using gls function in nlme:
tab_gls <- function(mod,...){
  if(! class(mod)=="gls")
    stop("model is not of type gls")
  r <- mod$dims$p
  tab <- matrix(NA, r, 4)
  rownames(tab) <- attr(summary(mod)$tTable, "dimnames")[[1]]
  colnames(tab) <- attr(summary(mod)$tTable, "dimnames")[[2]]
  tab[,]<-matrix(summary(mod)$tTable, 1, (r*4))
  re_name <- mod$call %>% deparse(.) %>% "["(1) %>% strsplit(., "~") %>% "[["(1) %>% "["(1) %>% strsplit(., "=") %>% "[["(1) %>% "["(2) #extract response variable name
  print(xtable(tab, caption=paste("PGLS using gls(). Response:",re_name, "; $N$=",mod$dims$N   ,"; $\\lambda$ =",round(summary(mod)$modelStruct$corStruct[1], digits=2), "; AIC =", round(AIC(mod),digits=2) ), size="\\footnotesize", digits=3, ...), caption.placement="top", table.placement="H")
}



#xtable function for phyloglm:
tab_phyl <- function(mod,...){
if(! class(mod)=="phyloglm")
  stop("model is not of type phyloglm")
if(mod$convergence == 1)
  warning("model did not converge!")
tab<-as.matrix(summary(mod)$coefficients)
if(mod$convergence == 1)
print(xtable(tab, caption=paste("Phylogenetic logistic regression: Not converged!!",deparse(mod$formula),"; N=", mod$n), digits=3, ...), size="\\footnotesize", table.placement = "H", caption.placement="top") 
else
print(xtable(tab, caption=paste("Phylogenetic logistic regression:",deparse(mod$formula),"; $N$ =", mod$n), digits=3, ...), size="\\footnotesize", table.placement = "H", caption.placement="top")
}
@


%DATA PREPARATION
<<echo=F>>=
########################
##DATA Preparation
########################

setwd("D:/University/PhD/Social vs. ecological factor in brain size evolution/Analyses")

#data <- read.table("socioecology_primates_18.txt", header=T ,sep="\t", fill=T )
data <- read.table("appendix_primate_data_2.txt", header=T ,sep="\t", fill=T )


#renames to match with names in phylogenetic tree:
#levels(data$Genus_species)[levels(data$Genus_species)=="Piliocolobus_badius"] <- "Procolobus_badius"
levels(data$Genus_species)[levels(data$Genus_species)=="Bunopithecus_hoolock"] <- "Hoolock_hoolock"
levels(data$Genus_species)[levels(data$Genus_species)=="Callithrix_pygmaea"] <- "Cebuella_pygmaea"
levels(data$Genus_species)[levels(data$Genus_species)=="Hylobates_syndactylus"] <- "Symphalangus_syndactylus"
levels(data$Genus_species)[levels(data$Genus_species)=="Callithrix_argentata"] <- "Mico_argentatus"
#levels(data$Genus_species)[levels(data$Genus_species)=="Galago_elegantulus"] <- "Euoticus_elegantulus"
levels(data$Genus_species)[levels(data$Genus_species)=="Hapalemur_simus"] <- "Prolemur_simus"
levels(data$Genus_species)[levels(data$Genus_species)=="Hylobates_leucogenys"] <- "Nomascus_leucogenys"
levels(data$Genus_species)[levels(data$Genus_species)=="Tarsius_spectrum"] <- "Tarsius_tarsier"
levels(data$Genus_species)[levels(data$Genus_species)=="Alouatta_fusca"] <- "Alouatta_guariba"
levels(data$Genus_species)[levels(data$Genus_species)=="Galagoides_demidoff"] <- "Galagoides_demidovii"
levels(data$Genus_species)[levels(data$Genus_species)=="Galago_alleni"] <- "Sciurocheirus_alleni"
levels(data$Genus_species)[levels(data$Genus_species)=="Tarsius_dianae"] <- "Tarsius_dentatus"
levels(data$Genus_species)[levels(data$Genus_species)=="Colobus_kirkii"] <- "Piliocolobus_kirkii"
levels(data$Genus_species)[levels(data$Genus_species)=="Callithrix_humeralifer"] <- "Callithrix_humeralifera" 
#levels(data$Genus_species)[levels(data$Genus_species)=="Hylobates_klossi"] <- "Hylobates_klossii"
#levels(data$Genus_species)[levels(data$Genus_species)=="Saguinus_leucops"] <- "Saguinus_leucopus"
#levels(data$Genus_species)[levels(data$Genus_species)=="Macaca_maurus"] <- "Macaca_maura"
#levels(data$Genus_species)[levels(data$Genus_species)=="Gorilla_gorilla"] <- "Gorilla_gorilla_gorilla"
#levels(data$Genus_species)[levels(data$Genus_species)=="Pan_troglodytes"] <- "Pan_troglodytes_schweinfurthii"
#levels(data$Genus_species)[levels(data$Genus_species)=="Presbytis_rubicunda"] <- "Presbytis_comata"
#levels(data$Genus_species)[levels(data$Genus_species)=="Presbytis_potenziani"] <- "Presbytis_melalophos"

##=====================
#show data set:
##====================
#data_show <- data[,c(1, 82:85, 6:26, 37:42, 46:60, 63:66, 73:79  )]
#print(xtable(data_show, caption=paste("Data of ",length(data_show$Genus_species), "primate species"), size="\\scriptsize", digits=3), caption.placement="top", table.placement="H",  tabular.environment = "longtable", floating = FALSE)
#data_show

#exclude Callicebus_personatus `coz no brain size data available (only genus mean in van Woerden 2011):
#data <- data[!data$Genus_species %in% c("Callicebus_personatus"), ]
#str(data)

#grep all variables which contain Soc1/Soc2/Eco1/Eco2/Morph1 or LH1:
data <- data[,grep("Genus_species|Soc1|Soc2|Eco1|Eco2|Morph1|LH1|Jan1", colnames(data))]

#grep all variables which do not contain "reference":
data <- data[,-grep("Reference", colnames(data))]
#str(data)

#add Residuals brain size
data$ResBrainBody <- residuals(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data, na.action=na.exclude))

#make binary variables out of ordinal variables:
data$Eco2.tool.use.wo.c <- ifelse(data$Eco2.Tool.use..Bentley.Condit.and.Smith.2010. >1, 1,0)
data$Eco2.tool.use.w.c <- ifelse(data$Eco2.Tool.use..Bentley.Condit.and.Smith.2010. >=1, 1,0)
#data$Soc2.Food.sharing.offspr <- ifelse(data$Soc2.FS.offspring..Jaeggi.and.van.Schaik.2011. >=1, 1,0)
data$Soc2.Food.sharing.adults <- ifelse(data$Soc2.FS.adult..Jaeggi.and.van.Schaik.2011. >=1, 1,0)


#read in tree:
Petree <- read.nexus("Perelman292res.nex")
# tree10k <- read.nexus("consensusTree_10kTrees_Primates_Version3.nex")
# tree10k$tip.label[grep("Bunopithecus_hoolock", tree10k$tip.label)]    <- "Hoolock_hoolock" 
# tree10k$tip.label[grep("Callithrix_pygmaea", tree10k$tip.label)]      <- "Cebuella_pygmaea" 
# tree10k$tip.label[grep("Gorilla_gorilla_gorilla", tree10k$tip.label)] <- "Gorilla_gorilla"
# tree10k$tip.label[grep("Eulemur_macaco_macaco", tree10k$tip.label)]   <- "Eulemur_macaco"
# tree10k$tip.label[grep("Callithrix_argentata", tree10k$tip.label)]    <- "Mico_argentatus"
# tree10k$tip.label[grep("Varecia_variegata_variegata", tree10k$tip.label)] <- "Varecia_variegata"
# tree10k$tip.label[grep("Eulemur_fulvus_fulvus", tree10k$tip.label)]   <- "Eulemur_fulvus"
# tree10k$tip.label[grep("Pan_troglodytes_troglodytes", tree10k$tip.label)] <- "Pan_troglodytes"
# tree10k$tip.label[grep("Presbytis_melalophos", tree10k$tip.label)]    <- "Presbytis_potenziani"
# Petree <- tree10k

#rename data:
data1 <- data

#make factors out of factor variables:
data1$Eco2.tool.use.wo.c <- factor(data1$Eco2.tool.use.wo.c)
data1$Eco2.tool.use.w.c <- factor(data1$Eco2.tool.use.w.c)
data1$Soc1.Mating.system.combined <- factor(data1$Soc1.Mating.system.combined)
data1$Soc1.Social.system.combined <- factor(data1$Soc1.Social.system.combined)
data1$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015. <- factor(data1$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.)
data1$Soc1.Infanticide.vulnerability.combined <- factor(data1$Soc1.Infanticide.vulnerability.combined)
data1$Soc1.Cooperative.breeding.combined <- factor(data1$Soc1.Cooperative.breeding.combined)
#data1$Soc2.FS.offspring..Jaeggi.and.van.Schaik.2011. <- factor(data1$Soc2.FS.offspring..Jaeggi.and.van.Schaik.2011.)
#data1$Soc2.FS.M.M..Jaeggi.and.van.Schaik.2011. <- factor(data1$Soc2.FS.M.M..Jaeggi.and.van.Schaik.2011.)
#data1$Soc2.FS.F.F..Jaeggi.and.van.Schaik.2011. <- factor(data1$Soc2.FS.F.F..Jaeggi.and.van.Schaik.2011.)
#data1$Soc2.Coalitions.combined.males..Schoof.et.al..2009. <- factor(data1$Soc2.Coalitions.combined.males..Schoof.et.al..2009.)
#data1$Soc2.Coalitions.combined.intra.inter.group..Schoof.et.al..2009. <- factor(data1$Soc2.Coalitions.combined.intra.inter.group..Schoof.et.al..2009.)
data1$Soc2.MM.and.FF.coalitions.combined <- factor(data1$Soc2.MM.and.FF.coalitions.combined)
#data1$Soc2.Any.sort.of.coalitions.combined <- factor(data1$Soc2.Any.sort.of.coalitions.combined)
data1$Soc2.Potential.for.tactical.deception..Byrne.and.Whiten.1990. <- factor(data1$Soc2.Potential.for.tactical.deception..Byrne.and.Whiten.1990.)
data1$Eco1.Predation.risk..Nunn.and.van.Schaik.2000. <- factor(data1$Eco1.Predation.risk..Nunn.and.van.Schaik.2000.)
data1$Eco1.mobility2..Infant.carrying.combined <- factor(data1$Eco1.mobility2..Infant.carrying.combined)
data1$Eco2.Tool.use..Bentley.Condit.and.Smith.2010. <- factor(data1$Eco2.Tool.use..Bentley.Condit.and.Smith.2010.)
data1$Eco1.Extractive.foraging.combined <- factor(data1$Eco1.Extractive.foraging.combined)
data1$Eco2.Hunting.combined <- factor(data1$Eco2.Hunting.combined)
data1$Soc2.Social.hunting.combined <- factor(data1$Soc2.Social.hunting.combined)

#relevel factors:
data1$Soc1.Mating.system.combined  <- relevel(data1$Soc1.Mating.system.combined , ref="monogam")
data1$Soc1.Social.system.combined  <- relevel(data1$Soc1.Social.system.combined , ref="solitary")
data1$Soc1.Dispersal..Willems.et.al..2013.  <- relevel(data1$Soc1.Dispersal..Willems.et.al..2013. , ref="m")
data1$Eco1.Activity.combined <- relevel(data1$Eco1.Activity.combined, ref="n")
data1$Eco1.Habitat.combined <- relevel(data1$Eco1.Habitat.combined, ref="o")
data1$Eco1.Substrate.combined <- relevel(data1$Eco1.Substrate.combined, ref="t")
data1$Eco1.Locomotion.mode.combined <- relevel(data1$Eco1.Locomotion.mode.combined, ref="generalist")

#rename variables (make shorter names):
nanu <- grep("Soc1.AggBGE.rate.of.aggressive.between.group.encounters..Willems.and.van.Schaik.2015.", colnames(data))
names(data)[nanu] <- "Soc1.AggBGE.rate"
nanu <- grep("Soc1.AggBGE.rate.of.aggressive.between.group.encounters..Willems.and.van.Schaik.2015.", colnames(data1))
names(data1)[nanu] <- "Soc1.AggBGE.rate"

#add brain size from Janneke raw data:
#data1[data1[,"Genus_species"]=="Presbytis_potenziani", "Morph1.Brain.size.combined"] <- 56.975  #raw data Janneke (JannekeAll.xlsx):62,50,56.2,57.6,53,63.8,54,59.2 ml, all females --> mean=56.975ml
#data1[data1[,"Genus_species"]=="Brachyteles_arachnoides", "Morph1.Brain.size.combined"] <- 102.0429  #raw data Janneke (JannekeAll.xlsx):102.2 (f), 88(f), 88(f?), 118.2 (m), 110 (m), 114.4 (m), 93.5 (m) --> mean=102.0429 ml


#remove species which are not in 10ktree tree:
#data <- data[ ! data1$Genus_species %in% c("Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Hylobates_klossi", "Petterus_fulvus", "Presbytis_pileatus", "Saimiri_vanzolinii", "Cercocebus_aterrimus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Saguinus_inustus"), ]

#remove species which are not in 10ktree tree:
#data1 <- data1[ ! data1$Genus_species %in% c("Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Hylobates_klossi", "Petterus_fulvus", "Presbytis_pileatus", "Saimiri_vanzolinii", "Cercocebus_aterrimus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Saguinus_inustus"), ]



#remove species which are not in Perelman tree:
data <- data[ ! data$Genus_species %in% c("Callithrix_mauesi", "Colobus_kirkii", "Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Callithrix_humeralifer", "Cercopithecus_wolfi", "Hylobates_klossi", "Petterus_fulvus", "Presbytis_pileatus", "Saguinus_leucops", "Saimiri_vanzolinii", "Callicebus_donacophilus", "Cercocebus_aterrimus", "Macaca_maurus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Prolocobus_verus", "Saguinus_inustus", "Piliocolobus_badius"), ]

#remove species which are not in Perelman tree:
data1 <- data1[ ! data1$Genus_species %in% c("Callithrix_mauesi", "Colobus_kirkii", "Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Callithrix_humeralifer", "Cercopithecus_wolfi", "Petterus_fulvus", "Presbytis_pileatus", "Saimiri_vanzolinii", "Callicebus_donacophilus", "Cercocebus_aterrimus", "Macaca_maurus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Prolocobus_verus", "Saguinus_inustus", "Piliocolobus_badius"), ]

#additionally remove species which are not in 10kTree:
#data <- data[ ! data$Genus_species %in% c("Callithrix_mauesi", "Colobus_kirkii", "Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Callithrix_humeralifer", "Cercopithecus_wolfi", "Hylobates_klossi", "Petterus_fulvus", "Presbytis_pileatus", "Saguinus_leucops", "Saimiri_vanzolinii", "Callicebus_donacophilus", "Cercocebus_aterrimus", "Macaca_maurus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Prolocobus_verus", "Saguinus_inustus", "Piliocolobus_badius", "Presbytis_rubicunda", "Saguinus_labiatus", "Saguinus_nigricollis"), ]

#additionally remove species which are not in 10kTree:
#data1 <- data1[ ! data1$Genus_species %in% c("Callithrix_mauesi", "Colobus_kirkii", "Colobus_verus", "Petterus_mongoz", "Presbytis_francoisi", "Presbytis_johnii", "Presbytis_phayrei", "Presbytis_vetulus", "Alouatta_villosa", "Callithrix_humeralifer", "Cercopithecus_wolfi", "Petterus_fulvus", "Presbytis_pileatus", "Saimiri_vanzolinii", "Callicebus_donacophilus", "Cercocebus_aterrimus", "Macaca_maurus", "Petterus_macaco", "Presbytis_cristata", "Presbytis_entellus", "Presbytis_geei", "Prolocobus_verus", "Saguinus_inustus", "Piliocolobus_badius", "Presbytis_rubicunda", "Saguinus_labiatus", "Saguinus_nigricollis"), ]

#add diet references by Janneke:
#diet_ref_Jan <- read.table("PrimateDietAll_Janneke_Karin.txt", header=T, sep="\t")
#data_new <- merge(data1, diet_ref_Jan, x)





@






\newpage

%\section{Supplementary Results and Discussion}


% =============================================================================
%\subsection{Comparison of evolutionary rates}
% =============================================================================




\newpage




% =============================================================================
\section{Supplementary Tables and Figures: Phylogenetic Path Analysis}
% =============================================================================

% =============================================================================
%\subsection{Social and ecological opportunities/consequences - common sample N=29}
% =============================================================================


\begin{figure}[H]
\centering
\includegraphics[width=300,hight=140]{Path_models_A.png}
\caption{Phylogenetic Path Analysis. Candidate models A: Opportunities \textrightarrow{} brain size \textrightarrow{} consequences. }
\label{fig:PPA_AB}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=300,hight=140]{Path_models_B.png}
\caption{Phylogenetic Path Analysis. Candidate models B: Opportunities \textleftarrow{} brain size \textleftarrow{} consequences.}
\label{fig:PPA_CD}
\end{figure}


\newpage

\begin{figure}[H]
\centering
\includegraphics[width=310,hight=150]{Path_models_C.png}
\caption{Phylogenetic Path Analysis. Candidate models C: Opportunities \textrightarrow{} brain size \textleftarrow{} consequences.}
\label{fig:PPA_CD}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=310,hight=150]{Path_models_D.png}
\caption{Phylogenetic Path Analysis. Candidate models D: Opportunities \textleftarrow{} brain size \textrightarrow{} consequences.}
\label{fig:PPA_CD}
\end{figure}

\newpage





% latex table generated in R 3.3.2 by xtable 1.8-2 package
% Sun Apr 08 15:48:38 2018
\begin{table}[H]
\centering
\caption{Phylogenetic path analysis. N = 29. Given are the number of conditional independencies (= number of d-separation statements) (k), C statistic (C), p-value (p), corrected C statistic information criterion (CICc) and the difference in the CICc (delta CICc) for each of the 28 candidate path models. Models A2 and A3 show the best goodness of fit (delta CICc < 3).} 
\begingroup\fontsize{8pt}{9pt}\selectfont
\begin{tabular}{lrrrrr}
  \hline
model & k & C & p & CICc & delta\_CICc \\ 
  \hline
A2 &  14 & 22.62 & 0.75 & 80.62 & 0.00 \\ 
  A3 &  14 & 25.15 & 0.62 & 83.15 & 2.53 \\ 
  B2 &  14 & 25.83 & 0.58 & 83.83 & 3.21 \\ 
  D2 &  14 & 25.83 & 0.58 & 83.83 & 3.21 \\ 
  B3 &  14 & 28.36 & 0.45 & 86.36 & 5.74 \\ 
  D3 &  14 & 28.36 & 0.45 & 86.36 & 5.74 \\ 
  C2 &  14 & 33.97 & 0.20 & 91.97 & 11.35 \\ 
  C3 &  14 & 40.58 & 0.06 & 98.58 & 17.96 \\ 
  A6 &  10 & 17.49 & 0.62 & 121.89 & 41.27 \\ 
  A7 &  10 & 18.95 & 0.53 & 123.35 & 42.73 \\ 
  B6 &  10 & 19.67 & 0.48 & 124.07 & 43.45 \\ 
  D6 &  10 & 19.67 & 0.48 & 124.07 & 43.45 \\ 
  B7 &  10 & 20.30 & 0.44 & 124.70 & 44.08 \\ 
  D7 &  10 & 20.30 & 0.44 & 124.70 & 44.08 \\ 
  A1 &  15 & 75.46 & 0.00 & 125.72 & 45.10 \\ 
  D1 &  15 & 78.66 & 0.00 & 128.93 & 48.31 \\ 
  B1 &  15 & 78.83 & 0.00 & 129.10 & 48.48 \\ 
  C7 &  10 & 30.15 & 0.07 & 134.55 & 53.93 \\ 
  C6 &  10 & 31.20 & 0.05 & 135.60 & 54.98 \\ 
  C1 &  15 & 87.12 & 0.00 & 137.38 & 56.76 \\ 
  A4 &  11 & 68.55 & 0.00 & 158.18 & 77.56 \\ 
  A5 &  11 & 70.56 & 0.00 & 160.20 & 79.57 \\ 
  D4 &  11 & 70.73 & 0.00 & 160.37 & 79.74 \\ 
  B4 &  11 & 70.90 & 0.00 & 160.53 & 79.91 \\ 
  D5 &  11 & 71.89 & 0.00 & 161.53 & 80.91 \\ 
  B5 &  11 & 72.06 & 0.00 & 161.70 & 81.08 \\ 
  C4 &  11 & 79.52 & 0.00 & 169.15 & 88.53 \\ 
  C5 &  11 & 80.55 & 0.00 & 170.18 & 89.56 \\ 
   \hline
\end{tabular}
\endgroup
\end{table}






\begin{figure}[H]
\centering
\includegraphics[width=300,hight=150]{Best_Path_Models.png}
\caption{Phylogenetic Path Analysis: Best fit models A2 (top) and A3 (bottom). Given are the standardized regression coefficients and the corresponding confidence intervals (CI). Significant coefficients (0 $\notin$ CI) are indicated in bold.}
\label{fig:PPA_AB}
\end{figure}


\newpage



\section{Supplementary Tables and Analyses of Robustness: Phylogenetic Least-Squares Regressions}
%The following subsections show the complete and detailed outputs of the pPCAs and the subsequent PGLS regression models as well as the analyses of robustness. 
%In the results of the opportunities, we show the PGLS regression models including PC1 and PC2 separately (Tables \ref{table:PC1socopp} and \ref{table:PC2socopp} for social opportunities and Tables \ref{table:PC1ecoopp} and \ref{table:PC2ecoopp} for ecological opportunities), the models including both PCs (Table \ref{table:PC12socopp} for social opportunities and Table \ref{table:PC12ecoopp} for ecological opportunities) as well as the combined models including both the social and ecological opportunity PCs based on the common sample (Tables \ref{table:PCallecosoc} - \ref{table:PC21ecosoc}). The analyses of robustness are explained and discussed in the Supplementary Discussion.

%The following subsections show the complete and detailed outputs of the pPCA and the subsequent PGLS regression models as well as the corresponding graphical representations. In the results of the opportunities, we show both the PGLS regression models including PC1 and PC2 separately (see Tables S3 and S4 for social opportunities and Tables S8 and S9 for ecological opportunities) and the combined models (including both the social and ecological opportunity PCs) using the common sample(Tables S14 - S18).

We tested the robustness of our conclusions in several different ways.\\
First, we systematically excluded each of the variables from the pPCAs (identical samples as in the original analyses, new loadings given in Tables \ref{tab:Soc.opp.leave.out1} - \ref{tab:Soc.opp.leave.out11}, \ref{tab:Eco.opp.leave.out1} - \ref{tab:Eco.opp.leave.out11}, \ref{tab:Soc.cons.leave.out1} - \ref{tab:Soc.cons.leave.out4}, \ref{tab:Eco.cons.leave.out1} - \ref{tab:Eco.cons.leave.out5}), and reran the subsequent PGLS regressions with the corresponding PCs to exclude the possibility that the relationships might actually be driven by a single variable. For the social opportunities, excluding single variables from the pPCA resulted in the  majority of the cases in non-significant effects of the resulting two PCs on relative brain size (Table \ref{tab:Soc.opp.leave.out}). For the ecological opportunity variables, the effects of the PCs on relative brain size remained basically similar (and significant for PC1), independent of which variable was excluded from the pPCA (Table \ref{tab:Eco.opp.leave.out}). These findings imply that the statistical trend of PC1 of the social opportunities in the original analysis is not robust and thus reinforces ecology as the main driver of primate brain size evolution. The analogous analyses regarding consequence variables did not change our main findings (Tables \ref{tab:Soc.cons.leave.out}, \ref{tab:Eco.cons.leave.out}). Only the exclusion of hunting from the pPCA encompassing the ecological consequences yielded a non-significant result of PC1 with relative brain size, but that was because the factor loadings of the pPCA redistributed and loaded also highly on the second PC (Table \ref{tab:Eco.cons.leave.out3}), which therefore showed a highly significant association with relative brain size (Table \ref{tab:Eco.cons.leave.out}). Additionally, we can exclude that the few large-brained hunting species are driving the association between relative brain size and ecological consequences, since excluding \textit{Cebus appella}, \textit{Cebus capucinus} and \textit{Pan troglodytes} still yield a highly significant result (Table \ref{tab:out2}).\\
%Moreover, the effect of ecological opportunities on relative brain size might be simply ascribed to diet quality in terms of energetic supply. However, even excluding all dietary variables from pPCA, the corresponding PC results stil in a significant effect on relative brain size. This supports our notion that the effect is not uniquely assignable to either diet or habitat characteristics, but rather an ecological niche in its entirety enables increased encephalization.\\
Second, we reclassified variables for which the assignment to opportunities could be questioned (fission-fusion and extractive foraging). Living in a \textit{fission-fusion} society might not necessarily require a large brain, and is therefore classified as an opportunity variable. However, it has also been argued to require enhanced cognition in terms of long-term memory and recognition, in which case it should be classified as a consequence. \textit{Extractive foraging}, on the one hand can be classified as an opportunity, since it simply represents a foraging technique used for specific types of foods (e.g. roots, tubers, specific insects), in special cases with morphological adaptations (e.g. \textit{Daubentonia madagascariensis}), which does not necessarily require enhanced cognition. On the other hand, extracting foods from embedding matrices, closely linked to tool use, can be argued to be intrinsically cognitively demanding, in which case it must be classified as a consequence variable. This reclassification from opportunities to consequences made our results even stronger (see subsection ~\ref{sec:reclassification}).\\
Finally, we excluded striking outliers (\textit{Cebus capucinus}, \textit{Cebus apella}, \textit{Pan troglodytes}) (\ref{tab:out1}, \ref{tab:out2}, \ref{tab:out3} - \ref{tab:out6}), conducted a jackknife resampling technique without replacement (shown only for the combined model of opportunities, Table \ref{tab:boot}) and used common limited samples (where data were available on both social and ecological opportunity variables as well as the consequence variables, not shown), but also none of this changed our results.
%The classification of the given variables into potential selective pressures (i.e. opportunities) and consequential factors is not always straightforward. As an example, extractive foraging, on the one hand, might simply represent a dietary characteristic as used for specific types of foods (e.g. roots, tubers, specific insects). On the other hand, extracting foods from embedding matrices, closely linked to tools use, can be argued to be cognitively demanding (Parker and Gibson 1977, Milton 1988), and might in that case be classified as consequential factor. In such cases we chose the more conservative way of reasoning. Due to these alternative ways of argumentation and to preclude the fact that the relationships might be simply driven by single variables, we reclassified arguable variables and repeated the analysis procedure as described in the following subsection. 
%Moreover, in case of the social and ecological consequence variables, we reran the PGLS analyses excluding striking outliers (\textit{Cebus capucinus}, \textit{Cebus apella}, \textit{Pan troglodytes}) as well as using the common limited samples (also where data on social and ecological opportunity variables are available). All these additional analyses did not affect our results.\\
%Due to limited samples which may not fully represent the population and in order to further underline the robustness of our analyses, we performed non-parametric bootstrapping (based on a subsample of 80\% of the sample size, without replacement) which fully support our results. 




% =======================================
\subsection{Social Opportunities}
%\subsubsection{Social opportunities}
%\subsubsection{Social opportunities - Original analysis}
% =======================================

<<echo=F, results=hide>>=

#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc1|Soc2", colnames(data1))]
#variables1 <- variables[c(1,2,5,6,8,9,10,14,16,19,7)] #7=dispersal
variables1 <- variables[c(1:11)] 

data_mat <- data1[,c("Genus_species", variables1)]

data_mat$Soc1.Gregariousness..Isler.and.van.Schaik.2012. <- as.numeric(as.character(data_mat$Soc1.Gregariousness..Isler.and.van.Schaik.2012.))
data_mat$Soc1.Cooperative.breeding.combined <- as.numeric(as.character(data_mat$Soc1.Cooperative.breeding.combined))
data_mat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015. <- as.numeric(as.character(data_mat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.))
data_mat$dispersal_num <- as.numeric( gsub("f|m",0 ,gsub("both", 1, data_mat$Soc1.Dispersal..Willems.et.al..2013.) ) )
data_mat <- data_mat[,-grep("Soc1.Dispersal..Willems.et.al..2013.", colnames(data_mat))]
colnames(data_mat)[grep("dispersal_num", colnames(data_mat))] <- "Soc1.dispersal_num"

#make social system numerical
data_mat$soc_system_num <- as.numeric(gsub("mM-mF", 3, gsub("mM-sF|sM-mF",2, gsub("sM-sF",1 ,gsub("solitary", 0, data_mat$Soc1.Social.system.combined) ) ) ) )
data_mat <- data_mat[,-grep("Soc1.Social.system.combined", colnames(data_mat))]
colnames(data_mat)[grep("soc_system_num", colnames(data_mat))] <- "Soc1.soc_system_num"

#make mating system numerical
data_mat$mating_system_num <- as.numeric(gsub("2androus",3, gsub("polygyn|polyand",2 ,gsub("monogam", 1, data_mat$Soc1.Mating.system.combined) ) ) )
data_mat <- data_mat[,-grep("Soc1.Mating.system.combined", colnames(data_mat))]
colnames(data_mat)[grep("mating_system_num", colnames(data_mat))] <- "Soc1.mating_system_num"

#add aggressive between group encounter rate:
#BGE <- read.table("BGE_Willems.txt", header=T, sep="\t", fill=T)
#data_mat <- merge(data_mat, BGE[,c(1:2)], by="Genus_species")


dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)


#rename colnames:
colnames(dat)[grep("Soc1.HR.overlap..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Home range overlap"
colnames(dat)[grep("Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Vocal territorial advertisement"
colnames(dat)[grep("Soc1.Group.size.combined", colnames(dat))] <- "Group size"
colnames(dat)[grep("Soc1.Gregariousness..Isler.and.van.Schaik.2012.", colnames(dat))] <- "Gregariousness"
colnames(dat)[grep("Soc2.Fission.fusion.combined", colnames(dat))] <- "Fission fusion"
colnames(dat)[grep("Soc1.Body.size.dimorphism.combined", colnames(dat))] <- "Body size dimorphism"
colnames(dat)[grep("Soc1.VisualTraitDim..Grueter.Isler.and.Dixson.2015.", colnames(dat))] <- "Visual trait dimorphism"
colnames(dat)[grep("Soc1.Cooperative.breeding.combined", colnames(dat))] <- "Cooperative breeding"
colnames(dat)[grep("Soc1.dispersal_num", colnames(dat))] <- "Dispersal"
colnames(dat)[grep("Soc1.soc_system_num", colnames(dat))] <- "Social system - multi M/F"
colnames(dat)[grep("Soc1.mating_system_num", colnames(dat))] <- "Mating system - Polygynandry"

matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#Phylogenetic signals (phytools):=======================================
#phylosig(tree_pruned, dat[,"Home range overlap"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Vocal_terr_advertisement"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Vocal_terr_advertisement, permut = 1000)
#phylosig(tree_pruned, dat[,"Group size"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Gregariousness"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Fission_fusion"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Fission_fusion, permut = 1000)
#phylosig(tree_pruned, dat[,"Body_size_dimorphism"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Visual_trait_dimorphism"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Cooperative_breeding"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Cooperative_breeding, permut = 1000)
#phylosig(tree_pruned, dat[,"Dispersal"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Dispersal, permut = 1000)
#phylosig(tree_pruned, dat[,"Social system"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Mating system"], method="lambda", test=TRUE, nsim=1000)
#==================================================================


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c("Eigenvalues", "Cumulative Proportion", rownames(res$L))
#invert loadings PC1 social opportunities:
#a <- length(tab[,1])
tab[-c(1,2),1] <- -1*(tab[-c(1,2),1])


@

<<echo=F, results=tex>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0, 1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of social opportunity variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=list(pos=as.list(rows_col),command = cols) )

#non-phylogenetic PCA (psych package):
library(psych)
res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none", scores=TRUE)
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

np_PCs_social <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
colnames(np_PCs_social)[2:3] <- c("npPC1_soc_opp","npPC2_soc_opp")
#data1_np_PC <- merge(data1, np_PCs_social, by="Genus_species", all.x=T)

#res_nonp <- prcomp(dat[,-1], retx=FALSE, scale=TRUE)
#print( xtable(data.frame(res_nonp$rotation[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (prcomp)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#non-phylogenetic pca (ade4 package), check whether it would make a difference to treat discrete characters as so:
library(ade4)
dat_dudi <- dat
#prepare data
dat_dudi$Gregariousness <- factor(dat_dudi$Gregariousness, ordered = TRUE, levels = c(0.5, 1.5, 2.0))
dat_dudi[,"Social system - multi M/F"] <- factor(dat_dudi[,"Social system - multi M/F"], ordered = TRUE, levels = c(0,1,2,3))
dat_dudi[,"Mating system - Polygynandry"] <- factor(dat_dudi[,"Mating system - Polygynandry"], ordered = TRUE, levels = c(1,2,3))
dat_dudi[,"Vocal territorial advertisement"] <- as.factor(dat_dudi[,"Vocal territorial advertisement"])
dat_dudi[,"Fission fusion"] <- as.factor(dat_dudi[,"Fission fusion"])
dat_dudi[,"Cooperative breeding"] <- as.factor(dat_dudi[,"Cooperative breeding"])
dat_dudi[,"Dispersal"] <- as.factor(dat_dudi[,"Dispersal"])
#run dudi mix pca:
#res_dudi_nonp <- dudi.mix(dat_dudi[,-1], scannf=FALSE, nf=ncol(dat_dudi[,-1]))
#str(res_dudi_nonp)
#res_dudi_nonp$index #a factor giving the type of each variable
#res_dudi_nonp$cr #a data frame giving for each variable and each score:
#res_dudi_nonp$l1 # principal components, data frame with n rows and nf columns
#xtable(res_dudi_nonp$cr)
@

<<echo=F>>=
#add PCs to data set:
PCs_social <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
#PCs_social <- data.frame(Genus_species=dat_dudi$Genus_species, res_dudi_nonp$l1[,1:3])
#colnames(PCs_social)[2:4] <- c("PC1", "PC2", "PC3")
data1_PC <- merge(data1, PCs_social, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.Opportunity"


#invert PC1 social opportunities:
data1_PC$PC1.Social.Opportunity <- (-1)*(data1_PC$PC1.Social.Opportunity)
PCs_social$PC1 <- (-1)*(PCs_social$PC1)

soci.oppi <- data1_PC

#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_soc_opp <- data1_PC[complete.cases(data1_PC[,c("PC1.Social.Opportunity")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Social.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC2.Social.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#=======================================================================

#TEMPO of evolution: delta
#rownames(data1_PC_phyl_sig) <- data1_PC_phyl_sig[,"Genus_species"]

#tmp=treedata(tree_pruned, data1_PC_phyl_sig$PC1.Social.Opportunity)
#phy=tmp$phy
#dat=tmp$data

#fitContinuous(phy=tree_pruned, dat=data1_PC_phyl_sig$PC1.Social.Opportunity, model="delta")

@


%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=12, height=10 >>=

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(3.5,1.5,0))
plot(PC1.Social.Opportunity ~ PC2.Social.Opportunity, dat_plot, xlab="PC2 Social Opportunities", ylab="PC1 Social Opportunities", xlim=c(-35,35),ylim=c(-20,40), pch=16, frame.plot = FALSE, axes=F, cex=2.0, col=dat_plot$Family, cex.lab=2.2)
axis(side = 1, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
axis(side = 2, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=5) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=5)
#text(dat_plot[,c("PC2.Social.Opportunity","PC1.Social.Opportunity")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.8, col="dimgrey")
par(xpd=T)
legend(38,30, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.5)
@
%\caption{\scriptsize{Social opportunities - PC1 vs. PC2. The color code corresponds to the taxonomic level of a family.}}
%\label{fig:socOppPC}
%\end{figure}

%\newpage

<<echo=F, results=hide>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1, label="table:PC1socopp")
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1, label="table:PC2socopp")
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1, label="table:PC12socopp")
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, delta='ML')
#summary(model1)
#model1<-pgls(PC1.Social.Opportunity ~  1, data = comp_data, lambda="ML", delta='ML')
#summary(model1)

#absolut brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)

library(nlme)
library(ape)
#dat_gls <- data1_PC[complete.cases(data1_PC[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.", "PC1", "PC2", "PC3")]),]
#matches<-match(Petree$tip.label, dat_gls$Genus_species, nomatch=0)
#not<-subset(Petree$tip.label, matches==0)
#tree_pruned<-drop.tip(Petree, not)
#rownames(dat_gls) <- dat_gls$Genus_species
#model1 <- gls(log(Morph1.Brain.size.combined)  ~ log(Morph1.Body.mass.combined..g.) + PC1, correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model1)
#model2 <- gls(log(Morph1.Brain.size.combined)  ~ log(Morph1.Body.mass.combined..g.) + PC2, correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model2)
#model3 <- gls(log(Morph1.Brain.size.combined)  ~ log(Morph1.Body.mass.combined..g.) + PC3, correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model3)
#model12 <- gls(log(Morph1.Brain.size.combined)  ~ log(Morph1.Body.mass.combined..g.) + PC1 + PC2, correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model12)
#model13 <- gls(log(Morph1.Brain.size.combined)  ~ log(Morph1.Body.mass.combined..g.) + PC1 + PC2 + PC3, correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model13)
@

%\newpage

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

#----#Social opportunities:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.13,0.44))
par(cex=1)
X<-data1_PC_phyl_sig_soc_opp[,c("ResBrainBody","PC1.Social.Opportunity")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_soc_opp$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_soc_opp$Genus_species
matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_soc_opp <- drop.tip(Petree, not)
contMap(tree_pruned_soc_opp,brain,ftype="off", sig=1, legend=30, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(22,60,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_soc_opp$tip.label)-1),length(tree_pruned_soc_opp$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_soc_opp$edge[,2] <= length(tree_pruned_soc_opp$tip.label)
ordered_tips <- tree_pruned_soc_opp$edge[is_tip, 2]
#tree_pruned_soc_opp$tip.label[ordered_tips]
text(rep(0,length(tree_pruned_soc_opp$tip.label)), 1:length(tree_pruned_soc_opp$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_soc_opp$tip.label[ordered_tips]), cex=0.5)
dati <- as.numeric(as.matrix(X)[,"PC1.Social.Opportunity"])
names(dati)<-data1_PC_phyl_sig_soc_opp$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_soc_opp$Genus_species
contMap(tree_pruned_soc_opp,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 social opportunities", cex.main=0.6)
text(22,60,"PC1 social opportunities", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC1 social opportunities - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_soc_opp_1}
%\end{figure}

%\newpage

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

#----#Social opportunities:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.13,0.44))
par(cex=1)
X<-data1_PC_phyl_sig_soc_opp[,c("ResBrainBody","PC2.Social.Opportunity")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_soc_opp$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_soc_opp$Genus_species
matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_soc_opp <- drop.tip(Petree, not)
contMap(tree_pruned_soc_opp,brain,ftype="off", sig=1, legend=30, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(22,60,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_soc_opp$tip.label)-1),length(tree_pruned_soc_opp$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_soc_opp$edge[,2] <= length(tree_pruned_soc_opp$tip.label)
ordered_tips <- tree_pruned_soc_opp$edge[is_tip, 2]
#tree_pruned_soc_opp$tip.label[ordered_tips]
text(rep(0,length(tree_pruned_soc_opp$tip.label)), 1:length(tree_pruned_soc_opp$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_soc_opp$tip.label[ordered_tips]), cex=0.5)
dati <- as.numeric(as.matrix(X)[,"PC2.Social.Opportunity"])
names(dati)<-data1_PC_phyl_sig_soc_opp$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_soc_opp$Genus_species
contMap(tree_pruned_soc_opp,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC2 social opportunities", cex.main=0.6)
text(22,60,"PC2 social opportunities", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC2 social opportunities - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_soc_opp_2}
%\end{figure}


%Bootstrapping /Jackknife resampling technique function:
<<echo=F, results=hide>>=
###-----------------------------------------------
#Bootstrapping:
###-----------------------------------------------

#function which runs PGLS model:
run_a <- function(data, subsample_size, response=NULL, predictors=NULL, opp=TRUE){
  
  #select variables needed and make sure to have complete entries:
  if(opp==TRUE){
    data_c <- data[complete.cases(data[,c("Brain.Size","Body.Mass", predictors)]), ]
  }else{
    data_c <- data[complete.cases(data[,c("Brain.Size","Body.Mass", response)]), ]
  }
  #bootstrap from data frame (%subsample size of data_c):
  data_boot <- data[sample(nrow(data), (nrow(data_c)*subsample_size), replace = FALSE), ] 
   
  comp_data <- comparative.data(phy = Petree, data = data_boot, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  
  pred <- " "
  for (p in 1:length(predictors)){
      pred <- paste(pred, "+", predictors[p]) 
  }
  
  #formu <- paste("log(Brain.Size) ~ log(Body.Mass)", pred )
  formu <- paste( response, " ~ log(Body.Mass)", pred )
  
  model1 <- try(pgls( as.formula(formu), data = comp_data, lambda='ML'), silent=T)
  
  
  if (class(model1) != "try-error"){   
    res_obj <- list(Formula=formu, Sample.Size=nrow(data_boot), Model.output=summary(model1)$coefficients)
    return(res_obj)
  }else{
    res_obj <- list(Formula=formu, Sample.Size=nrow(data_boot), Model.output=model1)
    return(res_obj)
  }
  
  
}


#--------------------------------------------------------------------------------

#function for actual bootstrappping (iterating PGLS function above)
boots_PGLS <- function(n_iter, subsample_size, data, response=NULL, predictors=NULL, opp=TRUE) {
    
    nm <- matrix(NA, n_iter, length(predictors)+2)
  
    for (i in 1:n_iter){ 
      
      a <- run_a(data, subsample_size, response, predictors, opp)
      
      if (class(a$Model.output) != "try-error"){   
            colnames(nm) <- rownames(a$Model.output)
            nm[i,] <- a$Model.output[,1]#save estimates of predictors 
      }
      
      else {  
        nm[i,] <- 999
      }
  
    }
    
    #summarize bootstrap results:    
    #original model:
    comp_data <- comparative.data(phy = Petree, data = data, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
    model1 <- pgls(as.formula(a$Formula), data = comp_data, lambda='ML')
    true_est <- summary(model1)$coefficients[,1]
    p.values <- summary(model1)$coefficients[,4]
    
    #get confidence interval of bootstrap estimates:
    res.s <- data.frame(matrix(NA, length(rownames(summary(model1)$coefficients)), 4))
    rownames(res.s) <- rownames(summary(model1)$coefficients)
    colnames(res.s) <- c("Original estimate", "p-value", "Jackknife mean estimate", "Jackknife 95% CI")
    
    for (p in 1:length(rownames(summary(model1)$coefficients))){
      
      x_n <- nm[!nm[,p]==999,p]
      mean_est <- mean(x_n)
      #CI <- true_est[p] + c(-1,1)*1.96 * sd(x_n) #parametric bootstrap/jackknife CI
      #CI <- mean_est + c(-1,1)*1.96 * sd(x_n) #parametric bootstrap/jackknife CI
      CI <- round(quantile(x_n,c(0.025,0.975)), digits=4) #non-parametric bootstrap/jackknife 95% CI using quantiles
      C_I <- paste("[", CI[1], ", ", CI[2], "]", sep="")
      res.s[p,] <- c(true_est[p], p.values[p], mean_est, C_I)
      
    }  
    res.s[,1:3] <- apply(res.s[,1:3], 2, as.numeric) #make numeric in order to round in xtable
    
    return(list(Subsample.Boots=a$Sample.Size, Bootstrap.Estimates=nm, Summary.Bootstrap=res.s))
}

#-------------------------------------------------------------------------

#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Social.Opportunity", "PC2.Social.Opportunity"), opp=TRUE)
#boot_PC1soc <- boot_res$Bootstrap.Estimates[,"PC1.Social.Opportunity"]
#boot_PC2soc <- boot_res$Bootstrap.Estimates[,"PC2.Social.Opportunity"]
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")

@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Social.Opportunity, data1_PC, xlim=c(-20,40), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Social.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Social.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)


#postscript(file="the_plot", paper="special", width=6, height=6)  

soci.oppi <- data1_PC
#plot for paper:=============================================================
dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#layout(matrix(c(1,1,1,2,2,2,2), 1,7, byrow = TRUE))
#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#par(mfrow=c(1,2), mar=c(5,4,4,2)+0.1, mgp=c(2,1,0) )
plot(ResBrainBody ~ (PC1.Social.Opportunity), dat_plot, xlim=c(-18,35),ylim=c(-0.90,1), xlab="PC1 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-20,-10,0,10,20,30,40), labels=c(-20,-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")

#par(mar=c(8,8,4,12))
plot(ResBrainBody ~ (PC2.Social.Opportunity), dat_plot,  xlab="PC2 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-35,25), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-30,-20,-10,0,10,20), labels=c(-30,-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC2.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(28,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC1.Social.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)

#dev.off()  
#cat("\\includegraphics{", "the_plot", "}\n\n", sep="")  
@
%\end{figure}


%systematically leaving each variable out, calculating model!
<<echo=F, results=hide>>=

#empty matrix:================================================
m <- matrix(NA, length(names(dat)), 4)
rownames(m) <- rep("", length(names(dat))) #empty rownames, which are replaced later

#empty array for saving the loadings of the first two PCs of the pPCA excluding each of the variables:
#array_loadings <- array(NA, c(10, 2, 11) )
list_loadings_soc_opp <- list(NULL)

#original analysis:===========================================
model1 <- pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
#m[1,1] <- length(model1$residuals)
m[1,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
m[1,c(3:4)] <- coefficients(summary(model1))[4,c(1,4)] #PC2


#===============================================================
#leave systematically one variable out and rerun pPCA and PGLS:
for(v in 2:length(names(dat)) ){
  
  #run phyl.pca
  res_alt <- phyl.pca(tree_pruned, dat[,-c(1,v)], method="lambda", mode="corr")
  #tab <- rbind(res_alt$L,  diag(res_alt$Eval), summary(res_alt)$importance[3,]  );tab
  
  #add loadings to list:
  #list_loadings_soc_opp[[paste("excluding", names(dat)[v])]] <- res_alt$L[,c(1,2)]
  tab_alt_soc_opp <- rbind(  diag(res_alt$Eval)[1:2], summary(res_alt)$importance[3,1:2], res_alt$L[,c(1,2)]  )
  rownames(tab_alt_soc_opp)[1:2] <- c("Eigenvalues", "Cumulative Proportion")
  list_loadings_soc_opp[[v-1]] <- tab_alt_soc_opp
  
  #add PCs to data set:
  PCs_alt <- data.frame(Genus_species=dat$Genus_species, res_alt$S[,1:3])
  data1_PC_alt <- merge(data1, PCs_alt, by="Genus_species", all.x=T)
  data1_PC_alt$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_alt, na.action=na.exclude))
  
  colnames(data1_PC_alt)[grep("Morph1.Brain.size.combined", colnames(data1_PC_alt))] <- "Brain.Size"
  colnames(data1_PC_alt)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_alt))] <- "Body.Mass"
  colnames(data1_PC_alt)[grep("PC1", colnames(data1_PC_alt))] <- "PC1.Social.Opportunity"
  colnames(data1_PC_alt)[grep("PC2", colnames(data1_PC_alt))] <- "PC2.Social.Opportunity"
  
   if (v %in% c(2,3,4,7,9,10,11,12)){#if excl. 
    #invert PC1 social opportunities:
    data1_PC_alt$PC1.Social.Opportunity <- (-1)*(data1_PC_alt$PC1.Social.Opportunity)
    }
  if (v %in% c(5,7)){#if excl. 
    #invert PC2 social opportunities:
    data1_PC_alt$PC2.Social.Opportunity <- (-1)*(data1_PC_alt$PC2.Social.Opportunity)
  }
  
  
  #run PGLS analysis:
  comp_data_alt <- comparative.data(phy = Petree, data = data1_PC_alt, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  model1 <- try(pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data_alt, lambda='ML'), silent=T)
  #tab_pgls(model1)
  if (class(model1) != "try-error"){
    #m[v,1] <- length(model1$residuals)
    m[v,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
    m[v,c(3:4)] <- coefficients(summary(model1))[4,c(1,4)] #PC2
    rownames(m)[v] <- paste("excluding", names(dat)[v])
  }
  else{#if error in PGLS caper: ABNORMAL_TERMINATION_IN_LNSRCH, run MCMCglmm
      data1_PC_alt_2 <- data1_PC_alt[complete.cases(data1_PC_alt[,"PC1.Social.Opportunity"]),]
      prior<-list(R=list(V=1,nu=0.002), G=list(G1=list(V=1, nu=0.002)))
      names(data1_PC_alt_2)[1] <- "animal"
      model1 <- MCMCglmm(log(Brain.Size) ~  log(Body.Mass)+ PC1.Social.Opportunity + PC2.Social.Opportunity, random=~animal, data=data1_PC_alt_2, pedigree=tree_pruned, prior=prior, pr=F, scale=F,saveX=F, nitt=30000)
      #summary(model1)
      #m[v,1] <- model1$Residual$nrl
      m[v,c(1:2)] <- summary(model1)$solutions[3,c(1,5)] #PC1
      m[v,c(3:4)] <- summary(model1)$solutions[4,c(1,5)] #PC2
      rownames(m)[v] <- paste("excluding",names(dat)[v], "*")
  }
  
}

colnames(m) <- c("estimate", "p-value", "estimate", "p-value")
rownames(m)[1] <- "all variables - original analysis"
m[m==999]<-NA
mdf <- data.frame(m)

@

<<echo=F, results=tex>>=
#add super-colnames (PC1 and PC2) in mdf table:
addtorow <- list()
addtorow$pos <- list(0,0)
addtorow$command <- c(paste0(paste0('& \\multicolumn{2}{c}{', c("PC1", "PC2"), '}', collapse=''), '\\\\'), '& estimate & p-value & estimate & p-value \\\\' )



print(xtable(list_loadings_soc_opp[[1]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Home range overlap, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.opp.leave.out1"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[2]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Vocal territorial advertisement, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.opp.leave.out2"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[3]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Group size, N = ", nrow(dat), ".  Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.opp.leave.out3"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[4]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Gregariousness, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[5]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Fission fusion, N = ", nrow(dat), ".  Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[6]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Body size dimorphism, N = ", nrow(dat), ".  Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[7]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Visual trait dimorphism, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[8]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Cooperative breeding, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[9]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Dispersal, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[10]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Social system - multi M/F, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_opp[[11]], caption=paste0("\\scriptsize{Phylogenetic PCA of social opportunity variables excluding Mating system - Polygynandry, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.opp.leave.out11"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")


#print mdf table:
print(xtable(mdf,align=c("l","c", "c", "c", "c"), digits=4, caption=paste0("\\scriptsize{Estimates and p-values of the effects of PCs of social opportunities on relative brain size (mulitple PGLS regression). In the first row the result of the original analysis is given, in the subsequent rows, the results are based on PCs from pPCAs where systematically each of the variable is left out. All analyses are based on the maximum sample size used for the original analysis, N=", nrow(dat),".} \\tiny{$\\ast$Numerical optimization problem using PGLS in the package \\texttt{caper}, alternatively applied bayesian phylogenetic mixed model in the package \\texttt{MCMCglmm}, yielding equivalent results.}"), label="tab:Soc.opp.leave.out"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=addtorow, include.colnames=F, tabular.environment="tabular")
@

%\newpage

%\subsubsection{Social opportunities - Excluding fission-fusion}
<<echo=F, results=hide>>=

#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc1|Soc2", colnames(data1))]
#variables1 <- variables[c(1,2,5,6,8,9,10,14,16,19,7)] #7=dispersal
variables1 <- variables[c(1:5,7:11)] 

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012. <- as.numeric(as.character(dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012.))
dat$Soc1.Cooperative.breeding.combined <- as.numeric(as.character(dat$Soc1.Cooperative.breeding.combined))
dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015. <- as.numeric(as.character(dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.))
dat$dispersal_num <- as.numeric( gsub("f|m",0 ,gsub("both", 1, dat$Soc1.Dispersal..Willems.et.al..2013.) ) )
dat <- dat[,-grep("Soc1.Dispersal..Willems.et.al..2013.", colnames(dat))]
colnames(dat)[grep("dispersal_num", colnames(dat))] <- "Soc1.dispersal_num"


#make social system numerical
dat$soc_system_num <- as.numeric(gsub("mM-mF", 3, gsub("mM-sF|sM-mF",2, gsub("sM-sF",1 ,gsub("solitary", 0, dat$Soc1.Social.system.combined) ) ) ) )
dat <- dat[,-grep("Soc1.Social.system.combined", colnames(dat))]
colnames(dat)[grep("soc_system_num", colnames(dat))] <- "Soc1.soc_system_num"

#make mating system numerical
dat$mating_system_num <- as.numeric(gsub("2androus",3, gsub("polygyn|polyand",2 ,gsub("monogam", 1, dat$Soc1.Mating.system.combined) ) ) )
dat <- dat[,-grep("Soc1.Mating.system.combined", colnames(dat))]
colnames(dat)[grep("mating_system_num", colnames(dat))] <- "Soc1.mating_system_num"

#rename colnames:

colnames(dat)[grep("Soc1.HR.overlap..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Home range overlap"
colnames(dat)[grep("Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Vocal terr. advertisement"
colnames(dat)[grep("Soc1.Group.size.combined", colnames(dat))] <- "Group size"
colnames(dat)[grep("Soc1.Gregariousness..Isler.and.van.Schaik.2012.", colnames(dat))] <- "Gregariousness"
colnames(dat)[grep("Soc2.Fission.fusion.combined", colnames(dat))] <- "Fission-fusion"
colnames(dat)[grep("Soc1.Body.size.dimorphism.combined", colnames(dat))] <- "Body size dimorphism"
colnames(dat)[grep("Soc1.VisualTraitDim..Grueter.Isler.and.Dixson.2015.", colnames(dat))] <- "Visual trait dimorphism"
colnames(dat)[grep("Soc1.Cooperative.breeding.combined", colnames(dat))] <- "Cooperative breeding"
colnames(dat)[grep("Soc1.dispersal_num", colnames(dat))] <- "Dispersal"
colnames(dat)[grep("Soc1.soc_system_num", colnames(dat))] <- "Social system"
colnames(dat)[grep("Soc1.mating_system_num", colnames(dat))] <- "Mating system"

matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.Opportunity"

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Social.Opportunity", "PC2.Social.Opportunity"), opp=TRUE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE,  fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Social.Opportunity, data1_PC, xlim=c(-20,40), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Social.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Social.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)


#postscript(file="the_plot", paper="special", width=6, height=6)  

#plot for paper:=============================================================
dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#layout(matrix(c(1,1,1,2,2,2,2), 1,7, byrow = TRUE))
par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
par(mfrow=c(1,2), mar=c(5,5,4,2), mgp=c(2,1,0))
plot(ResBrainBody ~ (PC1.Social.Opportunity), dat_plot, xlim=c(-18,30),ylim=c(-0.90,1), xlab="PC1 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-20,-10,0,10,20), labels=c(-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")

par(mar=c(8,8,4,12))
par(mar=c(5,5,4,2))
plot(ResBrainBody ~ (PC2.Social.Opportunity), dat_plot,  xlab="PC2 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-20,25), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(28,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC1.Social.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)

#dev.off()  
#cat("\\includegraphics{", "the_plot", "}\n\n", sep="")  
@
%\end{figure}

%\newpage

%\subsubsection{Social opportunities - Excluding vocal terr. advertisement}
<<echo=F,  results=hide>>=

#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc1|Soc2", colnames(data1))]
#variables1 <- variables[c(1,2,5,6,8,9,10,14,16,19,7)] #7=dispersal
variables1 <- variables[c(1:2,4:5, 7:11)] 

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012. <- as.numeric(as.character(dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012.))
dat$Soc1.Cooperative.breeding.combined <- as.numeric(as.character(dat$Soc1.Cooperative.breeding.combined))
#dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015. <- as.numeric(as.character(dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.))
dat$dispersal_num <- as.numeric( gsub("f|m",0 ,gsub("both", 1, dat$Soc1.Dispersal..Willems.et.al..2013.) ) )
dat <- dat[,-grep("Soc1.Dispersal..Willems.et.al..2013.", colnames(dat))]
colnames(dat)[grep("dispersal_num", colnames(dat))] <- "Soc1.dispersal_num"


#make social system numerical
dat$soc_system_num <- as.numeric(gsub("mM-mF", 3, gsub("mM-sF|sM-mF",2, gsub("sM-sF",1 ,gsub("solitary", 0, dat$Soc1.Social.system.combined) ) ) ) )
dat <- dat[,-grep("Soc1.Social.system.combined", colnames(dat))]
colnames(dat)[grep("soc_system_num", colnames(dat))] <- "Soc1.soc_system_num"

#make mating system numerical
dat$mating_system_num <- as.numeric(gsub("2androus",3, gsub("polygyn|polyand",2 ,gsub("monogam", 1, dat$Soc1.Mating.system.combined) ) ) )
dat <- dat[,-grep("Soc1.Mating.system.combined", colnames(dat))]
colnames(dat)[grep("mating_system_num", colnames(dat))] <- "Soc1.mating_system_num"

#rename colnames:

colnames(dat)[grep("Soc1.HR.overlap..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Home range overlap"
#colnames(dat)[grep("Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Vocal terr. advertisement"
colnames(dat)[grep("Soc1.Group.size.combined", colnames(dat))] <- "Group size"
colnames(dat)[grep("Soc1.Gregariousness..Isler.and.van.Schaik.2012.", colnames(dat))] <- "Gregariousness"
colnames(dat)[grep("Soc2.Fission.fusion.combined", colnames(dat))] <- "Fission-fusion"
colnames(dat)[grep("Soc1.Body.size.dimorphism.combined", colnames(dat))] <- "Body size dimorphism"
colnames(dat)[grep("Soc1.VisualTraitDim..Grueter.Isler.and.Dixson.2015.", colnames(dat))] <- "Visual trait dimorphism"
colnames(dat)[grep("Soc1.Cooperative.breeding.combined", colnames(dat))] <- "Cooperative breeding"
colnames(dat)[grep("Soc1.dispersal_num", colnames(dat))] <- "Dispersal"
colnames(dat)[grep("Soc1.soc_system_num", colnames(dat))] <- "Social system"
colnames(dat)[grep("Soc1.mating_system_num", colnames(dat))] <- "Mating system"

matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4,  caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.Opportunity"

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Social.Opportunity", "PC2.Social.Opportunity"), opp=TRUE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Social.Opportunity, data1_PC, xlim=c(-20,40), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Social.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Social.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)


#postscript(file="the_plot", paper="special", width=6, height=6)  

#plot for paper:=============================================================
dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#layout(matrix(c(1,1,1,2,2,2,2), 1,7, byrow = TRUE))
par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC1.Social.Opportunity), dat_plot, xlim=c(-15,15),ylim=c(-0.90,1), xlab="PC1 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-20,-10,0,10), labels=c(-20,-10,0,10), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")

par(mar=c(8,8,4,12))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC2.Social.Opportunity), dat_plot,  xlab="PC2 Social Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-25,20), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-20,-10,0,10), labels=c(-20,-10,0,10), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(25,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC1.Social.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)

#dev.off()  
#cat("\\includegraphics{", "the_plot", "}\n\n", sep="")  
@
%\end{figure}

\newpage



% =======================================
\subsection{Ecological opportunities}
%\subsubsection{Ecological opportunities - Original analysis}
% =======================================

<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco1|Jan1", colnames(data1))]
variables1 <- variables[c(1:8,10:12)] #without home range size
#variables1 <- variables[c(1:8,10:12,17)] #with home range size!

data_mat <- data1[,c("Genus_species", variables1)]
data_mat$Eco1.Substrate.num <- ifelse(data_mat$Eco1.Substrate.combined == "a", 1, 0)
data_mat$Eco1.Activity.num <- ifelse(data_mat$Eco1.Activity.combined == "d", 1, 0)
data_mat$Eco1.Habitat.num <- ifelse(data_mat$Eco1.Habitat.combined == "w", 1, 0)
 
data_mat <- data_mat[ ,-c(2,3,4) ]

#add HOME RANGE SIZE:
HRsize <- read.table("HRsize_data.txt", header=T, sep="\t", fill=T)
data_mat <- merge(data_mat, HRsize[,c(1:2)], by="Genus_species")


dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#rename variable names:
colnames(dat)[grep("Eco1.Predation.risk..Nunn.and.van.Schaik.2000.", colnames(dat))] <- "Predation risk"
colnames(dat)[grep("Eco1.mobility.1..Dindex.combined", colnames(dat))] <- "Mobility in ranging area"
colnames(dat)[grep("Eco1.CV.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Environmental seasonality"
colnames(dat)[grep("Eco1.Proportion.animal.combined", colnames(dat))] <- "Faunivory"
colnames(dat)[grep("Eco1.Proportion.fruits.and.seeds..Janneke.data.", colnames(dat))] <- "Frugivory"
colnames(dat)[grep("Eco1.Proportion.leaves..Janneke.data.", colnames(dat))] <- "Folivory"
colnames(dat)[grep("Eco1.Extractive.foraging.combined", colnames(dat))] <- "Extractive foraging"
colnames(dat)[grep("Eco1.diet.quality...Janneke.data.", colnames(dat))] <- "Diet quality"
colnames(dat)[grep("Eco1.Substrate.num", colnames(dat))] <- "Substrate - arboreality"
colnames(dat)[grep("Eco1.Activity.num", colnames(dat))] <- "Activity - diurnality"
colnames(dat)[grep("Eco1.Habitat.num", colnames(dat))] <- "Habitat - wooded"
colnames(dat)[grep("Eco1.HRsize", colnames(dat))] <- "Home range size"

#Phylogenetic signals (phytools):=======================================
#phylosig(tree_pruned, dat[,"Activity"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Activity, permut = 1000)
#phylosig(tree_pruned, dat[,"Habitat"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Habitat, permut = 1000)
#phylosig(tree_pruned, dat[,"Substrate"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Substrate, permut = 1000)
#phylosig(tree_pruned, dat[,"Predation_risk"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Mobility_D_index"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Env_seasonality"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"% insects and meat in diet"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"% fruits and seeds in diet"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"% leaves in diet"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Extractive_foraging"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Extractive_foraging, permut = 1000)
#phylosig(tree_pruned, dat[,"Diet quality"], method="lambda", test=TRUE, nsim=1000)
##======================================================================


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind( diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c("Eigenvalues", "Cumulative Proportion", rownames(res$L) )
#invert loadings PC1,2 ecological opportunities:
#a <- length(tab[,1])
tab[-c(1,2),1] <- -1*(tab[-c(1,2),1])
tab[-c(1,2),2] <- -1*(tab[-c(1,2),2])

@

<<echo=F, results=tex>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

#mat_b <- matrix(TRUE, nr=dim(tab)[1], ncol=dim(tab)[2])
#mat_b[c(dims-1, dims),] <- FALSE

print(xtable(tab, digits=4,  caption=paste("\\scriptsize{Phylogenetic PCA of ecological opportunity variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))


#non-phylogenetic PCA:
library(psych)
res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

np_PCs_ecology <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
colnames(np_PCs_ecology)[2:3] <- c("npPC1_eco_opp","npPC2_eco_opp")
#data1_np_PC <- merge(data1, np_PCs_ecology, by="Genus_species", all.x=T)


#non-phylogenetic pca (ade4 package), check whether it would make a difference to treat discrete characters as so:
library(ade4)
dat_dudi <- dat
#prepare data
dat_dudi[,"Predation risk"] <- factor(dat_dudi[,"Predation risk"], ordered = TRUE, levels = c(1,2,3))
dat_dudi[,"Extractive foraging"] <- as.factor(dat_dudi[,"Extractive foraging"])
dat_dudi[,"Substrate - arboreality"] <- as.factor(dat_dudi[,"Substrate - arboreality"])
dat_dudi[,"Activity - diurnality"] <- as.factor(dat_dudi[,"Activity - diurnality"])
dat_dudi[,"Habitat - wooded"] <- as.factor(dat_dudi[,"Habitat - wooded"])
#run dudi mix pca:
res_dudi_nonp <- dudi.mix(dat_dudi[,-1], scannf=FALSE, nf=ncol(dat_dudi[,-1]))
#str(res_dudi_nonp)
#res_dudi_nonp$index #a factor giving the type of each variable
#res_dudi_nonp$cr #a data frame giving for each variable and each score:
#res_dudi_nonp$l1 # principal components, data frame with n rows and nf columns
#xtable(res_dudi_nonp$cr)
@

<<echo=F, results=tex>>=
#add PCs to data set:
PCs_ecology <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
#PCs_ecology <- data.frame(Genus_species=dat_dudi$Genus_species, res_dudi_nonp$l1[,1:3])
#colnames(PCs_ecology)[2:4] <- c("PC1", "PC2", "PC3")
data1_PC <- merge(data1, PCs_ecology, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.Opportunity"

#invert PC1 ecological opportunities:
data1_PC$PC1.Ecological.Opportunity <- (-1)*(data1_PC$PC1.Ecological.Opportunity)
PCs_ecology$PC1 <- (-1)*(PCs_ecology$PC1)

#invert PC2 ecological opportunities:
data1_PC$PC2.Ecological.Opportunity <- (-1)*(data1_PC$PC2.Ecological.Opportunity)
PCs_ecology$PC2 <- (-1)*(PCs_ecology$PC2)



#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_eco_opp <- data1_PC[complete.cases(data1_PC[,c("PC1.Ecological.Opportunity")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Ecological.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC2.Ecological.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#=======================================================================

@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=12, height=10 >>=

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(3.5,1.5,0))
plot(PC1.Ecological.Opportunity ~ PC2.Ecological.Opportunity, dat_plot, xlab="PC2 Ecological Opportunities", ylab="PC1 Ecological Opportunities", xlim=c(-20,45),ylim=c(-30,35), pch=16, frame.plot = FALSE, axes=F, cex=2.0, col=dat_plot$Family, cex.lab=2.2)
axis(side = 1, at=c(-30,-20,-10,0,10,20,30,40), labels=c(-30,-20,-10,0,10,20,30,40), lwd=5, las=0, cex.axis=1.5)
axis(side = 2, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=5) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=5)
#text(dat_plot[,c("PC2.Ecological.Opportunity","PC1.Ecological.Opportunity")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.8, col="dimgrey")
par(xpd=T)
legend(50,22, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.3)
@
%\caption{\scriptsize{Ecological opportunities - PC1 vs. PC2. The color code corresponds to the taxonomic level of a family.}}
%\label{fig:ecoOppPC}
%\end{figure}

%\newpage

<<echo=F, results=hide>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1, label="table:PC1ecoopp")
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2, label="table:PC2ecoopp")
model12<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model12, label="table:PC12ecoopp")
#model12<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, delta="ML")
#summary(model12)
#model12<-pgls(PC1.Ecological.Opportunity ~ 1, data = comp_data, lambda="ML", delta="ML")
#summary(model12)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model2<-pgls(log(Brain.Size) ~ PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model2)
#model12<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model12)
@


%\newpage
%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

#----#Ecological opportunities:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X<-data1_PC_phyl_sig_eco_opp[,c("ResBrainBody","PC1.Ecological.Opportunity")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_eco_opp$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_eco_opp$Genus_species

matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_eco_opp <- drop.tip(Petree, not)

contMap(tree_pruned_eco_opp,brain,ftype="off",sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(20,44,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_eco_opp$tip.label)-1),length(tree_pruned_eco_opp$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_eco_opp$edge[,2] <= length(tree_pruned_eco_opp$tip.label)
ordered_tips <- tree_pruned_eco_opp$edge[is_tip, 2]
#tree_pruned_eco_opp$tip.label[ordered_tips]
text(rep(0,length(tree_pruned_eco_opp$tip.label)), 1:length(tree_pruned_eco_opp$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_eco_opp$tip.label[ordered_tips]), cex=0.5)
dati<-as.numeric(as.matrix(X)[,"PC1.Ecological.Opportunity"])
names(dati)<-data1_PC_phyl_sig_eco_opp$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_eco_opp$Genus_species
contMap(tree_pruned_eco_opp,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 ecological opportunities", cex.main=0.6)
text(20,44,"PC1 ecological opportunities", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC1 ecological opportunities - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_eco_opp_1}
%\end{figure}

%\newpage

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

#----#Ecological opportunities:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X<-data1_PC_phyl_sig_eco_opp[,c("ResBrainBody","PC2.Ecological.Opportunity")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_eco_opp$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_eco_opp$Genus_species

matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_eco_opp <- drop.tip(Petree, not)

contMap(tree_pruned_eco_opp,brain,ftype="off",sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(20,44,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_eco_opp$tip.label)-1),length(tree_pruned_eco_opp$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_eco_opp$edge[,2] <= length(tree_pruned_eco_opp$tip.label)
ordered_tips <- tree_pruned_eco_opp$edge[is_tip, 2]
#tree_pruned_eco_opp$tip.label[ordered_tips]
text(rep(0,length(tree_pruned_eco_opp$tip.label)), 1:length(tree_pruned_eco_opp$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_eco_opp$tip.label[ordered_tips]), cex=0.5)
dati<-as.numeric(as.matrix(X)[,"PC2.Ecological.Opportunity"])
names(dati)<-data1_PC_phyl_sig_eco_opp$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_eco_opp$Genus_species
contMap(tree_pruned_eco_opp,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC2 ecological opportunities", cex.main=0.6)
text(20,44,"PC2 ecological opportunities", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC2 ecological opportunities - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_eco_opp_2}
%\end{figure}


%Bootstrapping
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity"), opp=TRUE)
#boot_PC1eco <- boot_res$Bootstrap.Estimates[,"PC1.Ecological.Opportunity"]
#boot_PC2eco <- boot_res$Bootstrap.Estimates[,"PC2.Ecological.Opportunity"]
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC, xlim=c(-20,47), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

eci.oppi <- data1_PC
dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
plot(ResBrainBody ~ (PC1.Ecological.Opportunity), dat_plot, xlim=c(-30,30),ylim=c(-0.90,1), xlab="PC1 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-20,-10,0,10,20), labels=c(-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
#text(dat_plot[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.5)

#par(mar=c(8,8,4,12))
plot(ResBrainBody ~ (PC2.Ecological.Opportunity), dat_plot,  xlab="PC2 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-20,45), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC2.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(47,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC2.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)

#plot for paper:=============================================================
#dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
#dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
#dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#plot with pch: pch = as.nummeric(FAmily)
#plot(ResBrainBody ~ PC1.Ecological.Opportunity, dat_plot, xlim=c(-30,25),ylim=c(-0.90,1),xlab="PC1 Ecological Opportunities" ,ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=1.4, col=dat_plot$Family)
#axis(side = 1, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=2, las=0)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
#abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
#legend("topleft", legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=1:length(levels(dat_plot$Family)), bty="n", cex=0.5)
#text(dat_plot[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)

@
%\end{figure}



%systematically leaving each variable out, calculating model!

<<echo=F, results=hide>>=

#create empty matrix:===========================================
m <- matrix(NA, length(names(dat)), 4)

#empty array for saving the loadings of the first two PCs of the pPCA excluding each of the variables:
list_loadings_eco_opp <- list(NULL)

#original analysis:=============================================
model1 <- pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#m[1,1] <- length(model1$residuals)
m[1,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
m[1,c(3:4)] <- coefficients(summary(model1))[4,c(1,4)] #PC2

#===============================================================
#leave systematically one variable out and rerun pPCA and PGLS:
for(v in 2:length(names(dat)) ){
  
  #run phyl.pca
  res_alt <- phyl.pca(tree_pruned, dat[,-c(1,v)], method="lambda", mode="corr")
  
  #add loadings to list:
  #list_loadings_soc_opp[[paste("excluding", names(dat)[v])]] <- res_alt$L[,c(1,2)]
  tab_alt_eco_opp <- rbind(  diag(res_alt$Eval)[1:2], summary(res_alt)$importance[3,1:2], res_alt$L[,c(1,2)]  )
  rownames(tab_alt_eco_opp)[1:2] <- c("Eigenvalues", "Cumulative Proportion")
  list_loadings_eco_opp[[v-1]] <- tab_alt_eco_opp

  
  #add PCs to data set:
  PCs_alt <- data.frame(Genus_species=dat$Genus_species, res_alt$S[,1:3])
  data1_PC_alt <- merge(data1, PCs_alt, by="Genus_species", all.x=T)
  data1_PC_alt$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_alt, na.action=na.exclude))
  
  colnames(data1_PC_alt)[grep("Morph1.Brain.size.combined", colnames(data1_PC_alt))] <- "Brain.Size"
  colnames(data1_PC_alt)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_alt))] <- "Body.Mass"
  colnames(data1_PC_alt)[grep("PC1", colnames(data1_PC_alt))] <- "PC1.Ecological.Opportunity"
  colnames(data1_PC_alt)[grep("PC2", colnames(data1_PC_alt))] <- "PC2.Ecological.Opportunity"
  
  
  if (v %in% c(2,3,8)){#if excl. predation risk, MobilityDindex, extr. foraging
    #invert PC1 and PC2 ecological opportunities:
    data1_PC_alt$PC1.Ecological.Opportunity <- (-1)*(data1_PC_alt$PC1.Ecological.Opportunity)
    data1_PC_alt$PC2.Ecological.Opportunity <- (-1)*(data1_PC_alt$PC2.Ecological.Opportunity)}
  if (v %in% c(6,7,9,10)){#if excl. %fruits, %leaves, diet quality, substrate
    #invert only PC1 ecological opportunities:
    data1_PC_alt$PC1.Ecological.Opportunity <- (-1)*(data1_PC_alt$PC1.Ecological.Opportunity)
  }
  
  
  #run PGLS analysis:
  comp_data_alt <- comparative.data(phy = Petree, data = data1_PC_alt, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  model1 <- try(pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data_alt, lambda='ML'), silent=T)
  #tab_pgls(model1)
  if (class(model1) != "try-error"){
    #m[v,1] <- length(model1$residuals)
    m[v,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
    m[v,c(3:4)] <- coefficients(summary(model1))[4,c(1,4)] #PC2
  }
  else{#if error in PGLS caper: ABNORMAL_TERMINATION_IN_LNSRCH
      #data1_PC_alt_2 <- data1_PC_alt[complete.cases(data1_PC_alt[,"PC1.Social.Opportunity"]),]
      #model1 <- gls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, correlation = corPagel(value=0.5, phy=tree_pruned), data=data1_PC_alt_2)
    #summary(model1)
    #m[v,1] <- model1$dims$N
    m[v,c(1:2)] <- 999#summary(model1)$tTable[3,c(1,4)] #PC1
    m[v,c(3:4)] <- 999#summary(model1)$tTable[4,c(1,4)] #PC2
  }
  
}

colnames(m) <- c("estimate", "p-value", "estimate", "p-value")
rownames(m) <- c("all variables - original analysis",paste("excluding", names(dat)[-1] )  )
m[m==999] < -NA

@

<<echo=F, results=tex>>=
#add super-colnames (PC1 and PC2) in m table:
addtorow <- list()
addtorow$pos <- list(0,0)
addtorow$command <- c(paste0(paste0('& \\multicolumn{2}{c}{', c("PC1", "PC2"), '}', collapse=''), '\\\\'), '& estimate & p-value & estimate & p-value \\\\' )



print(xtable(list_loadings_eco_opp[[1]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Predation risk, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Eco.opp.leave.out1"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[2]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Mobility in ranging area, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[3]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Environmental seasonality, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[4]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Faunivory, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[5]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Frugivory, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[6]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Folivory, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[7]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Extractive foraging, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[8]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Diet quality, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[9]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Substrate - arboreality, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[10]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Activity - diurnality, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_opp[[11]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological opportunity variables excluding Habitat - wooded, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Eco.opp.leave.out11"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")


print(xtable(data.frame(m), align=c("l", "c", "c", "c", "c"), digits=4, caption=paste0("\\scriptsize{Estimates and p-values of the effects of the PCs of ecological opportunities on relative brain size (multiple PGLS regression). In the first row the result of the original analysis is given, in the subsequent rows, the results are based on PCs from pPCAs where systematically each of the variable is left out. All analyses are based on the maximum sample size used for the original analysis N=", nrow(dat),".}"), label="tab:Eco.opp.leave.out"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=addtorow, include.colnames=F)
@

%\newpage




%\subsubsection{Ecological opportunities - Excluding diet variables}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco1|Jan1", colnames(data1))]
variables1 <- variables[c(1:6)]

data_mat <- data1[,c("Genus_species", variables1)]
data_mat$Eco1.Substrate.num <- ifelse(data_mat$Eco1.Substrate.combined == "a", 1, 0)
data_mat$Eco1.Activity.num <- ifelse(data_mat$Eco1.Activity.combined == "d", 1, 0)
data_mat$Eco1.Habitat.num <- ifelse(data_mat$Eco1.Habitat.combined == "w", 1, 0)
 
data_mat <- data_mat[ ,-c(2,3,4) ]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#rename variable names:
colnames(dat)[grep("Eco1.Predation.risk..Nunn.and.van.Schaik.2000.", colnames(dat))] <- "Predation risk"
colnames(dat)[grep("Eco1.mobility.1..Dindex.combined", colnames(dat))] <- "Mobility D-index"
colnames(dat)[grep("Eco1.CV.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Env. seasonality"
#colnames(dat)[grep("Eco1.Extractive.foraging.combined", colnames(dat))] <- "Extractive foraging"
colnames(dat)[grep("Eco1.Substrate.num", colnames(dat))] <- "Substrate"
colnames(dat)[grep("Eco1.Activity.num", colnames(dat))] <- "Activity"
colnames(dat)[grep("Eco1.Habitat.num", colnames(dat))] <- "Habitat"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings PC1 social opportunities:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.Opportunity"

#invert PC1 ecological opportunities:
data1_PC$PC1.Ecological.Opportunity <- (-1)*(data1_PC$PC1.Ecological.Opportunity)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2)
model12<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model12)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model2<-pgls(log(Brain.Size) ~ PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model2)
#model12<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model12)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity"), opp=TRUE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE,  fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC, xlim=c(-20,47), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)


dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC1.Ecological.Opportunity), dat_plot, xlim=c(-20,35),ylim=c(-0.90,1), xlab="PC1 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-10,0,10,20,30), labels=c(-10,0,10,20,30), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")

par(mar=c(8,8,4,12))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC2.Ecological.Opportunity), dat_plot,  xlab="PC2 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-35,25), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-30,-20,-10,0,10,20), labels=c(-30,-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC2.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(30,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC2.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)
@
%\end{figure}


\newpage


%\subsubsection{Ecological opportunities - Excluding extractive foraging}
<<echo=F,results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco1|Jan1", colnames(data1))]
variables1 <- variables[c(1:8,10,12)]

data_mat <- data1[,c("Genus_species", variables1)]
data_mat$Eco1.Substrate.num <- ifelse(data_mat$Eco1.Substrate.combined == "a", 1, 0)
data_mat$Eco1.Activity.num <- ifelse(data_mat$Eco1.Activity.combined == "d", 1, 0)
data_mat$Eco1.Habitat.num <- ifelse(data_mat$Eco1.Habitat.combined == "w", 1, 0)
 
data_mat <- data_mat[ ,-c(2,3,4) ]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#rename variable names:
colnames(dat)[grep("Eco1.Predation.risk..Nunn.and.van.Schaik.2000.", colnames(dat))] <- "Predation risk"
colnames(dat)[grep("Eco1.mobility.1..Dindex.combined", colnames(dat))] <- "Mobility D-index"
colnames(dat)[grep("Eco1.CV.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Env. seasonality"
colnames(dat)[grep("Eco1.Proportion.animal.combined", colnames(dat))] <- "% insects and meat in diet"
colnames(dat)[grep("Eco1.Proportion.fruits.and.seeds..Janneke.data.", colnames(dat))] <- "% fruits and seeds in diet"
colnames(dat)[grep("Eco1.Proportion.leaves..Janneke.data.", colnames(dat))] <- "% leaves in diet"
colnames(dat)[grep("Eco1.Extractive.foraging.combined", colnames(dat))] <- "Extractive foraging"
colnames(dat)[grep("Eco1.diet.quality...Janneke.data.", colnames(dat))] <- "Diet quality"
colnames(dat)[grep("Eco1.Substrate.num", colnames(dat))] <- "Substrate"
colnames(dat)[grep("Eco1.Activity.num", colnames(dat))] <- "Activity"
colnames(dat)[grep("Eco1.Habitat.num", colnames(dat))] <- "Habitat"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings PC1 social opportunities:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.Opportunity"

#invert PC1 ecological opportunities:
data1_PC$PC1.Ecological.Opportunity <- (-1)*(data1_PC$PC1.Ecological.Opportunity)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2)
model12<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model12)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1)
#model2<-pgls(log(Brain.Size) ~ PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model2)
#model12<-pgls(log(Brain.Size) ~ PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model12)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="log(Brain.Size)", predictors=c("PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity"), opp=TRUE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE,  fig=FALSE, width=23, height=9>>=
#plot(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC, xlim=c(-20,47), ylab="Residuals brain size", pch=16)
#abline(lm(ResBrainBody ~ PC1.Ecological.Opportunity, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)


dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC1.Ecological.Opportunity), dat_plot, xlim=c(-28,30),ylim=c(-0.90,1), xlab="PC1 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 1, at=c(-20,-10,0,10,20), labels=c(-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")

par(mar=c(8,8,4,12))
par(mar=c(5,4,4,2))
plot(ResBrainBody ~ (PC2.Ecological.Opportunity), dat_plot,  xlab="PC2 Ecological Opportunities",ylab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-40,25), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
axis(side = 1, at=c(-40,-30,-20,-10,0,10,20), labels=c(-40,-30,-20,-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(ResBrainBody ~ (PC2.Ecological.Opportunity), data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(30,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
#par(xpd=F)
#text(dat_plot[,c("PC2.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Family"],pos=4, cex=0.5)
@
%\end{figure}

\newpage




% ==============================================================================
\subsection{Social and Ecological Opportunities - models based on common sample}
% ==============================================================================

<<echo=F, results=hide>>=

data1_PC_social <- merge(data1, PCs_social, by="Genus_species", all.x=T)
data1_PC_soc_eco <- merge(data1_PC_social, PCs_ecology, by="Genus_species", all.x=T)


data1_PC_soc_eco <- data1_PC_soc_eco[complete.cases(data1_PC_soc_eco[,c("Genus_species", "Morph1.Brain.size.combined","PC1.x","PC1.y")]), ]

data1_PC_soc_eco$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_soc_eco, na.action=na.exclude))

colnames(data1_PC_soc_eco)[grep("PC1.x", colnames(data1_PC_soc_eco))] <- "PC1.Social.Opportunity"
colnames(data1_PC_soc_eco)[grep("PC2.x", colnames(data1_PC_soc_eco))] <- "PC2.Social.Opportunity"
colnames(data1_PC_soc_eco)[grep("PC3.x", colnames(data1_PC_soc_eco))] <- "PC3.Social.Opportunity"
colnames(data1_PC_soc_eco)[grep("PC1.y", colnames(data1_PC_soc_eco))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC_soc_eco)[grep("PC2.y", colnames(data1_PC_soc_eco))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC_soc_eco)[grep("PC3.y", colnames(data1_PC_soc_eco))] <- "PC3.Ecological.Opportunity"
colnames(data1_PC_soc_eco)[grep("Morph1.Brain.size.combined", colnames(data1_PC_soc_eco))] <- "Brain.Size"
colnames(data1_PC_soc_eco)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_soc_eco))] <- "Body.Mass"


comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)


model2<-pgls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2, label="table:PCallecosoc")
#model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, delta="ML")
#summary(model2)
#model2<-pgls(PC2.Ecological.Opportunity ~ 1, data = comp_data, lambda="ML", delta="ML")
#summary(model2)

#absolute brain size:
#model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model1)
#model2<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2)
#model2<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2)
#model2<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2)
#model2<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2)

#plot(ResBrainBody ~ PC1.Social.Opportunity, data1_PC_soc_eco, xlim=c(-20,35),xlab="Social opportunities - PC1")
#abline(lm(ResBrainBody ~ PC1.Social.Opportunity, data1_PC_soc_eco), col="darkgrey", lwd=2)
#text(data1_PC_soc_eco[,c("PC1.Social.Opportunity", "ResBrainBody")], labels=data1_PC_soc_eco[,"Genus_species"],pos=4, cex=0.5)


@

<<echo=F, results=hide, fig=FALSE>>=
#####################SOCIAL OPPORTUNITIES#######################################

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_soc_eco, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#layout(matrix(c(1,1,1,2,2,2,2), 1,7, byrow = TRUE))
#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#par(mfrow=c(1,2), mar=c(5,4,4,2)+0.1, mgp=c(2,1,0) )
#plot(ResBrainBody ~ (PC1.Social.Opportunity), dat_plot, xlim=c(-18,35),ylim=c(-0.90,1), #xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
#axis(side = 1, at=c(-20,-10,0,10,20,30,40), labels=c(-20,-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=4, col="darkgrey")

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC1.Social.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC1 social opp",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC1.Social.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")
#plot(ResBrainBody_gls ~ (PC1.Social.Opportunity), dat_plot_new, xlim=c(-18,35),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = T, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family )
#abline(lm(ResBrainBody_gls ~ (PC1.Social.Opportunity), data=dat_plot_new), lwd=4, col="darkgrey")
#text(dat_plot_new[,c("PC1.Social.Opportunity","ResBrainBody_gls")], labels=dat_plot_new[,"Family"],pos=4, cex=0.5)

#par(mar=c(8,8,4,12))
#plot(ResBrainBody ~ (PC2.Social.Opportunity), dat_plot,  xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-30,25), ylim=c(-0.90,1), cex=2.8, #cex.lab=2.5)
#axis(side = 1, at=c(-30,-20,-10,0,10,20), labels=c(-30,-20,-10,0,10,20), lwd=6, las=0, #cex.axis=1.8)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=1.8)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(a=-0.07,b=0.003, lwd=4, col="darkgrey")
#abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#par(xpd=T)
#legend(28,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)

#with gls():
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
#fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC2.Social.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[4]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC2.Social.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC2 social opp",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC2.Social.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
#abline(lm(ResBrainBody_gls ~ (PC2.Social.Opportunity), dat_plot_new) )
abline(a=interc, b=slo, lwd=4, col="darkgrey")
#plot(ResBrainBody_gls ~ (PC2.Social.Opportunity), dat_plot_new, xlim=c(-18,35),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = T, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family )
#abline(lm(ResBrainBody_gls ~ (PC2.Social.Opportunity), data=dat_plot_new), lwd=4, col="darkgrey")
#text(dat_plot_new[,c("PC1.Social.Opportunity","ResBrainBody_gls")], labels=dat_plot_new[,"Family"],pos=4, cex=0.5)


###########ECOLOGICAL OPPORTUNITIES#############################


dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_soc_eco, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#plot(ResBrainBody ~ (PC1.Ecological.Opportunity), dat_plot, xlim=c(-35,30),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
#axis(side = 1, at=c(-20,-10,0,10,20), labels=c(-20,-10,0,10,20), lwd=6, las=0, cex.axis=1.8)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=1.8)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#text(dat_plot[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.5)

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
#fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[5]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC1.Ecological.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC1 Ecology",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC1.Ecological.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")



#par(mar=c(8,8,4,12))
#plot(ResBrainBody ~ (PC2.Ecological.Opportunity), dat_plot,  xlab="",ylab="", pch=16, #frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-20,45), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
#axis(side = 1, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(a=-0.05,b=0.005, lwd=4, col="darkgrey")
#abline(lm(ResBrainBody ~ (PC2.Ecological.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#par(xpd=F)
#legend(47,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
#fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[6]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC2.Ecological.Opportunity), xlim=c(-35,45), ylim=c(-0.90,1), xlab="PC2 Ecology",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC2.Ecological.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")


@


%Bootstrapping:
<<echo=F, results=tex>>=
#run bootstrap:
n <- 1000
sn <- 0.8

#common sample: PC1/2 Social opportunities:
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC_soc_eco, response="log(Brain.Size)", predictors=c("PC1.Social.Opportunity", "PC2.Social.Opportunity"), opp=TRUE)
#boot_PC1soc_c <- boot_res$Bootstrap.Estimates[,"PC1.Social.Opportunity"]
#boot_PC2soc_c <- boot_res$Bootstrap.Estimates[,"PC2.Social.Opportunity"]
#print(xtable(boot_res$Summary.Bootstrap, digits=4,align="rcccc", caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")

#common sample: PC1/2 Ecological opportunities:
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC_soc_eco, response="log(Brain.Size)", predictors=c("PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity"), opp=TRUE)
#boot_PC1eco_c <- boot_res$Bootstrap.Estimates[,"PC1.Ecological.Opportunity"]
#boot_PC2eco_c <- boot_res$Bootstrap.Estimates[,"PC2.Ecological.Opportunity"]
#print(xtable(boot_res$Summary.Bootstrap, digits=4,align="rcccc", caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")

#common sample combined model, PC1/2 social and ecological opportunities
set.seed(123)
boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC_soc_eco, response="log(Brain.Size)", predictors=c("PC1.Social.Opportunity", "PC2.Social.Opportunity", "PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity"), opp=TRUE)
boot_PC1soc2 <- boot_res$Bootstrap.Estimates[,"PC1.Social.Opportunity"]
boot_PC2soc2 <- boot_res$Bootstrap.Estimates[,"PC2.Social.Opportunity"]
boot_PC1eco2 <- boot_res$Bootstrap.Estimates[,"PC1.Ecological.Opportunity"]
boot_PC2eco2 <- boot_res$Bootstrap.Estimates[,"PC2.Ecological.Opportunity"]
print(xtable(boot_res$Summary.Bootstrap, digits=3,align="rcccc", caption=paste("Jackknife resampling (over tips) of PGLS regression model including all four opportunity PCs: $N_{iter}$ =",n, ", subsample size =", boot_res$Subsample.Boots, " (80\\% of N=43). Given are the original estimates and corresponding p-values from the original PGLS regression as well as the mean estimates and 95\\% confidence intervals (CI) of the jackknifed sample. ", sep=""),label="tab:boot"), table.placement = "H", caption.placement="top", size="\\fontsize{9pt}{10pt}\\selectfont")



#Distirubiton plots for estimates of bootstrapping:
boot_PC1soc2[boot_PC1soc2==999] <- NA
boot_PC2soc2[boot_PC2soc2==999] <- NA
boot_PC1eco2[boot_PC1eco2==999] <- NA
boot_PC2eco2[boot_PC2eco2==999] <- NA

#DATA
dat_boot_dist_PC1_2 <- data.frame(Estimates = c(boot_PC1soc2, boot_PC1eco2), Variables = c(rep("PC1 social opp.", length(boot_PC1soc2)), rep("PC1 ecological opp.", length(boot_PC1eco2))) )
dat_boot_dist_PC1_2[dat_boot_dist_PC1_2==999] <- NA

dat_boot_dist_PC2_2 <- data.frame(Estimates = c(boot_PC2soc2, boot_PC2eco2), Variables = c(rep("PC2 social opp.", length(boot_PC2soc2)), rep("PC2 ecological opp.", length(boot_PC2eco2))) )
dat_boot_dist_PC2_2[dat_boot_dist_PC2_2==999] <- NA



#dat_boot_dist_PC1_c <- data.frame(Estimates = c(boot_PC1soc_c, boot_PC1eco_c), Variables = c(rep("PC1 social opp.", length(boot_PC1soc_c)), rep("PC1 ecological opp.", length(boot_PC1eco_c))) )
#dat_boot_dist_PC1_c[dat_boot_dist_PC1_c==999] <- NA

#dat_boot_dist_PC2_c <- data.frame(Estimates = c(boot_PC2soc_c, boot_PC2eco_c), Variables = c(rep("PC2 social opp.", length(boot_PC2soc_c)), rep("PC2 ecological opp.", length(boot_PC2eco_c))) )
#dat_boot_dist_PC2_c[dat_boot_dist_PC2_c==999] <- NA


library(ggplot2)

#PLOTS
#ggplot(data = dat_boot_dist_PC1_c, aes(x = Estimates, group = Variables)) +
#  geom_density(aes(fill = Variables), alpha = 0.5) + 
#  theme(axis.title=element_text(size="17", color="black"), axis.text.x  = element_text(vjust=0.5, size=15),axis.text.y = element_text(vjust=0.5, size=16), panel.border = element_rect(colour = "gray", fill=NA), panel.background = element_blank(), strip.background = element_blank()) +
# scale_fill_manual( values = c("olivedrab4","steelblue3")) +
#  theme(legend.position = c(0.75, 0.7), legend.title=element_blank(), legend.text=element_text(size=12)) +
#labs(title = "1000 Bootstrap replicates") #+
#ggplot(data = dat_boot_dist_PC2_c, aes(x = Estimates, group = Variables)) +
#  geom_density(aes(fill = Variables), alpha = 0.5) + 
#  theme(axis.title=element_text(size="17", color="black"), axis.text.x  = element_text(vjust=0.5, size=15),axis.text.y = element_text(vjust=0.5, size=16), panel.border = element_rect(colour = "gray", fill=NA), panel.background = element_blank(), strip.background = element_blank()) +
#  scale_fill_manual( values = c("olivedrab4","steelblue3")) +
#  theme(legend.position = c(0.75, 0.7), legend.title=element_blank(), legend.text=element_text(size=12)) +
#labs(title = "1000 Bootstrap replicates") #+

ggplot(data = dat_boot_dist_PC1_2, aes(x = Estimates, group = Variables)) +
  geom_density(aes(fill = Variables), alpha = 0.5) + 
  theme(axis.title=element_text(size="20", color="black"), axis.text.x  = element_text(vjust=0.5, size=16),axis.text.y = element_text(vjust=0.5, size=17), panel.border = element_rect(colour = "gray", fill=NA), plot.title = element_text(size=20), panel.background = element_blank(), strip.background = element_blank()) +
  scale_fill_manual( values = c("olivedrab4","steelblue3")) +
  theme(legend.position = c(0.75, 0.7), legend.title=element_blank(), legend.text=element_text(size=12)) +
labs(title = "1000 Bootstrap replicates") #+
ggplot(data = dat_boot_dist_PC2_2, aes(x = Estimates, group = Variables)) +
  geom_density(aes(fill = Variables), alpha = 0.5) + 
  theme(axis.title=element_text(size="20", color="black"), axis.text.x  = element_text(vjust=0.5, size=16),axis.text.y = element_text(vjust=0.5, size=17), panel.border = element_rect(colour = "gray", fill=NA), plot.title = element_text(size=20), panel.background = element_blank(), strip.background = element_blank()) +
  scale_fill_manual( values = c("olivedrab4","steelblue3")) +
  theme(legend.position = c(0.78, 0.7), legend.title=element_blank(), legend.text=element_text(size=12)) +
labs(title = "1000 Bootstrap replicates") #+
 # geom_vline(xintercept = quantile(boot_PC1eco,c(0.025,0.975), na.rm=T), color="olivedrab4") + 
 # geom_vline(xintercept = quantile(boot_PC1soc,c(0.025,0.975), na.rm=T), color="steelblue3")

@

<<echo=F, results=tex>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
tab_pgls(model1)
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
tab_pgls(model1, label="table:PC11ecosoc")
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
tab_pgls(model2, label="table:PC22ecosoc")
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
tab_pgls(model2, label="table:PC12ecosoc")
model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
tab_pgls(model2, label="table:PC21ecosoc")
@

% Table generated by Excel2LaTeX from sheet 'Sheet1'
\begin{table}[htbp]
  \centering
  \caption{\scriptsize{Model selection based on Akaike Information Criterion (AIC). PGLS models with log brain size as the response and the social and ecological opportunity PCs as predictor variables. Models are based on the common sample of social and ecological opportunities ($N=43$) and include log body mass as a covariate. Given are the estimates and corresponding p-values in brackets.}}
  \begingroup\fontsize{9pt}{10pt}\selectfont
    \begin{tabular}{lccccc}
    \toprule
    
           & AIC   &  PC1 social opp. & PC2 social opp. & PC1 ecological opp. & PC2 ecological opp. \\
    \midrule
    model 1    & -26.51  & 0.006 (0.231) & 0.001 (0.761) & -     & - \\
    model 2    & -33.49  & -     & -     & 0.007 (\textbf{0.025}) & 0.004 (0.146) \\
    model 3   & -31.07  & 0.003 (0.502) & -     & 0.006 (\textit{0.052}) & - \\
    model 4    & -26.10 &  -     & 0.001 (0.916) & -     & 0.003 (0.201) \\
    model 5   & -28.28   & 0.006 (0.202) & -     & -     & 0.004 (0.156) \\
    model 6   & -30.66  & -     & 0.001 (0.877) & 0.007 (\textbf{0.030}) & - \\
    model 7 &  -30.31  & 0.003 (0.484)     & -0.001 (0.859) & 0.006 (\textit{0.055}) & 0.004 (\textit{0.146}) \\
   
    \bottomrule
    \end{tabular}%
    \endgroup% latex table generated in R 3.2.3 by xtable 1.8-2 package
  \label{table:ModSel}%
\end{table}%



%\newpage

% ===================================================================
\subsection{Relationships between Social and Ecological Opportunities}
% ===================================================================

<<echo=F, results=hide>>=
model1 <- pgls(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC2.Social.Opportunity ~ PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC1.Social.Opportunity ~ PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)






model1 <- pgls(PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC2.Ecological.Opportunity ~ PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC2.Ecological.Opportunity ~ PC1.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)

model1 <- pgls(PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
@

\begin{table}[htbp]
  \centering
  \caption{\scriptsize{Relationships between social and ecological opportunity PCs. PGLS models are based on the common sample of social and ecological opportunity variables ($N=43$). Given are the estimates and corresponding p-values. }}
  \begingroup\fontsize{9pt}{10pt}\selectfont
    \begin{tabular}{lccccccc}
    \toprule 
Response variable & Predictor variable  & estimate & p-value \\
    \midrule
    PC1 social opp. & PC1 ecological opp. & -0.052 & 0.716 \\
    PC1 social opp. & PC2 ecological opp.  & 0.096 & 0.327 \\
    PC2 social opp. & PC1 ecological opp.  & -0.014 & 0.930 \\
    PC2 social opp. & PC2 ecological opp.  & 0.168 & 0.114 \\
    \midrule
    PC1 ecological opp. & PC1 social opp. & -0.098 & 0.709 \\
    PC1 ecological opp. & PC2 social opp.  & 0.002 & 0.994 \\
    PC2 ecological opp. & PC1 social opp.  & 0.547 & 0.028 \\
    PC2 ecological opp. & PC2 social opp.  & 0.334 & 0.203 \\
    \bottomrule
    \end{tabular}%
    \endgroup% latex table generated in R 3.2.3 by xtable 1.8-2 package
  \label{table:RelOpp}%
\end{table}%



%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

common_opps <- data1_PC_soc_eco

layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X <- common_opps[,c("Genus_species","PC1.Social.Opportunity", "PC1.Ecological.Opportunity")]
brain <- as.numeric(as.matrix(X)[,"PC1.Social.Opportunity"])
names(brain) <- common_opps$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-common_opps$Genus_species
matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_common_opps <- drop.tip(Petree, not)
contMap(tree_pruned_common_opps,brain,ftype="off",sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 social opportunities", cex.main=0.6)
text(17,38,"PC1 social opportunities", cex=0.5)
ylim<-c(1-0.12*(length(tree_pruned_common_opps$tip.label)-1),length(tree_pruned_common_opps$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
text(rep(0,length(tree_pruned_common_opps$tip.label)), 1:length(tree_pruned_common_opps$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_common_opps$tip.label), cex=0.5)
dati <- as.numeric(as.matrix(X)[,"PC1.Ecological.Opportunity"])
names(dati)<-common_opps$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-common_opps$Genus_species
contMap(tree_pruned_common_opps,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 ecological consequences", cex.main=0.6)
text(17,38,"PC1 ecological opportunities", cex=0.5)
@
%\caption{\scriptsize{PC1 social opportunities vs. PC1 ecological opportunities - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_opps}
%\end{figure}


\newpage


% =======================================
%\subsection{Consequences}
\subsection{Social Consequences}
%\subsubsection{Social consequences - Original analysis}
% =======================================

%\textbf{Coalitions definition Jaeggi and van Schaik 2011, Plavcan et al. 1995}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc2", colnames(data1))]
variables1 <- variables[c(2,3,4,9)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"

#Phylogenetic signals (phytools):=======================================
#phylosig(tree_pruned, dat[,"Social learning frequency"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Coalition formation"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Social_hunting"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Social_hunting, permut = 1000)
#phylosig(tree_pruned, dat[,"Food_sharing_among_adults"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Food_sharing_among_adults, permut = 1000)
##=============================================================

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind( diag(res$Eval), summary(res)$importance[3,], res$L)
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c( "Eigenvalues", "Cumulative Proportion", rownames(res$L))
@

<<echo=F, results=tex>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of social consequence variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))

#non-phylogenetic PCA (psych package):
library(psych)
res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

np_PCs_soc_consequences <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
colnames(np_PCs_soc_consequences)[2] <- c("npPC1_soc_consequences")


#non-phylogenetic pca (ade4 package), check whether it would make a difference to treat discrete characters as so:
library(ade4)
dat_dudi <- dat
#prepare data
dat_dudi[,"Coalition formation"] <- factor(dat_dudi[,"Coalition formation"], ordered = TRUE, levels = c(0,1,2))
dat_dudi[,"Social hunting"] <- as.factor(dat_dudi[,"Social hunting"])
dat_dudi[,"Food sharing among adults"] <- as.factor(dat_dudi[,"Food sharing among adults"])
#run dudi mix pca:
res_dudi_nonp <- dudi.mix(dat_dudi[,-1], scannf=FALSE, nf=ncol(dat_dudi[,-1]))
#str(res_dudi_nonp)
#res_dudi_nonp$index #a factor giving the type of each variable
#res_dudi_nonp$cr #a data frame giving for each variable and each score:
#res_dudi_nonp$l1 # principal components, data frame with n rows and nf columns
#xtable(res_dudi_nonp$cr)
@

<<echo=F>>=
#add PCs to data set:
PCs_soc_consequences <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
#PCs_soc_consequences <- data.frame(Genus_species=dat_dudi$Genus_species, res_dudi_nonp$l1[,1:3])
#colnames(PCs_soc_consequences)[2:4] <- c("PC1", "PC2", "PC3")
data1_PC <- merge(data1, PCs_soc_consequences, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.consequences"

soci.consi <- data1_PC
@


%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=12, height=10 >>=

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(3.5,1.5,0))
plot(PC1.Social.consequences ~ PC2.Social.consequences, dat_plot, xlab="PC2 Social Consequences", ylab="PC1 Social Consequences", xlim=c(-35,35),ylim=c(-10,40), pch=16, frame.plot = FALSE, axes=F, cex=2.0, col=dat_plot$Family, cex.lab=2.2)
axis(side = 1, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
axis(side = 2, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=5) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=5)
#text(dat_plot[,c("PC2.Social.consequences","PC1.Social.consequences")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.8, col="dimgrey")
par(xpd=T)
legend(38,30, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.5)


#data1_PC$boxplot_var <- as.factor(rep(1, length(data1_PC[,1])))
#boxplot(PC1.Social.consequences ~ boxplot_var, data1_PC,  xlab="", ylab="PC1 Social Consequences", border="white", cex.lab=1.2, cex.axis=1.2, frame.plot = FALSE, axes=F, ylim=c(-10,80))
#axis(side = 2, at=c(-10,0,10,20,30,40,50,60,70,80), labels=c(-10,0,10,20,30,40,50,60,70,80), lwd=2.0, las=0, cex.axis=0.9)
#points(PC1.Social.consequences ~ boxplot_var,data1_PC, add=T, pch=16, col=dat_plot$Family)
#text(data1_PC[,c("boxplot_var","PC1.Social.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)
@
%\caption{\scriptsize{Social consequences - PC1 vs. PC2. The color code corresponds to the taxonomic level of a family.}}
%\label{fig:socCONSPC}
%\end{figure}


%\newpage
<<echo=F, results=tex>>=
#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_soc_cons <- data1_PC[complete.cases(data1_PC[,c("PC1.Social.consequences")]),]

#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Social.consequences"], method="lambda", test=TRUE, nsim=1000)

#=======================================================================

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(PC2.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, delta="ML")
tab_pgls(model1)
#model1<-pgls(PC1.Social.consequences ~ 1, data = comp_data, lambda="ML", delta="ML")
#summary(model1)

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)

#model1<-pgls(log(Brain.Size)  ~  log(Body.Mass) + PC1.Social.consequences, data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\newpage

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=

#----#Social consequences:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X<-data1_PC_phyl_sig_soc_cons[,c("Genus_species","ResBrainBody","PC1.Social.consequences")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_soc_cons$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_soc_cons$Genus_species
matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_soc_cons <- drop.tip(Petree, not)
contMap(tree_pruned_soc_cons,brain, ftype="off", sig=1, legend=30, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(17,45,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_soc_cons$tip.label)-1),length(tree_pruned_soc_cons$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_soc_cons$edge[,2] <= length(tree_pruned_soc_cons$tip.label)
ordered_tips <- tree_pruned_soc_cons$edge[is_tip, 2]
#tree_pruned_soc_cons$tip.label[ordered_tips]
text(rep(0,length(tree_pruned_soc_cons$tip.label)), 1:length(tree_pruned_soc_cons$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_soc_cons$tip.label[ordered_tips]), cex=0.5)
dati <- as.numeric(as.matrix(X)[,"PC1.Social.consequences"])
names(dati)<-data1_PC_phyl_sig_soc_cons$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_soc_cons$Genus_species
contMap(tree_pruned_soc_cons, dati, ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 social consequences", cex.main=0.6)
text(17,45,"PC1 social consequences", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC1 social consequences - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_soc_cons}
%\end{figure}

%\newpage
%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Social.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-0.9,1), ylim=c(-13,65), cex=1.2, cex.lab=1.0)
axis(side = 2, at=c(0,10,20,30,40,50), labels=c(0,10,20,30,40,50), lwd=2.0, las=0, cex.axis=0.9)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2.0, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2.0) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2.0)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,60, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)

#plot for paper:=============================================================
#dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
#dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
#dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#plot with pch: pch = as.nummeric(Family)
#plot(PC1.Social.consequences ~ ResBrainBody, dat_plot, xlim=c(-0.9,1), ylim=c(-13,65),xlab="Residuals Brain Size", ylab="PC1 Social Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
#axis(side = 2, at=c(0,20,40), labels=c(0,20,40), lwd=2, las=0)
#axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
#legend("topleft", legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)

@
%\end{figure}


%systematically leaving each variable out, calculating model!
<<echo=F, results=hide>>=

#empty matrix:================================================
m <- matrix(NA, length(names(dat)), 4)

#empty array for saving the loadings of the first two PCs of the pPCA excluding each of the variables:
list_loadings_soc_cons <- list(NULL)

#original analysis:===========================================
model1 <- pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
model2 <- pgls(PC2.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')

#m[1,1] <- length(model1$residuals)
m[1,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
m[1,c(3:4)] <- coefficients(summary(model2))[3,c(1,4)] #PC2

#===============================================================
#leave systematically one variable out and rerun pPCA and PGLS:
for(v in 2:length(names(dat)) ){
  
  #run phyl.pca
  res_alt <- phyl.pca(tree_pruned, dat[,-c(1,v)], method="lambda", mode="corr")
  
  #add loadings to list:
  #list_loadings_soc_opp[[paste("excluding", names(dat)[v])]] <- res_alt$L[,c(1,2)]
  tab_alt_soc_cons <- rbind(  diag(res_alt$Eval)[1:2], summary(res_alt)$importance[3,1:2], res_alt$L[,c(1,2)]  )
  rownames(tab_alt_soc_cons)[1:2] <- c("Eigenvalues", "Cumulative Proportion")
  list_loadings_soc_cons[[v-1]] <- tab_alt_soc_cons

  
  #add PCs to data set:
  PCs_alt <- data.frame(Genus_species=dat$Genus_species, res_alt$S[,1:3])
  data1_PC_alt <- merge(data1, PCs_alt, by="Genus_species", all.x=T)
  data1_PC_alt$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_alt, na.action=na.exclude))
  
  colnames(data1_PC_alt)[grep("Morph1.Brain.size.combined", colnames(data1_PC_alt))] <- "Brain.Size"
  colnames(data1_PC_alt)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_alt))] <- "Body.Mass"
  colnames(data1_PC_alt)[grep("PC1", colnames(data1_PC_alt))] <- "PC1.Social.consequences"
  colnames(data1_PC_alt)[grep("PC2", colnames(data1_PC_alt))] <- "PC2.Social.consequences"
 
  data1_PC_alt$PC1.Social.consequences <- (-1)*(data1_PC_alt$PC1.Social.consequences)
  
  #run PGLS analysis:
  comp_data_alt <- comparative.data(phy = Petree, data = data1_PC_alt, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  model1 <- try(pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data_alt, lambda='ML'), silent=T)
  model2 <- try(pgls(PC2.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data_alt, lambda='ML'), silent=T)
  #tab_pgls(model1)
  if ((class(model1) != "try-error") & (class(model2)  != "try-error")){
    #m[v,1] <- length(model1$residuals)
    m[v,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
    m[v,c(3:4)] <- coefficients(summary(model2))[3,c(1,4)] #PC2
  }
  else{#if error in PGLS caper: ABNORMAL_TERMINATION_IN_LNSRCH
      
    #m[v,1] <- model1$dims$N
    m[v,c(1:2)] <- 999#summary(model1)$tTable[3,c(1,4)] #PC1
    m[v,c(3:4)] <- 999#summary(model1)$tTable[3,c(1,4)] #PC1
  }
  
}

colnames(m) <- c("estimate", "p-value", "estimate", "p-value")
rownames(m) <- c("all variables - original analysis",paste("excluding", names(dat)[-1] )  )
m[m==999]<-NA

@

<<echo=F, results=tex>>=

#add super-colnames (PC1) in m table:
addtorow <- list()
addtorow$pos <- list(0,0)
#addtorow$command <- c('& \\multicolumn{2}{c}{PC1} \\\\' , '& estimate & p-value\\\\' )
addtorow$command <- c(paste0(paste0('& \\multicolumn{2}{c}{', c("PC1", "PC2"), '}', collapse=''), '\\\\'), '& estimate & p-value & estimate & p-value \\\\' )


print(xtable(list_loadings_soc_cons[[1]], caption=paste0("\\scriptsize{Phylogenetic PCA of social consequence variables excluding Social learning frequency, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.cons.leave.out1"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_cons[[2]], caption=paste0("\\scriptsize{Phylogenetic PCA of social consequence variables excluding Coalition formation, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_cons[[3]], caption=paste0("\\scriptsize{Phylogenetic PCA of social consequence variables excluding Social hunting, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_soc_cons[[4]], caption=paste0("\\scriptsize{Phylogenetic PCA of social consequence variables excluding Food sharing among adults, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Soc.cons.leave.out4"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")


print(xtable(data.frame(m),align=c("l", "c", "c", "c", "c"), digits=4, caption=paste0("\\scriptsize{Estimates and p-values of the effects of relative brain size on PC1 and PC2 of the social consequences (mulitple PGLS regression). In the first row the result of the original analysis is given, in the subsequent rows, the results are based on PCs from pPCAs where systematically each of the variable is left out. All analyses are based on the maximum sample size used for the original analysis N=", nrow(dat),".}"), label="tab:Soc.cons.leave.out"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=addtorow, include.colnames=F)

@

%\newpage


\textbf{Excluding outliers - \textit{Cebus capucinus, Cebus apella, Pan troglodytes} }
<<echo=F, results=tex>>=
#add PCs to data set:
data1_PC$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC, na.action=na.exclude))

data1_PC_wo_out <- data1_PC[ ! data1_PC$Genus_species %in% c("Cebus_capucinus", "Cebus_apella", "Pan_troglodytes"), ]

comp_data <- comparative.data(phy = Petree, data = data1_PC_wo_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~ log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1, label="tab:out1")

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~ log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1.1,1.1), ylim=c(-10,25), cex=1.2, cex.lab=1)
axis(side = 2, at=c(-5,0,5,10,15,20), labels=c(-5,0,5,10,15,20), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-1,-0.5,0,0.5,1), labels=c(-1,-0.5,0,0.5,1), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.3,22, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}

%\newpage



%\textbf{Common sample with social \& ecological opportunities:}
<<echo=F, results=hide>>=
#common sample with social&ecologcial opportunities:
colnames(PCs_soc_consequences) <- c("Genus_species", "PC1.Social.consequences", "PC2.Social.consequences", "PC3.Social.consequences")
data1_PC_combi <- merge(data1_PC_soc_eco, PCs_soc_consequences, by="Genus_species", all.x=T)
data1_PC_combi <- data1_PC_combi[complete.cases(data1_PC_combi[,c("Genus_species","Brain.Size","PC1.Social.Opportunity", "PC1.Ecological.Opportunity" , "PC1.Social.consequences")]),]

comp_data <- comparative.data(phy = Petree, data = data1_PC_combi, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)


#dat_gls <- data1_PC_combi
#matches<-match(Petree$tip.label, dat_gls$Genus_species, nomatch=0)
#not<-subset(Petree$tip.label, matches==0)
#tree_pruned<-drop.tip(Petree, not)
#rownames(dat_gls) <- dat_gls$Genus_species
#model1 <- gls(PC1.Social.consequences ~ log(Morph1.Body.mass.combined..g.) + log(Morph1.Brain.size.combined), correlation = corPagel(value=0.9, phy=tree_pruned), data=dat_gls)
#tab_gls(model1)


#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC_combi, pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC_combi), col="darkgrey", lwd=2)
#text(data1_PC_combi[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC_#combi[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_combi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-0.9,0.85), ylim=c(-13,65), cex=1.2, cex.lab=1)
axis(side = 2, at=c(0,10,20,30,40,50), labels=c(0,10,20,30,40,50), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,60, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage



%\textbf{Excluding outliers - Cebus capucinus, Cebus apella, Pan troglodytes}
<<echo=F, results=hide>>=
#add PCs to data set:
data1_PC_combi$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC_combi, na.action=na.exclude))

data1_PC_wo_out <- data1_PC_combi[ ! data1_PC_combi$Genus_species %in% c("Cebus_capucinus", "Cebus_apella", "Pan_troglodytes"), ]

comp_data <- comparative.data(phy = Petree, data = data1_PC_wo_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=FALSE, fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1.1,1.1), ylim=c(-10,25), cex=1.2, cex.lab=1)
axis(side = 2, at=c(-5,0,5,10,15,20), labels=c(-5,0,5,10,15,20), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-1,-0.5,0,0.5,1), labels=c(-1,-0.5,0,0.5,1), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.3,25, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage



%\subsubsection{Social consequences - Including fission-fusion}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc2", colnames(data1))]
variables1 <- variables[c(1,2,3,4,9)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings PC1 social opportunities:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.consequences"

#invert PC1.Social.consequences:
data1_PC$PC1.Social.consequences <- (-1)*(data1_PC$PC1.Social.consequences)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Social.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F,  fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1.0,0.9), ylim=c(-10,60), cex=1.2, cex.lab=1)
axis(side = 2, at=c(0,10,20,30,40,50), labels=c(0,10,20,30,40,50), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-0.5,0,0.5), labels=c(-0.5,0,0.5), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,55, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage


%\subsubsection{Social consequences - Excluding hunting}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc2", colnames(data1))]
variables1 <- variables[c(2,3,9)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings PC1 social opportunities:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.consequences"

#invert PC1.Social.consequences:
data1_PC$PC1.Social.consequences <- (-1)*(data1_PC$PC1.Social.consequences)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Social.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1.0,0.9), ylim=c(-10,55), cex=1.2, cex.lab=1)
axis(side = 2, at=c(0,10,20,30,40,50), labels=c(0,10,20,30,40,50), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-0.5,0,0.5), labels=c(-0.5,0,0.5), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,50, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage




%\subsubsection{Social consequences - Including vocal terr. advertisement}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc2|Vocal", colnames(data1))]
variables1 <- variables[c(1,3,4,5,10)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


colnames(dat)[grep("Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Vocal terr. advertisement"
colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.consequences"

#invert PC1.Social.consequences:
data1_PC$PC1.Social.consequences <- (-1)*(data1_PC$PC1.Social.consequences)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Social.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F,  fig=FALSE, width=7, height=5>>=
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1.0,0.9), ylim=c(-10,50), cex=1.2, cex.lab=1)
axis(side = 2, at=c(0,10,20,30,40), labels=c(0,10,20,30,40), lwd=2, las=0, cex.axis=0.9)
axis(side = 1, at=c(-0.5,0,0.5), labels=c(-0.5,0,0.5), lwd=2, las=0, cex.axis=0.9)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,48, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}


\newpage


% =======================================
\subsection{Ecological Consequences}
%\subsubsection{Ecological consequences - Original analysis}
% =======================================


<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco2", colnames(data1))]
variables1 <- variables[c(1:5)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)

colnames(dat)[grep("Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Degree of buffering env. seasonality"
colnames(dat)[grep("Eco2.Diet.breadth.combined", colnames(dat))] <- "Diet breadth"
colnames(dat)[grep("Eco2.Hunting.combined", colnames(dat))] <- "Hunting"
colnames(dat)[grep("Eco2.Tool.use..Bentley.Condit.and.Smith.2010.", colnames(dat))] <- "Tool use"
colnames(dat)[grep("Eco2.Residuals.innovation..Reader.et.al..2011.", colnames(dat))] <- "Innovation frequency"


#Phylogenetic signals (phytools):=======================================
#phylosig(tree_pruned, dat[,"Degree of buffering env. seasonality"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Diet breadth"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Hunting"], method="lambda", test=TRUE, nsim=1000)
#phylo.d(dat, tree_pruned, names.col=Genus_species, binvar=Hunting, permut = 1000)
#phylosig(tree_pruned, dat[,"Tool_use"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, dat[,"Innovation frequency"], method="lambda", test=TRUE, nsim=1000)
##=======================================================================

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c( "Eigenvalues", "Cumulative Proportion", rownames(res$L))
@

<<echo=F, results=tex>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of ecological consequence variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))

#non-phylogenetic PCA:
res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

np_PCs_eco_consequences <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
colnames(np_PCs_eco_consequences)[2] <- "npPC1_eco_consequences"


#non-phylogenetic pca (ade4 package), check whether it would make a difference to treat discrete characters as so:
library(ade4)
dat_dudi <- dat
#prepare data
dat_dudi[,"Tool use"] <- factor(dat_dudi[,"Tool use"], ordered = TRUE, levels = c(0,1,2))
dat_dudi[,"Hunting"] <- as.factor(dat_dudi[,"Hunting"])
#run dudi mix pca:
res_dudi_nonp <- dudi.mix(dat_dudi[,-1], scannf=FALSE, nf=ncol(dat_dudi[,-1]))
#str(res_dudi_nonp)
#res_dudi_nonp$index #a factor giving the type of each variable
#res_dudi_nonp$cr #a data frame giving for each variable and each score:
#res_dudi_nonp$l1 # principal components, data frame with n rows and nf columns
#xtable(res_dudi_nonp$cr)


#add PCs to data set:
PCs_eco_consequences <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
#PCs_eco_consequences <- data.frame(Genus_species=dat_dudi$Genus_species, res_dudi_nonp$l1[,1:3])
#colnames(PCs_eco_consequences)[2:4] <- c("PC1", "PC20", "PC3")
data1_PC <- merge(data1, PCs_eco_consequences, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.consequences"

eco.consi <- data1_PC
@


%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=12, height=10 >>=

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(3.5,1.5,0))
plot(PC1.Ecological.consequences ~ PC2.Ecological.consequences, dat_plot, xlab="PC2 Ecological Consequences", ylab="PC1 Ecological Consequences", xlim=c(-15,28),ylim=c(-10,40), pch=16, frame.plot = FALSE, axes=F, cex=2.0, col=dat_plot$Family, cex.lab=2.2)
axis(side = 1, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=5, las=0, cex.axis=1.5)
axis(side = 2, at=c(-30,-20,-10,0,10,20,30), labels=c(-30,-20,-10,0,10,20,30), lwd=5, las=0, cex.axis=1.5)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=5) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=5)
#text(dat_plot[,c("PC2.Ecological.consequences","PC1.Ecological.consequences")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.8, col="dimgrey")
par(xpd=T)
legend(26,30, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.5)

@
%\caption{\scriptsize{Ecological consequences - PC1 vs. PC2. The color code corresponds to the taxonomic level of a family.}}
%\label{fig:ecoCONSPC}
%\end{figure}

%\newpage


<<echo=F, results=hide>>=
#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_eco_cons <- data1_PC[complete.cases(data1_PC[,c("PC1.Ecological.consequences")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Ecological.consequences"], method="lambda", test=TRUE, nsim=1000)

@

<<echo=F, results=tex>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
model1<-pgls(PC2.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, delta="ML")
tab_pgls(model1)
#model1<-pgls(PC1.Ecological.consequences ~  1, data = comp_data, lambda="ML", delta="ML")
#summary(model1)

#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)

#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.consequences, data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\newpage

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=
#----#Ecological consequences:-----
layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X <- data1_PC_phyl_sig_eco_cons[,c("Genus_species","ResBrainBody","PC1.Ecological.consequences")]
brain<-as.numeric(as.matrix(X)[,"ResBrainBody"])
names(brain)<-data1_PC_phyl_sig_eco_cons$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-data1_PC_phyl_sig_eco_cons$Genus_species
matches <- match(Petree$tip.label, data1_PC_phyl_sig_eco_cons$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_eco_cons <- drop.tip(Petree, not)
contMap(tree_pruned_eco_cons,brain,ftype="off", legend=30,sig=1, outline=F, fsize=c(1,0.5))
#title("Residuals brain size", cex.main=0.6)
text(22,48,"Residuals brain size", cex=0.6)
ylim<-c(1-0.12*(length(tree_pruned_eco_cons$tip.label)-1),length(tree_pruned_eco_cons$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
#order tip labels according to tree:
is_tip <- tree_pruned_eco_cons$edge[,2] <= length(tree_pruned_eco_cons$tip.label)
ordered_tips <- tree_pruned_eco_cons$edge[is_tip, 2]
#tree_pruned_eco_cons$tip.label[ordered_tips]
tip_nam <- gsub("[[:lower:]]{1,}_", ". ", tree_pruned_eco_cons$tip.label[ordered_tips])
tip_nam[which(tip_nam=="D. madagascariensis")] <- "D. madagasc."
text(rep(0,length(tree_pruned_eco_cons$tip.label)), 1:length(tree_pruned_eco_cons$tip.label),tip_nam, cex=0.5)
dati<-as.numeric(as.matrix(X)[,"PC1.Ecological.consequences"])
names(dati)<-data1_PC_phyl_sig_eco_cons$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-data1_PC_phyl_sig_eco_cons$Genus_species
contMap(tree_pruned_eco_cons,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 ecological consequences", cex.main=0.6)
text(22,48,"PC1 ecological consequences", cex=0.6)
@
%\caption{\scriptsize{Residuals brain size vs. PC1 ecological consequences - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_eco_cons}
%\end{figure}

%\newpage
%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Ecological.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.3), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-0.9,0.85), ylim=c(-10,45),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,42, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)

#plot for paper:=============================================================
#dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
#dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
#dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))


#plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-0.9,1), ylim=c(-10,45),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
#axis(side = 2, at=c(0,20,40), labels=c(0,20,40), lwd=2, las=0)
#axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
#legend("topleft", legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.5)

@
%\end{figure}


%systematically leaving each variable out, calculating model!
<<echo=F, results=hide>>=

#empty matrix:================================================
m <- matrix(NA, length(names(dat)), 4)
rownames(m) <- rep("", length(names(dat)))

#empty array for saving the loadings of the first two PCs of the pPCA excluding each of the variables:
list_loadings_eco_cons <- list(NULL)


#original analysis:===========================================
model1 <- pgls(PC1.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
model2 <- pgls(PC2.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
#m[1,1] <- length(model1$residuals)
m[1,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
m[1,c(3:4)] <- coefficients(summary(model2))[3,c(1,4)] #PC2


#===============================================================
#leave systematically one variable out and rerun pPCA and PGLS:
for(v in 2:length(names(dat)) ){
  
  #run phyl.pca
  res_alt <- phyl.pca(tree_pruned, dat[,-c(1,v)], method="lambda", mode="corr")
  
  #add loadings to list:
  tab_alt_eco_cons <- rbind(  diag(res_alt$Eval)[1:2], summary(res_alt)$importance[3,1:2], res_alt$L[,c(1,2)]  )
  rownames(tab_alt_eco_cons)[1:2] <- c("Eigenvalues", "Cumulative Proportion")
  list_loadings_eco_cons[[v-1]] <- tab_alt_eco_cons

  #add PCs to data set:
  PCs_alt <- data.frame(Genus_species=dat$Genus_species, res_alt$S[,1:3])
  data1_PC_alt <- merge(data1, PCs_alt, by="Genus_species", all.x=T)
  data1_PC_alt$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_alt, na.action=na.exclude))
  
  colnames(data1_PC_alt)[grep("Morph1.Brain.size.combined", colnames(data1_PC_alt))] <- "Brain.Size"
  colnames(data1_PC_alt)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_alt))] <- "Body.Mass"
  colnames(data1_PC_alt)[grep("PC1", colnames(data1_PC_alt))] <- "PC1.Ecological.consequences"
  colnames(data1_PC_alt)[grep("PC2", colnames(data1_PC_alt))] <- "PC2.Ecological.consequences"
 
  data1_PC_alt$PC1.Ecological.consequences <- (-1)*(data1_PC_alt$PC1.Ecological.consequences)
  
  #run PGLS analysis:
  comp_data_alt <- comparative.data(phy = Petree, data = data1_PC_alt, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  model1 <- try(pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data_alt, lambda='ML'), silent=T)
  model2 <- try(pgls(PC2.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data_alt, lambda='ML'), silent=T)
  #tab_pgls(model1)
  if ( (class(model1) != "try-error") & (class(model2)  != "try-error") ){
    #m[v,1] <- length(model1$residuals)
    m[v,c(1:2)] <- coefficients(summary(model1))[3,c(1,4)] #PC1
    m[v,c(3:4)] <- coefficients(summary(model2))[3,c(1,4)] #PC1
    rownames(m)[v] <-paste("excluding", names(dat)[v])
  }
  else{#if error in PGLS caper: ABNORMAL_TERMINATION_IN_LNSRCH
    
      data1_PC_alt_2 <- data1_PC_alt[complete.cases(data1_PC_alt[,"PC1.Ecological.consequences"]),]
      prior<-list(R=list(V=1,nu=0.002), G=list(G1=list(V=1, nu=0.002)))
      names(data1_PC_alt_2)[1] <- "animal"
      model1 <- MCMCglmm(PC1.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), random=~animal, data=data1_PC_alt_2, pedigree=tree_pruned, prior=prior, pr=F, scale=F,saveX=F, nitt=30000)
      model2 <- MCMCglmm(PC2.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), random=~animal, data=data1_PC_alt_2, pedigree=tree_pruned, prior=prior, pr=F, scale=F,saveX=F, nitt=30000)
      #summary(model1)
      #m[v,1] <- model1$dims$N
      m[v,c(1:2)] <- summary(model1)$solutions[3,c(1,5)] 
      m[v,c(3:4)] <- summary(model2)$solutions[3,c(1,5)] 
      rownames(m)[v] <- paste("excluding",names(dat)[v], "*")
    
  }
  
}

colnames(m) <- c("estimate", "p-value", "estimate", "p-value")
rownames(m)[1] <- "all variables - original analysis"
#m[m==999]<-NA
@

<<echo=F, results=tex>>=
#add super-colnames (PC1) in m table:
addtorow <- list()
addtorow$pos <- list(0,0)
#addtorow$command <- c(' & \\multicolumn{2}{c}{PC1} \\\\' , '& estimate & p-value\\\\')
addtorow$command <- c(paste0(paste0('& \\multicolumn{2}{c}{', c("PC1", "PC2"), '}', collapse=''), '\\\\'), '& estimate & p-value & estimate & p-value \\\\' )

#\\multicolumn{3}{\\textbf{Note: } \\ast Numerical optimization problem in PGLS, alternative: bayesian phylogenetic mixed model ran in MCMCglmm} \\\\'


print(xtable(list_loadings_eco_cons[[1]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological consequence variables excluding Degree of buffering env. seasonality, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Eco.cons.leave.out1"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_cons[[2]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological consequence variables excluding Diet breadth, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_cons[[3]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological consequence variables excluding Hunting, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Eco.cons.leave.out3"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_cons[[4]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological consequence variables excluding Tool use, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")

print(xtable(list_loadings_eco_cons[[5]], caption=paste0("\\scriptsize{Phylogenetic PCA of ecological consequence variables excluding Innovation frequency, N = ", nrow(dat), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding PC1 and PC2.}"), label="tab:Eco.cons.leave.out5"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H",  include.colnames=T, tabular.environment="tabular")


print(xtable(data.frame(m),align=c("l", "c", "c", "c", "c"), digits=4, caption=paste0("\\scriptsize{Estimates and p-values of the effects of relative brain size on PC1 and PC2 of the ecological consequences (mulitple PGLS regression). In the first row the result of the original analysis is given, in the subsequent rows, the results are based on PCs from pPCAs where systematically each of the variable is left out. All analyses are based on the maximum sample size used for the original analysis N=", nrow(dat),".} \\tiny{$\\ast$Numerical optimization problem using PGLS in the package \\texttt{caper}, alternatively applied bayesian phylogenetic mixed model in the package \\texttt{MCMCglmm}, yielding equivalent results.}"), label="tab:Eco.cons.leave.out"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=addtorow, include.colnames=F)
@

%\newpage


\textbf{Excluding outliers - \textit{Cebus capucinus}, \textit{Cebus apella}, \textit{Pan troglodytes}}
<<echo=F, results=tex>>=
#add PCs to data set:
data1_PC$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC, na.action=na.exclude))

data1_PC_wo_out <- data1_PC[ ! data1_PC$Genus_species %in% c("Cebus_capucinus", "Cebus_apella", "Pan_troglodytes"), ]

comp_data <- comparative.data(phy = Petree, data = data1_PC_wo_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1, label="tab:out2")
#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-0.9,0.85), ylim=c(-10,20),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,-5,0,5,10,15), labels=c(-10,-5,0,5,10,15), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,17, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage

%\textbf{Common sample with social \& ecological opportunities:}
<<echo=F, results=hide>>=
#common sample with social&ecologcial opportunities:
colnames(PCs_eco_consequences) <- c("Genus_species", "PC1.Ecological.consequences", "PC2.Ecological.consequences", "PC1.Ecological.consequences")
data1_PC_combi <- merge(data1_PC_soc_eco, PCs_eco_consequences, by="Genus_species", all.x=T)
data1_PC_combi <- data1_PC_combi[complete.cases(data1_PC_combi[,c("Genus_species","Brain.Size","PC1.Social.Opportunity", "PC1.Ecological.Opportunity" , "PC1.Ecological.consequences")]),]

comp_data <- comparative.data(phy = Petree, data = data1_PC_combi, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_combi, xlim=c(-1,1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_combi), col="darkgrey", lwd=2)
#text(data1_PC_combi[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC_combi[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_combi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.85), ylim=c(-10,43),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20,30), labels=c(-10,0,10,20,30), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,39, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage


%\textbf{Excluding outliers - Cebus capucinus, Cebus apella, Pan troglodytes}
<<echo=F, results=hide>>=
#add PCs to data set:
data1_PC_combi$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC_combi, na.action=na.exclude))

data1_PC_wo_out <- data1_PC_combi[ ! data1_PC_combi$Genus_species %in% c("Cebus_capucinus", "Cebus_apella", "Pan_troglodytes"), ]

comp_data <- comparative.data(phy = Petree, data = data1_PC_wo_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.85), ylim=c(-10,20),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,-5,0,5,10,15), labels=c(-10,-5,0,5,10,15), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,18.5, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage


%\subsubsection{Ecological consequences - Including extractive foraging}
<<echo=F, results=hide>>=
variables <- names(data1)[grep("Eco1|Eco2", colnames(data1))]
variables1 <- variables[c(11,17:21)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)

colnames(dat)[grep("Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Degree of buffering env. seasonality"
colnames(dat)[grep("Eco2.Diet.breadth.combined", colnames(dat))] <- "Diet breadth"
colnames(dat)[grep("Eco2.Hunting.combined", colnames(dat))] <- "Hunting"
colnames(dat)[grep("Eco2.Tool.use..Bentley.Condit.and.Smith.2010.", colnames(dat))] <- "Tool use"
colnames(dat)[grep("Eco2.Residuals.innovation..Reader.et.al..2011.", colnames(dat))] <- "Innovation frequency"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.consequences"

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Ecological.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.3), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.9), ylim=c(-17,50),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,45, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}

\newpage

%\subsubsection{Ecological consequences - Excluding hunting}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco2", colnames(data1))]
variables1 <- variables[c(1:2,4:5)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)

colnames(dat)[grep("Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Degree of buffering env. seasonality"
colnames(dat)[grep("Eco2.Diet.breadth.combined", colnames(dat))] <- "Diet breadth"
colnames(dat)[grep("Eco2.Hunting.combined", colnames(dat))] <- "Hunting"
colnames(dat)[grep("Eco2.Tool.use..Bentley.Condit.and.Smith.2010.", colnames(dat))] <- "Tool use"
colnames(dat)[grep("Eco2.Residuals.innovation..Reader.et.al..2011.", colnames(dat))] <- "Innovation frequency"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("\\scriptsize{pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), "}") ), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.consequences"

#invert PC1.Ecological.consequences:
data1_PC$PC1.Ecological.consequences <- (-1)*(data1_PC$PC1.Ecological.consequences)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
#model1<-pgls(PC2.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)

#absolute brain size:
#model1<-pgls(PC1.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
#model1<-pgls(PC2.Ecological.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.Ecological.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.3), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.8), ylim=c(-10,30),xlab="Residuals Brain Size", ylab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.0,25, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}

\newpage




% =============================================================
%\subsubsection{Social and ecological consequences - common sample}
% =============================================================

<<echo=F, results=hide>>=
colnames(PCs_soc_consequences) <- c("Genus_species", "PC1.Social.consequences", "PC2.Social.consequences", "PC3.Social.consequences")
colnames(PCs_eco_consequences) <- c("Genus_species", "PC1.Ecological.consequences", "PC2.Ecological.consequences", "PC3.Ecological.consequences")
data1_PC_social_consequences <- merge(data1, PCs_soc_consequences, by="Genus_species", all.x=T)
data1_PC_soc_eco_consequences <- merge(data1_PC_social_consequences, PCs_eco_consequences, by="Genus_species", all.x=T)
colnames(data1_PC_soc_eco_consequences)[grep("Morph1.Brain.size.combined", colnames(data1_PC_soc_eco_consequences))] <- "Brain.Size"
colnames(data1_PC_soc_eco_consequences)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_soc_eco_consequences))] <- "Body.Mass"
data1_PC_soc_eco_consequences <- data1_PC_soc_eco_consequences[complete.cases(data1_PC_soc_eco_consequences[,c("Genus_species", "Brain.Size","PC1.Social.consequences", "PC1.Ecological.consequences")]),]

data1_PC_soc_eco_consequences$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC_soc_eco_consequences, na.action=na.exclude))

comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco_consequences, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1)

model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1)


#model1<-pgls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.consequences, data = comp_data, lambda='ML') 
#tab_pgls(model1)

#model1<-pgls(log(Brain.Size) ~ log(Body.Mass) + PC1.Ecological.consequences, data = comp_data, lambda='ML') 
#tab_pgls(model1)
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=23, height=9>>=
#par(mfrow=c(1,2))
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC_soc_eco_consequences, xlim=c(-1,1.1), xlab="Residuals brain size", pch=16)
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC_soc_eco_consequences), col="darkgrey", lwd=2)
#text(data1_PC_soc_eco_consequences[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC_soc_eco_consequences[,"Genus_species"],pos=4, cex=0.5)

#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_soc_eco_consequences, xlim=c(-1,1.1), xlab="Residuals brain size", pch=16)
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_soc_eco_consequences), col="darkgrey", lwd=2)
#text(data1_PC_soc_eco_consequences[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC_soc_eco_consequences[,"Genus_species"],pos=4, cex=0.5)


dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_soc_eco_consequences, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences","PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#par(mar=c(5,4,4,2))
plot(PC1.Social.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,1),ylim=c(-12,60), ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 2, at=c(-10,0,10,20,30,40,50), labels=c(-10,0,10,20,30,40,50), lwd=6, las=0, cex.axis=2)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")

#par(mar=c(8,8,4,12))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot,  ylab="PC1 Ecological Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1,1), ylim=c(-10,45), cex=2.8, cex.lab=2.5)
axis(side = 2, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,40, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
@
%\end{figure}


\newpage

% ===================================================================
\subsection{Relationship between social and ecological consequences}
% ===================================================================

<<echo=F, results=tex>>=
#model1<-pgls(PC1.Social.consequences ~  PC1.Ecological.consequences, data = comp_data, lambda='ML') 
#tab_pgls(model1)

model1<-pgls(PC1.Social.consequences ~  PC1.Ecological.consequences + log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1)

#model1<-pgls(PC1.Ecological.consequences ~ PC1.Social.consequences, data = comp_data, lambda='ML') 
#tab_pgls(model1)

model1<-pgls(PC1.Ecological.consequences ~ PC1.Social.consequences + log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1)
@


%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE>>=
#----#Ecological consequences:-----

common_cons <- data1_PC_soc_eco_consequences

layout(matrix(1:3,1,3),widths=c(0.44,0.12,0.44))
par(cex=1)
X <- common_cons[,c("Genus_species","PC1.Social.consequences", "PC1.Ecological.consequences")]
brain <- as.numeric(as.matrix(X)[,"PC1.Social.consequences"])
names(brain) <- common_cons$Genus_species
brain <- brain[complete.cases(brain)]
names(brain)<-common_cons$Genus_species
matches <- match(Petree$tip.label, names(brain), nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned_common_cons <- drop.tip(Petree, not)
contMap(tree_pruned_common_cons,brain,ftype="off",sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 social consequences", cex.main=0.6)
text(17,25,"PC1 social consequences", cex=0.5)
ylim<-c(1-0.12*(length(tree_pruned_common_cons$tip.label)-1),length(tree_pruned_common_cons$tip.label))
plot.new(); plot.window(xlim=c(-0.1,0.1),ylim=ylim)
text(rep(0,length(tree_pruned_common_cons$tip.label)), 1:length(tree_pruned_common_cons$tip.label),gsub("[[:lower:]]{1,}_", ". ", tree_pruned_common_cons$tip.label), cex=0.5)
dati <- as.numeric(as.matrix(X)[,"PC1.Ecological.consequences"])
names(dati)<-common_cons$Genus_species
dati <- dati[complete.cases(dati)]
names(dati)<-common_cons$Genus_species
contMap(tree_pruned_common_cons,dati,ftype="off",direction="leftwards", sig=1,legend=30, outline=F, fsize=c(1,0.5))
#title("PC1 ecological consequences", cex.main=0.6)
text(17,25,"PC1 ecological consequences", cex=0.5)
@
%\caption{\scriptsize{PC1 social consequences vs. PC1 ecological consequences - ancestral state reconstructions based on the function \texttt{contMap} from the package \texttt{phytools}.}}
%\label{fig:asr_cons}
%\end{figure}


%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#par(mfrow=c(1,1))
#plot(PC1.Social.consequences ~ PC1.Ecological.consequences, data1_PC_soc_eco_consequences, ylab="PC1 Social Consequences", xlab="PC1 Ecological Consequences", pch=16)
#abline(lm(PC1.Social.consequences ~ PC1.Ecological.consequences, data1_PC_soc_eco_consequences), col="darkgrey", lwd=2)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_soc_eco_consequences, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mgp=c(2.2,1,0))
plot(PC1.Social.consequences ~ PC1.Ecological.consequences, dat_plot, xlim=c(-10,45), ylim=c(-10,65),ylab="PC1 Social Consequences", xlab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20,30,40,50,60), labels=c(-10,0,10,20,30,40,50,60), lwd=2, las=0)
axis(side = 1, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ PC1.Ecological.consequences, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(50,60, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}
%\newpage



\textbf{Excluding outliers: \textit{Cebus capucinus}, \textit{Cebus apella}, \textit{Pan troglodytes}}
<<echo=F, results=tex>>=
data1_PC_wo_out <- data1_PC_soc_eco_consequences[ ! data1_PC_soc_eco_consequences$Genus_species %in% c("Cebus_capucinus", "Cebus_apella", "Pan_troglodytes"), ]

comp_data <- comparative.data(phy = Petree, data = data1_PC_wo_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

model1<-pgls(PC1.Social.consequences ~  PC1.Ecological.consequences, data = comp_data, lambda='ML') 
tab_pgls(model1, label="tab:out3")

model1<-pgls(PC1.Social.consequences ~  PC1.Ecological.consequences + log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1, label="tab:out4")

model1<-pgls(PC1.Ecological.consequences ~ PC1.Social.consequences, data = comp_data, lambda='ML') 
tab_pgls(model1, label="tab:out5")

model1<-pgls(PC1.Ecological.consequences ~ PC1.Social.consequences + log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
tab_pgls(model1, label="tab:out6")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=23, height=9>>=
#par(mfrow=c(1,2))
#plot(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), xlab="Residuals brain size", pch=16)
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Social.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)

#plot(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out, xlim=c(-1,1.1), xlab="Residuals brain size", pch=16)
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data1_PC_wo_out), col="darkgrey", lwd=2)
#text(data1_PC_wo_out[,c("ResBrainBody", "PC1.Ecological.consequences")], labels=data1_PC_wo_out[,"Genus_species"],pos=4, cex=0.5)
#par(mfrow=c(1,1))

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences","PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
par(mar=c(5,4,4,2))
plot(PC1.Social.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.7),ylim=c(-10,25), ylab="PC1 Social Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
axis(side = 2, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=6, las=0, cex.axis=2)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")

#par(mar=c(8,8,4,12))
#par(mar=c(5,4,4,2))
plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot,  ylab="PC1 Ecological Consequences",xlab="Residuals Brain Size", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-1,0.70), ylim=c(-10,20), cex=2.8, cex.lab=2.5)
axis(side = 2, at=c(-10,-5,0,5,10,15), labels=c(-10,-5,0,5,10,15), lwd=6, las=0, cex.axis=2)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(0.9,18, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)
@
%\end{figure}
%\newpage


<<echo=F, results=hide>>=
#are the consequences of the social and ecological domain interrelated?
model3<-pgls(PC1.Social.consequences ~  PC1.Ecological.consequences, data = comp_data, lambda='ML') 
tab_pgls(model3)
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_wo_out, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.Social.consequences ~ PC1.Ecological.consequences, dat_plot, xlim=c(-10,22), ylim=c(-10,27),ylab="PC1 Social Consequences", xlab="PC1 Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=2, las=0)
axis(side = 1, at=c(-10,0,10,20), labels=c(-10,0,10,20), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.Social.consequences ~ PC1.Ecological.consequences, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(24,25, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}


\newpage


%==========================================================
%\subsection{Social and ecological consequences - single pPCA}
%==========================================================
%There are several reasons why we do not put them into the same pot. Extremely reduced sample size, in which social hunting shows then to less variation which does not allow for pPCA to run!
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables_soc <- names(data1)[grep("Soc2", colnames(data1))]
variables1_soc <- variables_soc[c(2,3,4,9)]

variables_eco <- names(data1)[grep("Eco2", colnames(data1))]
variables1_eco <- variables_eco[c(1:5)]

data_mat <- data1[,c("Genus_species", variables1_soc, variables1_eco)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"

colnames(dat)[grep("Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Degree of buffering env. seasonality"
colnames(dat)[grep("Eco2.Diet.breadth.combined", colnames(dat))] <- "Diet breadth"
colnames(dat)[grep("Eco2.Hunting.combined", colnames(dat))] <- "Hunting"
colnames(dat)[grep("Eco2.Tool.use..Bentley.Condit.and.Smith.2010.", colnames(dat))] <- "Tool use"
colnames(dat)[grep("Eco2.Residuals.innovation..Reader.et.al..2011.", colnames(dat))] <- "Innovation frequency"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-c(1,4)], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(res$L,  diag(res$Eval), summary(res)$importance[3,]  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c(rownames(res$L), "Eigenvalues", "Cumulative Proportion")
#invert loadings:
a <- length(tab[,1])
tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
@

<<echo=F, results=hide>>=
print(xtable(tab, digits=4, caption=paste("pPCA: N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2))), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont")


#add PCs to data set:
PCs <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.SocEco.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.SocEco.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.SocEco.consequences"

#invert PC1.SocEco.consequences:
data1_PC$PC1.SocEco.consequences <- (-1)*(data1_PC$PC1.SocEco.consequences)

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.SocEco.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
#absolute brain size:
#model1<-pgls(PC1.SocEco.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)

model1<-pgls(log(Brain.Size) ~ log(Body.Mass) + PC1.SocEco.consequences, data = comp_data, lambda='ML')
tab_pgls(model1)
@

%Bootstrapping:
<<echo=F, results=hide>>=
#run bootstrap:
n <- 1000
sn <- 0.8
#boot_res <- boots_PGLS(n_iter=n, subsample_size=sn, data=data1_PC,response="PC1.SocEco.consequences", predictors=c("log(Brain.Size)"), opp=FALSE)
#print(xtable(boot_res$Summary.Bootstrap, digits=4, align="rcccc",caption=paste("Bootstrapping: $N_{iter}$ =",n, ", sample size =", boot_res$Subsample.Boots) ), table.placement = "H", caption.placement="top")
@

%\begin{figure}[H]
%\centering
<<echo=F, fig=FALSE, width=7, height=5>>=
#plot(PC1.SocEco.consequences ~ ResBrainBody, data1_PC, xlim=c(-1,1.1), pch=16, xlab="Residuals brain size")
#abline(lm(PC1.SocEco.consequences ~ ResBrainBody, data1_PC), col="darkgrey", lwd=2)
#text(data1_PC[,c("ResBrainBody", "PC1.SocEco.consequences")], labels=data1_PC[,"Genus_species"],pos=4, cex=0.5)

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.SocEco.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mar=c(5,4,4,2))
plot(PC1.SocEco.consequences ~ ResBrainBody, dat_plot, xlim=c(-1,0.9), ylim=c(-20,60),xlab="Residuals Brain Size", ylab="PC1 Socio-Ecological Consequences", pch=16, frame.plot = FALSE, axes=F, cex=1.3, col=dat_plot$Family)
axis(side = 2, at=c(-20,-10,0,10,20,30,40,50), labels=c(-20,-10,0,10,20,30,40,50), lwd=2, las=0)
axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=2, las=0)
u <- par("usr") 
myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=2) 
myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=2)
abline(lm(PC1.SocEco.consequences ~ ResBrainBody, data=dat_plot), lwd=2, col="darkgrey")
par(xpd=T)
legend(1.1,56, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=0.7)
@
%\end{figure}



%\newpage




% ======================================================================================================
%\subsection{Social and ecological opportunities/consequences - common sample N=29 - Randomization test}
% ======================================================================================================

<<echo=F, results=hide>>=

#social opportunities:
variables <- names(data1)[grep("Soc1|Soc2", colnames(data1))]
variables_soc_opp <- variables[c(1:11)] 

#ecological opportunities:
variables <- names(data1)[grep("Eco1|Jan1", colnames(data1))]
variables_eco_opp <- variables[c(1:8,10:12)]

#social consequences:
variables <- names(data1)[grep("Soc2", colnames(data1))]
variables_soc_cons <- variables[c(2,3,4,9)]

#ecological consequences:
variables <- names(data1)[grep("Eco2", colnames(data1))]
variables_eco_cons <- variables[c(1:5)]

data_complete <- data1[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.",variables_soc_opp, variables_eco_opp, variables_soc_cons, variables_eco_cons)]

#complete_data <- data_complete[complete.cases(data_complete),]
#str(complete_data)

#all_variables <- c(variables_soc_opp, variables_eco_opp, variables_soc_cons, variables_eco_cons)

#make all numerical:

#complete_data$Soc1.Social.system.combined <- as.numeric(gsub("mM-mF", 3, gsub("mM-sF|sM-mF",2, gsub("sM-sF",1 ,gsub("solitary", 0, complete_data$Soc1.Social.system.combined) ) ) ) )

#complete_data$Soc1.Mating.system.combined <- as.numeric(gsub("2androus",3, gsub("polygyn|polyand",2 ,gsub("monogam", 1, complete_data$Soc1.Mating.system.combined) ) ) )

#complete_data$Soc1.Dispersal..Willems.et.al..2013. <- as.numeric( gsub("f|m",0 ,gsub("both", 1, complete_data$Soc1.Dispersal..Willems.et.al..2013.) ) )

#complete_data$Eco1.Substrate.combined <- ifelse(complete_data$Eco1.Substrate.combined == "a", 1, 0)
#complete_data$Eco1.Activity.combined <- ifelse(complete_data$Eco1.Activity.combined == "d", 1, 0)
#complete_data$Eco1.Habitat.combined <- ifelse(complete_data$Eco1.Habitat.combined == "w", 1, 0)
          
#complete_data[, -1] <- sapply(complete_data[, -1], function(x) as.numeric(as.character(x)))

#complete_data <- droplevels(complete_data[complete.cases(complete_data),]); #str(dat)
#rownames(complete_data)  <- complete_data$Genus_species

#matches <- match(Petree$tip.label, complete_data$Genus_species, nomatch=0)
#not <- subset(Petree$tip.label, matches==0)
#tree_pruned <- drop.tip(Petree, not)

#randomize variables into 4 groups:
#opps1 <- sample(all_variables, 11, replace = FALSE); dat1 <- complete_data[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.",opps1)]
#opps2 <- sample(all_variables[!(all_variables %in% opps1)], 11, replace = FALSE); dat2 <- complete_data[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.",opps2)]
#cons1 <- sample(all_variables[!(all_variables %in% c(opps1,opps2))], 5, replace = FALSE); dat3 <- complete_data[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.",cons1)]
#cons2 <- all_variables[!(all_variables %in% c(opps1,opps2,cons1))]; dat4 <- complete_data[,c("Genus_species", "Morph1.Brain.size.combined", "Morph1.Body.mass.combined..g.",cons2)]

#d <- dat1

#run pPCA
#rownames(d) <- d$Genus_species
#res <- phyl.pca(tree_pruned, d[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
#tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
#rownames(tab) <- c("Eigenvalues", "Cumulative Proportion", rownames(res$L))
#invert loadings PC1 social opportunities:
#a <- length(tab[,1])
#tab[-c(1,2),1] <- -1*(tab[-c(1,2),1])

#PCs_alt <- data.frame(Genus_species=d$Genus_species, res$S[,1:3])
#data_alt <- merge(d, PCs_alt, by="Genus_species", all.x=T)
#data_alt$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data_alt, na.action=na.exclude))


@






















% =============================================================================
\subsection{Reclassification of opportunities to consequences: \\
fission-fusion and extractive foraging}
% =============================================================================
\label{sec:reclassification}

%\subsubsection{Reclassification - Social and ecological opportunities}

Reclassifiying fission-fusion and extractive foraging as consequence variables made the original results even stronger. The factor loadings of pPCA on the opportunity variables are equivalent to the original analysis (Table ~\ref{tab:oppALT}), and the subsequent PGLS regressions show even stronger evidence for ecological rather than social factors driving brain size evolution. In fact, whereas the social opportunity PCs show no effect on brain size (PGLS: $N=67$, $\lambda=0.99$, $\beta_{PC1social}=0.005$ ($p=0.114$); $\beta_{PC2social}=0.004$ ($p=0.157$)), both PCs of the ecological domain show significant effects (PGLS: $N=50$, $\lambda=1.00$, $\beta_{PC1ecology}=0.006$ ($p=0.012$); $\beta_{PC2ecology}=0.004$ ($p=0.022$)). These results hold when combining the four PCs into a single regression model (PGLS: $N=43$, $\lambda=1.00$, $\beta_{PC1social}=0.002$ ($p=0.655$); $\beta_{PC2social}=0.004$ ($p=0.358$), $\beta_{PC1ecology}=0.006$ ($p=0.030$); $\beta_{PC2ecology}=0.005$ ($p=0.045$)).\\


%Social opportunities:
<<echo=F, results=hide>>=

#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc1|Soc2", colnames(data1))]
#variables1 <- variables[c(1,2,5,6,8,9,10,14,16,19,7)] #7=dispersal
variables1 <- variables[c(1:5,7:11)] 

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012. <- as.numeric(as.character(dat$Soc1.Gregariousness..Isler.and.van.Schaik.2012.))
dat$Soc1.Cooperative.breeding.combined <- as.numeric(as.character(dat$Soc1.Cooperative.breeding.combined))
dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015. <- as.numeric(as.character(dat$Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.))
dat$dispersal_num <- as.numeric( gsub("f|m",0 ,gsub("both", 1, dat$Soc1.Dispersal..Willems.et.al..2013.) ) )
dat <- dat[,-grep("Soc1.Dispersal..Willems.et.al..2013.", colnames(dat))]
colnames(dat)[grep("dispersal_num", colnames(dat))] <- "Soc1.dispersal_num"


#make social system numerical
dat$soc_system_num <- as.numeric(gsub("mM-mF", 3, gsub("mM-sF|sM-mF",2, gsub("sM-sF",1 ,gsub("solitary", 0, dat$Soc1.Social.system.combined) ) ) ) )
dat <- dat[,-grep("Soc1.Social.system.combined", colnames(dat))]
colnames(dat)[grep("soc_system_num", colnames(dat))] <- "Soc1.soc_system_num"

#make mating system numerical
dat$mating_system_num <- as.numeric(gsub("2androus",3, gsub("polygyn|polyand",2 ,gsub("monogam", 1, dat$Soc1.Mating.system.combined) ) ) )
dat <- dat[,-grep("Soc1.Mating.system.combined", colnames(dat))]
colnames(dat)[grep("mating_system_num", colnames(dat))] <- "Soc1.mating_system_num"

#rename colnames:
colnames(dat)[grep("Soc1.HR.overlap..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Home range overlap"
colnames(dat)[grep("Soc1.Vocal.territorial.advertisement..Willems.and.van.Schaik.2015.", colnames(dat))] <- "Vocal territorial advertisement"
colnames(dat)[grep("Soc1.Group.size.combined", colnames(dat))] <- "Group size"
colnames(dat)[grep("Soc1.Gregariousness..Isler.and.van.Schaik.2012.", colnames(dat))] <- "Gregariousness"
#colnames(dat)[grep("Soc2.Fission.fusion.combined", colnames(dat))] <- "Fission fusion"
colnames(dat)[grep("Soc1.Body.size.dimorphism.combined", colnames(dat))] <- "Body size dimorphism"
colnames(dat)[grep("Soc1.VisualTraitDim..Grueter.Isler.and.Dixson.2015.", colnames(dat))] <- "Visual trait dimorphism"
colnames(dat)[grep("Soc1.Cooperative.breeding.combined", colnames(dat))] <- "Cooperative breeding"
colnames(dat)[grep("Soc1.dispersal_num", colnames(dat))] <- "Dispersal"
colnames(dat)[grep("Soc1.soc_system_num", colnames(dat))] <- "Social system - multi M/F"
colnames(dat)[grep("Soc1.mating_system_num", colnames(dat))] <- "Mating system - Polygynandry"

matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c( "Eigenvalues", "Cumulative Proportion", rownames(res$L))
#invert loadings PC1 social opportunities:
#a <- length(tab[,1])
#tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])

@

<<echo=F, results=hide>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of social opportunity variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H", add.to.row=list(pos=as.list(rows_col),command = cols) )

#non-phylogenetic PCA:
library(psych)
#res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none", scores=TRUE)
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#np_PCs_social <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
#colnames(np_PCs_social)[2:3] <- c("npPC1_soc_opp","npPC2_soc_opp")
#data1_np_PC <- merge(data1, np_PCs_social, by="Genus_species", all.x=T)

#res_nonp <- prcomp(dat[,-1], retx=FALSE, scale=TRUE)
#print( xtable(data.frame(res_nonp$rotation[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (prcomp)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#res_nonp <- dudi.mix(dat[,-1],scannf=FALSE, nf=ncol(dat[,-1]))
#str(res_nonp)
#res_nonp$cr
#res_nonp$co
#print( xtable(data.frame(res_nonp$rotation[1:9,1:9]), digits=4, caption="Non-phylogenetic PCA (prcomp)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")
@

<<echo=F>>=
#add PCs to data set:
PCs_social_alternative <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs_social_alternative, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.Opportunity"

#invert PC1 social opportunities:
#data1_PC$PC1.Social.Opportunity <- (-1)*(data1_PC$PC1.Social.Opportunity)
#PCs_social_alternative$PC1 <- (-1)*(PCs_social_alternative$PC1)

soci.oppi.alternative <- data1_PC

#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_soc_opp_alternative <- data1_PC[complete.cases(data1_PC[,c("PC1.Social.Opportunity")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Social.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC2.Social.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#=======================================================================

#TEMPO of evolution: delta
#rownames(data1_PC_phyl_sig) <- data1_PC_phyl_sig[,"Genus_species"]

#tmp=treedata(tree_pruned, data1_PC_phyl_sig$PC1.Social.Opportunity)
#phy=tmp$phy
#dat=tmp$data

#fitContinuous(phy=tree_pruned, dat=data1_PC_phyl_sig$PC1.Social.Opportunity, model="delta")

@

<<echo=F, results=hide>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1, label="table:PC1socopp")
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1, label="table:PC2socopp")
model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model1)
@


\vspace*{15mm}

%Ecological opportunities:
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco1|Jan1", colnames(data1))]
variables1 <- variables[c(1:8,10,12)]

data_mat <- data1[,c("Genus_species", variables1)]
data_mat$Eco1.Substrate.num <- ifelse(data_mat$Eco1.Substrate.combined == "a", 1, 0)
data_mat$Eco1.Activity.num <- ifelse(data_mat$Eco1.Activity.combined == "d", 1, 0)
data_mat$Eco1.Habitat.num <- ifelse(data_mat$Eco1.Habitat.combined == "w", 1, 0)
 
data_mat <- data_mat[ ,-c(2,3,4) ]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)


#rename variable names:
colnames(dat)[grep("Eco1.Predation.risk..Nunn.and.van.Schaik.2000.", colnames(dat))] <- "Predation risk"
colnames(dat)[grep("Eco1.mobility.1..Dindex.combined", colnames(dat))] <- "Mobility in ranging area"
colnames(dat)[grep("Eco1.CV.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Environmental seasonality"
colnames(dat)[grep("Eco1.Proportion.animal.combined", colnames(dat))] <- "Faunivory"
colnames(dat)[grep("Eco1.Proportion.fruits.and.seeds..Janneke.data.", colnames(dat))] <- "Frugivory"
colnames(dat)[grep("Eco1.Proportion.leaves..Janneke.data.", colnames(dat))] <- "Folivory"
#colnames(dat)[grep("Eco1.Extractive.foraging.combined", colnames(dat))] <- "Extractive foraging"
colnames(dat)[grep("Eco1.diet.quality...Janneke.data.", colnames(dat))] <- "Diet quality"
colnames(dat)[grep("Eco1.Substrate.num", colnames(dat))] <- "Substrate - arboreality"
colnames(dat)[grep("Eco1.Activity.num", colnames(dat))] <- "Activity - diurnality"
colnames(dat)[grep("Eco1.Habitat.num", colnames(dat))] <- "Habitat - wooded"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c("Eigenvalues", "Cumulative Proportion", rownames(res$L))

#invert loadings PC1 ecological opportunities:
#a <- length(tab[,1])
#tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
tab[-c(1,2),1] <- -1*(tab[-c(1,2),1])
#invert loadings PC2 ecological opportunities:
#tab[-c(a-1,a),2] <- -1*(tab[-c(a-1,a),2])
tab[-c(1,2),2] <- -1*(tab[-c(1,2),2])
@

<<echo=F, results=hide>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

#mat_b <- matrix(TRUE, nr=dim(tab)[1], ncol=dim(tab)[2])
#mat_b[c(dims-1, dims),] <- FALSE

print(xtable(tab, digits=4,  caption=paste("\\scriptsize{Phylogenetic PCA of ecological opportunity variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))


#non-phylogenetic PCA:
library(psych)
#res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#np_PCs_ecology <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
#colnames(np_PCs_ecology)[2:3] <- c("npPC1_eco_opp","npPC2_eco_opp")
#data1_np_PC <- merge(data1, np_PCs_ecology, by="Genus_species", all.x=T)
@

<<echo=F, results=hide>>=
#add PCs to data set:
PCs_ecology_alternative <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs_ecology_alternative, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.Opportunity"

#invert PC1 ecological opportunities:
data1_PC$PC1.Ecological.Opportunity <- (-1)*(data1_PC$PC1.Ecological.Opportunity)
PCs_ecology_alternative$PC1 <- (-1)*(PCs_ecology_alternative$PC1)

#invert PC2 ecological opportunities:
data1_PC$PC2.Ecological.Opportunity <- (-1)*(data1_PC$PC2.Ecological.Opportunity)
PCs_ecology_alternative$PC2 <- (-1)*(PCs_ecology_alternative$PC2)


#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_eco_opp_alternative <- data1_PC[complete.cases(data1_PC[,c("PC1.Ecological.Opportunity")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Ecological.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC2.Ecological.Opportunity"], method="lambda", test=TRUE, nsim=1000)
#=======================================================================

@

<<echo=F, results=hide>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model1, label="table:PC1ecoopp_alt")
#model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
#tab_pgls(model2, label="table:PC2ecoopp")
model12<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model12)

@

%Combined sample:
<<echo=F, results=hide>>=

data1_PC_social_alternative <- merge(data1, PCs_social_alternative, by="Genus_species", all.x=T)
data1_PC_soc_eco_alternative <- merge(data1_PC_social_alternative, PCs_ecology_alternative, by="Genus_species", all.x=T)


data1_PC_soc_eco_alternative <- data1_PC_soc_eco_alternative[complete.cases(data1_PC_soc_eco_alternative[,c("Genus_species", "Morph1.Brain.size.combined","PC1.x","PC1.y")]), ]

data1_PC_soc_eco_alternative$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC_soc_eco_alternative, na.action=na.exclude))

colnames(data1_PC_soc_eco_alternative)[grep("PC1.x", colnames(data1_PC_soc_eco_alternative))] <- "PC1.Social.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("PC2.x", colnames(data1_PC_soc_eco_alternative))] <- "PC2.Social.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("PC3.x", colnames(data1_PC_soc_eco_alternative))] <- "PC3.Social.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("PC1.y", colnames(data1_PC_soc_eco_alternative))] <- "PC1.Ecological.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("PC2.y", colnames(data1_PC_soc_eco_alternative))] <- "PC2.Ecological.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("PC3.y", colnames(data1_PC_soc_eco_alternative))] <- "PC3.Ecological.Opportunity"
colnames(data1_PC_soc_eco_alternative)[grep("Morph1.Brain.size.combined", colnames(data1_PC_soc_eco_alternative))] <- "Brain.Size"
colnames(data1_PC_soc_eco_alternative)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_soc_eco_alternative))] <- "Body.Mass"



comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco_alternative, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model1)
#model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model1, label="table:PC11ecosoc")
#model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2, label="table:PC22ecosoc")
#model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2, label="table:PC12ecosoc")
#model2<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
#tab_pgls(model2, label="table:PC21ecosoc")
model2 <- pgls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2, label="table:PCallecosoc_alt")


model2 <- pgls(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, data = comp_data, lambda='ML')
tab_pgls(model2, label="table:PCallecosoc_inter_alt")


@


% Table generated by Excel2LaTeX from sheet 'Sheet3'
\begin{table}[htbp]
  \centering
  \caption{Phylogenetic PCA of opportunity variables.}
  \begingroup\fontsize{9pt}{10pt}\selectfont
    \begin{tabular}{rrcccrrcc}
    \toprule
    \hline
    \textbf{A} & \textbf{Social opportunities} & \textbf{PC1} & \textbf{PC2} & \textbf{} & \textbf{B} & \textbf{Ecological opportunities} & \textbf{PC1} & \textbf{PC2} \\
    \midrule
    \multicolumn{1}{c}{\begin{sideways}\end{sideways}} & Eigenvalues & 2.252 & 2.150 &       &       & Eigenvalues & 2.900 & 1.826 \\
          & Cumulative Proportion & 0.225 & 0.440 &       &       & Cumulative Proportion & 0.290 & 0.473 \\
          \cline{2-4} \cline{7-9}
    \multicolumn{1}{c}{\multirow{6}[2]{*}{}} & Social system - Multi M/F group & \textbf{0.597} & -0.304 & \textbf{} & \multicolumn{1}{c}{\multirow{6}[2]{*}{}} & Diurnality & -0.369 & -0.255 \\
    \multicolumn{1}{c}{} & Group size & \textbf{0.590} & 0.156 &       & \multicolumn{1}{c}{} & Wooded habitat & 0.031 & \textbf{-0.612} \\
    \multicolumn{1}{c}{} & Gregariousness & 0.439 & \textbf{-0.556} &       & \multicolumn{1}{c}{} & Arboreality & 0.048 & -0.400 \\
    \multicolumn{1}{c}{} & HR overlap & 0.268 & 0.363 &       & \multicolumn{1}{c}{} & Predation risk & 0.392 & 0.207 \\
    \multicolumn{1}{c}{} & Vocal terr. advertisement  & \textbf{-0.696} & -0.324 & \textbf{} & \multicolumn{1}{c}{} & Mobility in ranging area & 0.307 & 0.306 \\
    \multicolumn{1}{c}{} & Dispersal & -0.420 & 0.093 &       & \multicolumn{1}{c}{} & Environmental seasonality & 0.258 & \textbf{0.728} \\
    %\cline{2-4} \cline{7-9}
    \multicolumn{1}{c}{\multirow{4}[2]{*}{}} & Mating system - Polygynandry & \textbf{0.654} & -0.045 &       & \multicolumn{1}{c}{\multirow{4}[2]{*}{}} & Faunivory & \textbf{0.519} & \textbf{-0.615} \\
    \multicolumn{1}{c}{} & Body size dimorphism & 0.168 & \textbf{0.838} & \textbf{} & \multicolumn{1}{c}{} & Frugivory & \textbf{0.709} & 0.265 \\
    \multicolumn{1}{c}{} & Visual trait dimorphism & -0.207 & \textbf{0.824} &       & \multicolumn{1}{c}{} & Folivory & \textbf{-0.928} & -0.015 \\
    \multicolumn{1}{c}{} & Cooperative breeding & -0.352 & -0.308 & \textbf{} & \multicolumn{1}{c}{} & Diet quality & \textbf{0.903} & -0.334 \\
    \hline
    \bottomrule
    \end{tabular}%
    \endgroup% latex table generated in R 3.2.3 by xtable 1.8-2 package
  \label{tab:oppALT}%
\end{table}%
\newpage


%\subsubsection{Reclassification - Social and ecological consequences}

Also in case of the consequences, the pPCA as well as the subsequent PGLS regressions result in equivalent patterns as the original analysis. For the ecological and social domain, all variables load highly on the first PC (Table ~\ref{tab:consALT}), and relative brain size shows strong effects on both, the social and ecological consequence PC (socio-cognitive PC1 PGLS: $N=55$, $\lambda=0.00$, $\beta_{Brain}=16.393$ ($p=0.007$); eco-cognitive PC1 PGLS: $N=53$, $\lambda=0.91$, $\beta_{Brain}=20.033$ ($p=0.015$); eco-cognitive PC2 PGLS: $N=53$, $\lambda=0.00$, $\beta_{Brain}=17.910$ ($p<0.001$)). Also the relationsip between the social and ecological consequence PCs is highly significant (PGLS: $N=31$, $\lambda=0.00$, $\beta_{PC1EcologicalCons.}=0.889$ ($p<0.001$)), whereas there is no relationship between the opportunity PCs (results not shown).

%Social consequences:
%\textbf{Coalitions definition Jaeggi and van Schaik 2011, Plavcan et al. 1995}
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Soc2", colnames(data1))]
variables1 <- variables[c(1:4,9)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)

colnames(dat)[grep("Soc2.Fission.fusion.combined", colnames(dat))] <- "Fission-fusion"
colnames(dat)[grep("Soc2.Residuals.social.learning..Reader.et.al..2011.", colnames(dat))] <- "Social learning frequency"
colnames(dat)[grep("Soc2.MM.and.FF.coalitions.combined", colnames(dat))] <- "Coalition formation"
colnames(dat)[grep("Soc2.Social.hunting.combined", colnames(dat))] <- "Social hunting"
colnames(dat)[grep("Soc2.Food.sharing.adults", colnames(dat))] <- "Food sharing among adults"


#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind( diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c( "Eigenvalues", "Cumulative Proportion", rownames(res$L))

#invert loadings PC1 social consequences:
#a <- length(tab[,1])
#tab[-c(a-1,a),1] <- -1*(tab[-c(a-1,a),1])
tab[-c(1,2),1] <- -1*(tab[-c(1,2),1])
@

<<echo=F, results=hide>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0,1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of social consequence variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))

#non-phylogenetic PCA:
library(psych)
#res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#np_PCs_soc_consequences <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
#colnames(np_PCs_soc_consequences)[2] <- c("npPC1_soc_consequences")
@

<<echo=F>>=
#add PCs to data set:
PCs_soc_consequences_alternative <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs_soc_consequences_alternative, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))


colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Social.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Social.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Social.consequences"

#invert PC1 social consequences:
data1_PC$PC1.Social.consequences <- (-1)*(data1_PC$PC1.Social.consequences)
PCs_soc_consequences_alternative$PC1 <- (-1)*(PCs_soc_consequences_alternative$PC1)
@

<<echo=F, results=hide>>=
#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_soc_cons_alternative <- data1_PC[complete.cases(data1_PC[,c("PC1.Social.consequences")]),]

#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Social.consequences"], method="lambda", test=TRUE, nsim=1000)

#=======================================================================

comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)
#model1<-pgls(PC1.Social.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, delta="ML")
#summary(model1)
#model1<-pgls(PC1.Social.consequences ~ 1, data = comp_data, lambda="ML", delta="ML")
#summary(model1)

#absolute brain size:
#model1<-pgls(PC1.Social.consequences ~  log(Brain.Size), data = comp_data, lambda='ML')
#tab_pgls(model1)

#model1<-pgls(log(Brain.Size)  ~  log(Body.Mass) + PC1.Social.consequences, data = comp_data, lambda='ML')
#tab_pgls(model1)
@

\vspace*{20mm}

%Ecological consequences:
<<echo=F, results=hide>>=
#choose variables to perform pPCA on:
variables <- names(data1)[grep("Eco2|foraging", colnames(data1))]
variables1 <- variables[c(1,3:7)]

data_mat <- data1[,c("Genus_species", variables1)]
dat <- droplevels(data_mat[complete.cases(data_mat),]); #str(dat)
dat[,-1] <- apply(dat[,-1],2, function(x){ as.numeric(as.character(x)) }  )
matches <- match(Petree$tip.label, dat$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)

colnames(dat)[grep("Eco1.Extractive.foraging.combined", colnames(dat))] <- "Extractive foraging"
colnames(dat)[grep("Eco2.Cognitive.Buffer.NDVI..Janneke.Karin.data.final.", colnames(dat))] <- "Degree of buffering env. seasonality"
colnames(dat)[grep("Eco2.Diet.breadth.combined", colnames(dat))] <- "Diet breadth"
colnames(dat)[grep("Eco2.Hunting.combined", colnames(dat))] <- "Hunting"
colnames(dat)[grep("Eco2.Tool.use..Bentley.Condit.and.Smith.2010.", colnames(dat))] <- "Tool use"
colnames(dat)[grep("Eco2.Residuals.innovation..Reader.et.al..2011.", colnames(dat))] <- "Innovation frequency"

#phylo PCA:
rownames(dat) <- dat$Genus_species
res <- phyl.pca(tree_pruned, dat[,-1], method="lambda", mode="corr")
#summary(res); res$L; paste("lambda=", res$lambda); length(dat$Genus_species)
tab <- rbind(  diag(res$Eval), summary(res)$importance[3,], res$L  )
#rownames(tab) <- c(substr(rownames(res$L),6,25), "Eigenvalues", "Cumulative Proportion")
rownames(tab) <- c( "Eigenvalues", "Cumulative Proportion", rownames(res$L))
@

<<echo=F, results=hide>>=
#dims <- dim(tab)[1]
#rows_col <- c(dims-2, dims-1)
rows_col <- c(0, 1)
cols <- rep("\\rowcolor[gray]{.9}", length(rows_col))

print(xtable(tab, digits=4, caption=paste("\\scriptsize{Phylogenetic PCA of ecological consequence variables. N=", length(dat$Genus_species), "; lambda=", round(res$lambda, digits=2), ". Given are the factor loadings as well as the Eigenvalues and the cumulative proportion of the corresponding factors.}", sep="")), caption.placement="top" , table.placement="H", size="\\fontsize{9pt}{10pt}\\selectfont", add.to.row=list(pos=as.list(rows_col),command = cols))

#non-phylogenetic PCA:
#res_nonp <- principal(dat[,-1], nfactors=ncol(dat[,-1]), rotate="none")
#print( xtable(data.frame(res_nonp$loadings[1:ncol(dat[,-1]),1:ncol(dat[,-1])]), digits=4, caption="Non-phylogenetic PCA (principal)"), size="\\fontsize{9pt}{10pt}\\selectfont", caption.placement="top" , table.placement="H")

#np_PCs_eco_consequences <- data.frame(Genus_species=dat$Genus_species, res_nonp$scores[,1:3])
#colnames(np_PCs_eco_consequences)[2] <- "npPC1_eco_consequences"

#add PCs to data set:
PCs_eco_consequences_alternative <- data.frame(Genus_species=dat$Genus_species, res$S[,1:3])
data1_PC <- merge(data1, PCs_eco_consequences_alternative, by="Genus_species", all.x=T)
data1_PC$ResBrainBody <- resid(m1<-lm(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.), data=data1_PC, na.action=na.exclude))

colnames(data1_PC)[grep("Morph1.Brain.size.combined", colnames(data1_PC))] <- "Brain.Size"
colnames(data1_PC)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC))] <- "Body.Mass"
colnames(data1_PC)[grep("PC1", colnames(data1_PC))] <- "PC1.Ecological.consequences"
colnames(data1_PC)[grep("PC2", colnames(data1_PC))] <- "PC2.Ecological.consequences"
colnames(data1_PC)[grep("PC3", colnames(data1_PC))] <- "PC3.Ecological.consequences"
@

<<echo=F, results=hide>>=
#Phylogenetic signals (phytools):=======================================
data1_PC_phyl_sig_eco_cons_alternative <- data1_PC[complete.cases(data1_PC[,c("PC1.Ecological.consequences")]),]
#phylosig(tree_pruned, data1_PC_phyl_sig[,"PC1.Ecological.consequences"], method="lambda", test=TRUE, nsim=1000)

@

<<echo=F, results=hide>>=
comp_data <- comparative.data(phy = Petree, data = data1_PC, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

#relative brain size:
model1<-pgls(PC1.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)

model1<-pgls(PC2.Ecological.consequences ~  log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML')
tab_pgls(model1)


@

%combined sample, interrelationship:
<<echo=F, results=hide>>=
colnames(PCs_soc_consequences_alternative) <- c("Genus_species", "PC1.Social.consequences", "PC2.Social.consequences", "PC3.Social.consequences")
colnames(PCs_eco_consequences_alternative) <- c("Genus_species", "PC1.Ecological.consequences", "PC2.Ecological.consequences", "PC3.Ecological.consequences")
data1_PC_social_consequences_alternative <- merge(data1, PCs_soc_consequences_alternative, by="Genus_species", all.x=T)
data1_PC_soc_eco_consequences_alternative <- merge(data1_PC_social_consequences_alternative, PCs_eco_consequences_alternative, by="Genus_species", all.x=T)
colnames(data1_PC_soc_eco_consequences_alternative)[grep("Morph1.Brain.size.combined", colnames(data1_PC_soc_eco_consequences_alternative))] <- "Brain.Size"
colnames(data1_PC_soc_eco_consequences_alternative)[grep("Morph1.Body.mass.combined..g.", colnames(data1_PC_soc_eco_consequences_alternative))] <- "Body.Mass"
data1_PC_soc_eco_consequences_alternative <- data1_PC_soc_eco_consequences_alternative[complete.cases(data1_PC_soc_eco_consequences_alternative[,c("Genus_species", "Brain.Size","PC1.Social.consequences", "PC1.Ecological.consequences")]),]

data1_PC_soc_eco_consequences_alternative$ResBrainBody <- resid(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC_soc_eco_consequences_alternative, na.action=na.exclude))

comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco_consequences_alternative, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)

model1<-pgls(PC1.Social.consequences ~ PC1.Ecological.consequences, data = comp_data, lambda='ML') 
tab_pgls(model1)
@

% Table generated by Excel2LaTeX from sheet 'Sheet3'
\begin{table}[htbp]
  \centering
  \caption{Phylogenetic PCA of consequence variables.}
  \begingroup\fontsize{9pt}{10pt}\selectfont
    \begin{tabular}{rcrrc}
    \toprule
    \hline
    \textbf{A             Socio-cognitive consequences} & \textbf{PC1 } &       & \textbf{B         Eco-cognitive consequences} & \textbf{PC1 } \\
    \midrule
    Eigenvalues & 2.367 &       & Eigenvalues & 2.510 \\
    Cumulative Proportion & 0.474 &       & Cumulative Proportion & 0.418 \\
    \cline{1-2} \cline{4-5}
          &       &       & Extractive foraging & \textbf{0.652} \\
    Fission-fusion & 0.359 &       & Buffering env. seasonality & 0.020 \\
    Social learning frequency & \textbf{0.776} &       & Diet breadth & 0.426 \\
    Coalition formation & \textbf{0.732} &       & Hunting & \textbf{0.738} \\
    Social hunting & \textbf{0.835} &       & Tool use & \textbf{0.807} \\
    Food sharing among adults & \textbf{0.634} &       & Innovation frequency & \textbf{0.841} \\
    \hline
    \bottomrule
    \end{tabular}%
    \endgroup% latex table generated in R 3.2.3 by xtable 1.8-2 package
  \label{tab:consALT}%
\end{table}%


%\newpage





%%%%%%PHYLOGENETIC PATH MODELS


%\subsubsection{Social and ecological opportunities - common sample N=29}
<<echo=F, results=tex>>=
  data1_PC_soc_eco_consequences_s <- data1_PC_soc_eco_consequences[,c("Genus_species","PC1.Social.consequences", "PC2.Social.consequences", "PC3.Social.consequences", "PC1.Ecological.consequences", "PC2.Ecological.consequences", "PC3.Ecological.consequences")]
  data1_PC_soc_eco_opp_out <- merge(data1_PC_soc_eco, data1_PC_soc_eco_consequences_s, by="Genus_species", all.x=T)
  
  
  data1_PC_soc_eco_opp_out <- data1_PC_soc_eco_opp_out[complete.cases(data1_PC_soc_eco_opp_out[,c("Genus_species", "Brain.Size","PC1.Social.Opportunity","PC1.Ecological.Opportunity","PC1.Social.consequences", "PC1.Ecological.consequences")]),]
  rownames(data1_PC_soc_eco_opp_out) <- data1_PC_soc_eco_opp_out$Genus_species
  matches <- match(Petree$tip.label, data1_PC_soc_eco_opp_out$Genus_species, nomatch=0)
  not <- subset(Petree$tip.label, matches==0)
  tree_pruned <- drop.tip(Petree, not)
  
  comp_data <- comparative.data(phy = Petree, data = data1_PC_soc_eco_opp_out, names.col = Genus_species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE ,vcv.dim=3)
  
  #relative brain size:
  #model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC3.Social.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC3.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC2.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  model1<-pgls(log(Brain.Size) ~  log(Body.Mass) + PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  tab_pgls(model1)
  
  
  
  
  #absolute brain size:
  #model1<-pgls(log(Brain.Size) ~ PC1.Social.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~ PC2.Social.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~ PC3.Social.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  
  #model1<-pgls(log(Brain.Size) ~   PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~   PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~   PC3.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  
  #model1<-pgls(log(Brain.Size) ~   PC1.Social.Opportunity + PC1.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~   PC2.Social.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  #model1<-pgls(log(Brain.Size) ~   PC1.Social.Opportunity + PC2.Social.Opportunity + PC1.Ecological.Opportunity + PC2.Ecological.Opportunity, data = comp_data, lambda='ML') 
  #tab_pgls(model1)
  
  
  #rownames(data1_PC_soc_eco_opp_out) <- data1_PC_soc_eco_opp_out$Genus_species
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC1.x, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC2.x, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC3.x, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC1.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC2.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC3.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC1.x + PC1.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC2.x + PC2.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC3.x + PC3.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  #model1 <- gls(log(Morph1.Brain.size.combined) ~ log(Morph1.Body.mass.combined..g.) + PC1.x + PC1.y + PC2.x + PC2.y, correlation = corPagel(value=0.9, phy=tree_pruned), data=data1_PC_soc_eco_opp_out)
  #tab_gls(model1)
  
  
@
    
%\subsubsection{Social and ecological consequences - common sample N=29}
<<echo=F, results=tex>>=
    ##consequences:
    model1<-pgls(PC1.Social.consequences ~ log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
  tab_pgls(model1)
  
  model1<-pgls(PC1.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), data = comp_data, lambda='ML') 
  tab_pgls(model1)
@
    
    
%\subsubsection{Phylogenetic path analysis based on common sample N= 29}:
<<echo=F, results=hide>>=
  data1_PC_soc_eco_opp_out_pa <- data1_PC_soc_eco_opp_out
  data1_PC_soc_eco_opp_out_pa$Residuals_brain <- residuals(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=data1_PC_soc_eco_opp_out_pa, na.action=na.exclude))
  
  data1_PC_soc_eco_opp_out_pa <- data1_PC_soc_eco_opp_out_pa[,c("Genus_species", "Residuals_brain","Brain.Size","PC1.Social.Opportunity","PC2.Social.Opportunity","PC1.Ecological.Opportunity","PC2.Ecological.Opportunity","PC1.Social.consequences", "PC1.Ecological.consequences")]
  
  #data1_PC_soc_eco_opp_out_pa$lnBrainSize <- log(data1_PC_soc_eco_opp_out_pa[,"Brain.Size"])
  
  #str(data1_PC_soc_eco_opp_out_pa)
  
  
  library(phylopath)
  library(htmltools)
  
  #models <- list(
  
  #  one = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #            Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #            PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain),
  
  #  two = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #            Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #            PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
  #            PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  #  two_one = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #            Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #            PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
  #            PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  #  three = DAG(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #              PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #              Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #              PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain),
  
  #  four = DAG(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #              PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #              Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #              PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
  #              PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  # four_one = DAG(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #           Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #            Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #           PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
  #            PC1.Ecological.consequences ~  PC1.Social.consequences),
  
  #five = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #           PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #            Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences),
  
  #  six = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #            PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #           Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #          PC1.Social.consequences ~ PC1.Ecological.consequences),
  #
  #  six_one = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #            PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #           Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #         PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  # seven = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #          PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #          Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #          PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #         PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity),
  
  #  eight = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #           PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #            Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #            PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #           PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  # eight_one = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #          PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #         Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #        PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #           PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  #nine = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #         Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #          Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences),
  
  #  ten = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #           Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #            Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #           PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  #  ten_one = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #           Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #          Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #         PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  #eleven = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #         Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #        Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #       PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity),
  
  #  twelfe = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #           Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #            Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #            PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #           PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #          PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  #twelfe_one = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
  #         Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
  #          Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
  #          PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #            PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  # thirteen = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #           PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #          PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain),
  
  #  fourteen = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #            PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #           PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
  #          PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  #fourteen_one = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #          PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #         PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
  #        PC1.Ecological.consequences ~ PC1.Social.consequences),
  
  #fifteen = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #          PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #         PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #        PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #       PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain),
  
  #sixteen = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #           PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #          PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #         PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #        PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
  #        PC1.Social.consequences ~ PC1.Ecological.consequences),
  
  #sixteen_one = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
  #           PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
  #          PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #         PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
  #        PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
  #        PC1.Ecological.consequences ~ PC1.Social.consequences)
  
  #)
  
  
  
  
  models2 <- list(
    
    A1 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain),
    
    A2 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    A3 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    A4 = DAG(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain),
    
    A5 = DAG(PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain),
    
    A6 = DAG(PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    A7 = DAG(PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain, PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Ecological.consequences ~  PC1.Social.consequences),
    
    B1 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences),
    
    B2 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    B3 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    B4 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity),
    
    B5 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity),
    
    B6 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    B7 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    C1 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences),
    
    C2 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    C3 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    C4 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity),
    
    C5 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity),
    
    C6 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    C7 = DAG(Residuals_brain ~ PC1.Social.Opportunity , Residuals_brain ~ PC2.Social.Opportunity, 
             Residuals_brain ~ PC1.Ecological.Opportunity , Residuals_brain ~ PC2.Ecological.Opportunity,
             Residuals_brain ~ PC1.Social.consequences, Residuals_brain ~  PC1.Ecological.consequences,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    D1 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain),
    
    D2 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    D3 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Ecological.consequences ~ PC1.Social.consequences),
    
    D4 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain),
    
    D5 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain),
    
    D6 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Social.Opportunity ~ PC1.Ecological.Opportunity, PC1.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC2.Social.Opportunity ~ PC1.Ecological.Opportunity, PC2.Social.Opportunity ~ PC2.Ecological.Opportunity,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Social.consequences ~ PC1.Ecological.consequences),
    
    D7 = DAG(PC1.Social.Opportunity ~ Residuals_brain , PC2.Social.Opportunity ~ Residuals_brain, 
             PC1.Ecological.Opportunity ~ Residuals_brain , PC2.Ecological.Opportunity ~ Residuals_brain,
             PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, PC2.Ecological.Opportunity ~ PC1.Social.Opportunity,
             PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, PC2.Ecological.Opportunity ~ PC2.Social.Opportunity,
             PC1.Social.consequences ~ Residuals_brain , PC1.Ecological.consequences ~ Residuals_brain,
             PC1.Ecological.consequences ~ PC1.Social.consequences)
    
  )
  
  
  
  #Look at the different directed acyclic graphs (DAG):
  #plot(models$one)
  #plot(models$three)
  #plot(models$five)
  #plot(models$six)
  
  #Tree:
  matches <- match(Petree$tip.label, data1_PC_soc_eco_opp_out_pa$Genus_species, nomatch=0)
  not <- subset(Petree$tip.label, matches==0)
  tree_pruned_pa <- drop.tip(Petree, not)
  
  
  #run path analysis (with forcing an order):
  #result <- phylo_path(models, data = data1_PC_soc_eco_opp_out_pa, tree = tree_pruned_pa, order=c("PC1.Social.Opportunity","PC2.Social.Opportunity", "PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity", "ResBrainBody_new","PC1.Social.consequences", "PC1.Ecological.consequences"))
  
  #run path analysis (without forcing an order):
  #result <- phylo_path(models, data = data1_PC_soc_eco_opp_out_pa, tree = tree_pruned_pa)
  result2 <- phylo_path(models2, data = data1_PC_soc_eco_opp_out_pa, tree = tree_pruned_pa)
@
    
<<echo=F, results=tex>>=
#result:
#xtable(summary(result))
print(xtable(summary(result2)[,-c(3,8,9)], caption="Phylogenetic path analysis. N = 29. Given are the number of conditional independencies (= number of d-separation statements) (k), C statistic (C), p-value (p), corrected C statistic information criterion (CICc) and the difference in the CICc (delta CICc) for each of the 28 candidate path models. Models A2 and A3 show the best goodness of fit (delta CICc < 3)."),  size="\\fontsize{8pt}{9pt}\\selectfont", caption.placement="top", table.placement="H",include.rownames = FALSE) 
  
#extract the best model:
best_model <- best(result2)
  
average_model <- average(result2, cut_off = 3)
#xtable(average_model$coef)
#xtable(average_model$lower)
#xtable(average_model$upper)
#plot(average_model)
#plot(best_model)

A3 <- result2$models[["A3"]]
#est_DAG(A3, result2$data, result2$cor_fun, result2$tree)
@
    
<<echo=F, fig=FALSE>>=
    coef_plot(average_model, reverse_order=TRUE) + 
    ggplot2::coord_flip() + 
    ggplot2::theme_bw()
@
    
%Phylogenetic path analysis by hand (according to Gonzalez-Voyer and Hardenberg in book):
<<echo=F, results=hide>>=


#According to:
#http://www.mpcm-evolution.org/practice/online-practical-material-chapter-8/chapter-8-2-step-step-guide-phylogenetic-path-analysis-using-d-sep-method-rhinograds-example
    
    com.dat <- comparative.data(tree_pruned_pa, data1_PC_soc_eco_opp_out_pa, Genus_species, vcv=TRUE, vcv.dim=3, warn.dropped = TRUE)
  
  #The model is based on number vertices (V) and number of arrows (A). Using this information, with a call to the function condNum
  condNum <- function(V, A) {
    (factorial(V)/(2 * factorial(V - 2))) - A
  }
  
  #number of d-separation statements:
  k <- condNum(7, 6)
  
  #d-separation statements:
  #1 (PC1.Social.Opportunity, PC2.Social.Opportunity)         {}
  #2 (PC1.Social.Opportunity, PC1.Ecological.Opportunity)     {}
  #3 (PC1.Social.Opportunity, PC2.Ecological.Opportunity)     {}
  #4 (PC1.Social.Opportunity, PC1.Social.consequences)        {Residuals_brain}
  #5 (PC1.Social.Opportunity, PC1.Ecological.consequences)    {Residuals_brain}
  #6 (PC2.Social.Opportunity, PC1.Ecological.Opportunity)     {}
  #7 (PC2.Social.Opportunity, PC2.Ecological.Opportunity)     {}
  #8 (PC2.Social.Opportunity, PC1.Social.consequences)        {Residuals_brain}
  #9 (PC2.Social.Opportunity, PC1.Ecological.consequences)    {Residuals_brain}
  #10 (PC1.Ecological.Opportunity, PC2.Ecological.Opportunity) {}
  #11 (PC1.Ecological.Opportunity, PC1.Social.consequences)    {Residuals_brain}
  #12 (PC1.Ecological.Opportunity, PC1.Ecological.consequences){Residuals_brain}
  #13 (PC2.Ecological.Opportunity, PC1.Social.consequences)    {Residuals_brain}
  #14 (PC2.Ecological.Opportunity, PC1.Ecological.consequences){Residuals_brain}
  #15 (PC1.Social.consequences, PC1.Ecological.consequences)   {Residuals_brain}
  
  m1.1 <- pgls(PC2.Social.Opportunity ~ PC1.Social.Opportunity , data = com.dat, lambda = "ML")
  m1.1p <- summary(m1.1)$coefficients["PC1.Social.Opportunity", 4];m1.1p
  
  m1.2 <- pgls(PC1.Ecological.Opportunity ~ PC1.Social.Opportunity, data = com.dat, lambda = "ML")
  m1.2p <- summary(m1.2)$coefficients["PC1.Social.Opportunity", 4];m1.2p
  
  m1.3 <- pgls(PC2.Ecological.Opportunity ~ PC1.Social.Opportunity, data = com.dat, lambda = "ML")
  m1.3p <- summary(m1.3)$coefficients["PC1.Social.Opportunity", 4];m1.3p
  
  m1.4 <- pgls(PC1.Social.consequences ~ PC1.Social.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.4p <- summary(m1.4)$coefficients["PC1.Social.Opportunity", 4];m1.4p
  
  m1.5 <- pgls(PC1.Ecological.consequences ~ PC1.Social.Opportunity + Residuals_brain, data = com.dat, lambda = "ML")
  m1.5p <- summary(m1.5)$coefficients["PC1.Social.Opportunity", 4];m1.5p
  
  m1.6 <- pgls(PC1.Ecological.Opportunity ~ PC2.Social.Opportunity, data = com.dat, lambda = "ML")
  m1.6p <- summary(m1.6)$coefficients["PC2.Social.Opportunity", 4];m1.6p
  
  m1.7 <- pgls(PC2.Ecological.Opportunity ~ PC2.Social.Opportunity, data = com.dat, lambda = "ML")
  m1.7p <- summary(m1.7)$coefficients["PC2.Social.Opportunity", 4];m1.7p
  
  m1.8 <- pgls(PC1.Social.consequences ~ PC2.Social.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.8p <- summary(m1.8)$coefficients["PC2.Social.Opportunity", 4];m1.8p
  
  m1.9 <- pgls(PC1.Ecological.consequences ~ PC2.Social.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.9p <- summary(m1.9)$coefficients["PC2.Social.Opportunity", 4];m1.9p
  
  m1.10 <- pgls(PC2.Ecological.Opportunity ~ PC1.Ecological.Opportunity, data = com.dat, lambda = "ML")
  m1.10p <- summary(m1.10)$coefficients["PC1.Ecological.Opportunity", 4];m1.10p
  
  m1.11 <- pgls(PC1.Social.consequences ~ PC1.Ecological.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.11p <- summary(m1.11)$coefficients["PC1.Ecological.Opportunity", 4];m1.11p
  
  m1.12 <- pgls(PC1.Ecological.consequences ~ PC1.Ecological.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.12p <- summary(m1.12)$coefficients["PC1.Ecological.Opportunity", 4];m1.12p
  
  m1.13 <- pgls(PC1.Social.consequences ~ PC2.Ecological.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.13p <- summary(m1.13)$coefficients["PC2.Ecological.Opportunity", 4];m1.13p
  
  m1.14 <- pgls(PC1.Ecological.consequences ~ PC2.Ecological.Opportunity +Residuals_brain, data = com.dat, lambda = "ML")
  m1.14p <- summary(m1.14)$coefficients["PC2.Ecological.Opportunity", 4];m1.14p
  
  m1.15 <- pgls(PC1.Ecological.consequences ~ PC1.Social.consequences +Residuals_brain, data = com.dat, lambda = "ML")
  m1.15p <- summary(m1.15)$coefficients["PC1.Social.consequences", 4];m1.15p
  
  #C-statistic:
  C1 <- -2 * (log(m1.1p) + log(m1.2p) + log(m1.3p) + log(m1.4p) + log(m1.5p) + 
                log(m1.6p) + log(m1.7p) +log(m1.8p) +log(m1.9p) +log(m1.10p) +log(m1.11p) +log(m1.12p)+log(m1.13p)+ log(m1.14p)+log(m1.15p)); C1
  
  #C-statistic including only conditional independencies:
  C1 <- -2 * (log(m1.4p) + log(m1.5p) + log(m1.8p) +log(m1.9p)  +log(m1.11p) +log(m1.12p)+log(m1.13p)+ log(m1.14p)); C1
  
  C1.pval <- 1 - pchisq(C1, 2 * 8); C1.pval
  
@
    
%Phylogenetic path analysis with imputed data:
<<echo=F, results=hide>>=
    
    so <- soci.oppi[,c("Genus_species", "Brain.Size", "Body.Mass", "PC1.Social.Opportunity", "PC2.Social.Opportunity")]
  eo <- eci.oppi[,c("Genus_species", "PC1.Ecological.Opportunity", "PC2.Ecological.Opportunity")]
  sc <- soci.consi[,c("Genus_species",  "PC1.Social.consequences")]
  ec <- eco.consi[,c("Genus_species",  "PC1.Ecological.consequences")]
  
  md <- Reduce(function(x, y) merge(x, y, by="Genus_species", all=TRUE), list(so, eo, sc, ec))
  #str(md)
  
  
  ##IMPUTING DATA FROM: https://www.r-bloggers.com/imputing-missing-data-with-r-mice-package/
  #check how much of data is missing:
  pMiss <- function(x){sum(is.na(x))/length(x)*100}
  apply(md,2,pMiss)
  
  #impute data:
  library(mice)
  imput_data <- mice(md,m=1,maxit=50,meth='pmm',seed=500)
  #complete(imput_data)
  
  #look at imputet data:
  #densityplot(imput_data)
  #The density of the imputed data for each imputed dataset is showed in magenta while the density of the observed data is showed in blue. Again, under our previous assumptions we expect the distributions to be similar.
  #stripplot(imput_data, pch = 20, cex = 1.2)
  
  #str(imput_data)
  id <- complete(imput_data)
  
  id$Residuals_brain <- residuals(m1<-lm(log(Brain.Size) ~ log(Body.Mass), data=id, na.action=na.exclude))
  id$Genus_species <- as.vector(id$Genus_species)
  rownames(id) <- id$Genus_species
  
  #Tree:
  matches <- match(Petree$tip.label, id$Genus_species, nomatch=0)
  not <- subset(Petree$tip.label, matches==0)
  tree_pruned_pa_imput <- drop.tip(Petree, not)
  
  #run path analysis (without forcing an order):
  #result <- phylo_path(models, data = id, tree = tree_pruned_pa_imput)
  result_2 <- phylo_path(models2, data = id, tree = tree_pruned_pa_imput)
  
  #result:
  #xtable(summary(result))
  
  #extract the best model:
  best_model <- best(result_2)
  #plot(best_model)
@










%#################------------------------
%## PLOTS PAPER
%#################------------------------
<<echo=F, results=hide>>=


#jpeg("Fig.1a_Graber_et_al.jpeg", width = 12, height = 12, units = 'in', res = 300)
#par(mfrow=c(2,2), mar=c(5,5,3,1)+0.1)

#####################SOCIAL OPPORTUNITIES#######################################

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(soci.oppi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#layout(matrix(c(1,1,1,2,2,2,2), 1,7, byrow = TRUE))
#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#par(mfrow=c(1,2), mar=c(5,4,4,2)+0.1, mgp=c(2,1,0) )
#plot(ResBrainBody ~ (PC1.Social.Opportunity), dat_plot, xlim=c(-18,35),ylim=c(-0.90,1), #xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
#axis(side = 1, at=c(-20,-10,0,10,20,30,40), labels=c(-20,-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=4, col="darkgrey")

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Social.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC1.Social.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC1 social opp",ylab="", pch=(as.numeric(dat_plot_new$Family)-1), frame.plot = TRUE, axes=T, cex=1.7, lwd=2,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC1.Social.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")
#plot(ResBrainBody_gls ~ (PC1.Social.Opportunity), dat_plot_new, xlim=c(-18,35),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = T, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family )
#abline(lm(ResBrainBody_gls ~ (PC1.Social.Opportunity), data=dat_plot_new), lwd=4, col="darkgrey")
#text(dat_plot_new[,c("PC1.Social.Opportunity","ResBrainBody_gls")], labels=dat_plot_new[,"Family"],pos=4, cex=0.5)

#par(mar=c(8,8,4,12))
#plot(ResBrainBody ~ (PC2.Social.Opportunity), dat_plot,  xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-30,25), ylim=c(-0.90,1), cex=2.8, #cex.lab=2.5)
#axis(side = 1, at=c(-30,-20,-10,0,10,20), labels=c(-30,-20,-10,0,10,20), lwd=6, las=0, #cex.axis=1.8)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=1.8)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(a=-0.07,b=0.003, lwd=4, col="darkgrey")
#abline(lm(ResBrainBody ~ (PC1.Social.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#par(xpd=T)
#legend(28,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)

#with gls():
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC2.Social.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC2.Social.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC2 social opp",ylab="", pch=(as.numeric(dat_plot_new$Family)-1), frame.plot = TRUE, axes=T, cex=1.7, lwd=2,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC2.Social.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")
#plot(ResBrainBody_gls ~ (PC2.Social.Opportunity), dat_plot_new, xlim=c(-18,35),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = T, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family )
#abline(lm(ResBrainBody_gls ~ (PC2.Social.Opportunity), data=dat_plot_new), lwd=4, col="darkgrey")
#text(dat_plot_new[,c("PC1.Social.Opportunity","ResBrainBody_gls")], labels=dat_plot_new[,"Family"],pos=4, cex=0.5)


###########ECOLOGICAL OPPORTUNITIES#############################


dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(eci.oppi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.Opportunity")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mfrow=c(1,2), mar=c(8,8,4,10), mgp=c(5,2,0))
#plot(ResBrainBody ~ (PC1.Ecological.Opportunity), dat_plot, xlim=c(-35,30),ylim=c(-0.90,1), xlab="",ylab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8,  cex.lab=2.5, col=dat_plot$Family )
#axis(side = 1, at=c(-20,-10,0,10,20), labels=c(-20,-10,0,10,20), lwd=6, las=0, cex.axis=1.8)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=1.8)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(ResBrainBody ~ (PC1.Ecological.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#text(dat_plot[,c("PC1.Ecological.Opportunity","ResBrainBody")], labels=dat_plot[,"Genus_species"],pos=4, cex=0.5)

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC1.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC1.Ecological.Opportunity), xlim=c(-35,40),ylim=c(-0.90,1), xlab="PC1 Ecology",ylab="", pch=(as.numeric(dat_plot_new$Family)-1), frame.plot = TRUE, axes=T, cex=1.7,  cex.lab=2.5, col=dat_plot_new$Family, lwd=2))
interc <- coef(lm(ResBrainBody_gls ~ (PC1.Ecological.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")


#par(mar=c(8,8,4,12))
#plot(ResBrainBody ~ (PC2.Ecological.Opportunity), dat_plot,  xlab="",ylab="", pch=16, #frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-20,45), ylim=c(-0.90,1), cex=2.8, cex.lab=2.5)
#axis(side = 1, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#axis(side = 2, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(a=-0.05,b=0.005, lwd=4, col="darkgrey")
#abline(lm(ResBrainBody ~ (PC2.Ecological.Opportunity), data=dat_plot), lwd=4, col="darkgrey")
#par(xpd=F)
#legend(47,0.8, legend=levels(dat_plot$Family), col=1:length(levels(dat_plot$Family)), pch=16, bty="n", cex=1.6)

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(log(Brain.Size) ~ log(Body.Mass) + PC2.Ecological.Opportunity, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(ResBrainBody_gls ~ (PC2.Ecological.Opportunity), xlim=c(-35,45), ylim=c(-0.90,1), xlab="PC2 Ecology",ylab="", pch=(as.numeric(dat_plot_new$Family)-1), frame.plot = TRUE, axes=T, cex=1.7, lwd=2, cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(ResBrainBody_gls ~ (PC2.Ecological.Opportunity), dat_plot_new) )[1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")


#########################BOOTSTRAPPING#############################3

# ggplot(data = dat_boot_dist_PC1_2, aes(x = Estimates, group = Variables)) +
#  geom_density(aes(fill = Variables), alpha = 0.5) +
#  theme(axis.title=element_text(size="36", color="black"), axis.text.x  = element_text(vjust=0.5, size=18, colour = "black"),axis.text.y = element_text(colour = "black", vjust=0.5, size=20), panel.border = element_rect(colour = "black", fill=NA), plot.title = element_text(size=32), panel.background = element_blank(), strip.background = element_blank(), axis.title.y=element_text(margin=margin(0,25,0,0)), axis.title.x=element_text(margin=margin(0,-10,0,0)), axis.ticks.length = unit(.30, "cm")) +
#  scale_fill_manual( values = c("olivedrab4","steelblue3")) +
#  theme(legend.position = c(0.78, 0.7), legend.title=element_blank(), legend.text=element_text(size=17)) +
#  xlab("")+
#  ylab("")
# labs(title = "1000 Bootstrap replicates") #+
# ggplot(data = dat_boot_dist_PC2_2, aes(x = Estimates, group = Variables)) +
#  geom_density(aes(fill = Variables), alpha = 0.5) +
#  theme(axis.title=element_text(size="36", color="black"), axis.text.x  = element_text(vjust=0.5, size=18, colour = "black"),axis.text.y = element_text(colour = "black", vjust=0.5, size=20), panel.border = element_rect(colour = "black", fill=NA), plot.title = element_text(size=32), panel.background = element_blank(), strip.background = element_blank(), axis.title.y=element_text(margin=margin(0,25,0,0)), axis.title.x=element_text(margin=margin(0,-10,0,0)), axis.ticks.length = unit(.30, "cm")) +
#  scale_fill_manual( values = c("olivedrab4","steelblue3")) +
#  theme(legend.position = c(0.8, 0.9), legend.title=element_blank(), legend.text=element_text(size=17)) +
#  xlab("")+
#  ylab("")
#  labs(title = "1000 Bootstrap replicates") #+
# 
# 
# dev.off()


###CONSEQUENCES:============================================
#par(mfrow=c(1,1), mar=c(5,5,4,2)+0.1)
dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(soci.consi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#plot((PC1.Social.consequences) ~ ResBrainBody , dat_plot,  ylab="",xlab="", pch=16, frame.plot = FALSE, axes=F,  col=dat_plot$Family , xlim=c(-0.9,1), ylim=c(-13,65), cex=2.8, cex.lab=2.5)
#axis(side = 2, at=c(0,10,20,30,40,50), labels=c(0,10,20,30,40,50), lwd=6.0, las=0, cex.axis=2)
#axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6.0, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6.0) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6.0)
#abline(lm(PC1.Social.consequences ~ ResBrainBody, data=dat_plot), lwd=4, col="darkgrey")

#with gls():
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(PC1.Social.consequences ~ log(Body.Mass) + log(Brain.Size), correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(PC1.Social.consequences ~ ResBrainBody_gls, xlim=c(-0.9,1), ylim=c(-13,65), xlab="PC1 Social",ylab="", pch=(as.numeric(dat_plot_new$Family)-1), frame.plot = TRUE, axes=T, cex=1.7, lwd=2,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(PC1.Social.consequences ~ ResBrainBody_gls, dat_plot_new)) [1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")

##======================================================

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(eco.consi, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#plot(PC1.Ecological.consequences ~ ResBrainBody, dat_plot, xlim=c(-0.9,0.85), ylim=c(-10,45),xlab="", ylab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8, col=dat_plot$Family, cex.lab=2.5)
#axis(side = 2, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#axis(side = 1, at=c(-1,-0.5,0,0.5), labels=c(-1,-0.5,0,0.5), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(PC1.Ecological.consequences ~ ResBrainBody, data=dat_plot), lwd=4, col="darkgrey")

#with gls:
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)#dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(PC1.Ecological.consequences ~ log(Body.Mass) + log(Brain.Size), correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[3]
with(dat_plot_new, plot(PC1.Ecological.consequences ~ ResBrainBody_gls, xlim=c(-0.9,1), ylim=c(-13,65), xlab="PC1 Social",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(PC1.Ecological.consequences ~ ResBrainBody_gls, dat_plot_new)) [1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")
##==============================================================

dat_order <- read.table("Infraorder_Family_primates.txt", header=T, sep="\t")
dat_plot <- merge(data1_PC_soc_eco_consequences, dat_order, by="Genus_species", all.x=T)
dat_plot <- dat_plot[complete.cases(dat_plot[,c("ResBrainBody", "PC1.Ecological.consequences", "PC1.Social.consequences")]), ]

#palette contains 16 different colors for the 16 different primate families:
#palette(c("deepskyblue2", "goldenrod1","aquamarine3", "firebrick3","darkorange2", "yellowgreen", "royalblue3", "palevioletred3" , "seagreen4","violetred1", "plum", "lightsteelblue3", "brown", "azure4", "black", "tan"))

#par(mar=c(8,8,4,12), mgp=c(2.5,0.9,0))
#par(mgp=c(2.2,1,0))
#plot(PC1.Social.consequences ~ PC1.Ecological.consequences, dat_plot, xlim=c(-10,45), ylim=c(-10,65),ylab="", xlab="", pch=16, frame.plot = FALSE, axes=F, cex=2.8, col=dat_plot$Family, cex.lab=2.5)
#axis(side = 2, at=c(-10,0,10,20,30,40,50,60), labels=c(-10,0,10,20,30,40,50,60), lwd=6, las=0, cex.axis=2)
#axis(side = 1, at=c(-10,0,10,20,30,40), labels=c(-10,0,10,20,30,40), lwd=6, las=0, cex.axis=2)
#u <- par("usr") 
#myArrow(u[1], u[3], u[2], u[3], code = 2, xpd = TRUE, lwd=6) 
#myArrow(u[1], u[3], u[1], u[4], code = 2, xpd = TRUE, lwd=6)
#abline(lm(PC1.Social.consequences ~ PC1.Ecological.consequences, data=dat_plot), lwd=4, col="darkgrey")

#with gls:
matches <- match(Petree$tip.label, dat_plot$Genus_species, nomatch=0)
not <- subset(Petree$tip.label, matches==0)
tree_pruned <- drop.tip(Petree, not)
rownames(dat_plot) <- dat_plot$Genus_species
fit1 <- gls(log(Brain.Size) ~ log(Body.Mass),  data=dat_plot)
ResBrainBody_gls <- data.frame(Genus_species=rownames(data.frame(fit1$residuals)), ResBrainBody_gls=fit1$residuals)
dat_plot_new <- merge(ResBrainBody_gls, dat_plot, by="Genus_species")
rownames(dat_plot_new) <- dat_plot_new$Genus_species
fit2 <- gls(PC1.Social.consequences ~ PC1.Ecological.consequences, correlation=corPagel(value=0.5, phy=tree_pruned), data=dat_plot_new)
slo <- coef(fit2)[2]
with(dat_plot_new, plot(PC1.Social.consequences ~ PC1.Ecological.consequences, xlim=c(-10,45), ylim=c(-10,65), xlab="PC1 Social",ylab="", pch=16, frame.plot = TRUE, axes=T, cex=2.8,  cex.lab=2.5, col=dat_plot_new$Family ))
interc <- coef(lm(PC1.Social.consequences ~ PC1.Ecological.consequences, dat_plot_new)) [1]
#abline(fit2, lwd=4, col="darkgrey")
abline(a=interc, b=slo, lwd=4, col="darkgrey")
@





%%%===========================
%%%====REFERENCES=============
%%%===========================

%\addcontentsline{toc}{section}{References} %that the section is mentioned in the table of contents
%\bibliographystyle{sim} %Style of Bibliography: plain / apalike / amsalpha / ...
%\bibliography{LibrarySOM} %You need a file 'LibrarySOM.bib' for this.
%\nocite{*} %Even non-cited BibTeX-Entries will be shown.




\end{document}
